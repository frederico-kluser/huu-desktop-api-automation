{
  "project_metadata": {
    "name": "NutJS REST API for Desktop and UI Automation via HTTP",
    "domain": [
      "Desktop Automation",
      "UI Automation",
      "Input Device Control",
      "Screen Capture",
      "Clipboard Management",
      "Keyboard Input Automation",
      "Mouse Control",
      "Backend API",
      "Test Automation",
      "Real-time Event Streaming",
      "Image Processing",
      "Optical Character Recognition",
      "System Integration",
      "Validation",
      "Error Handling"
    ],
    "current_phase": [
      "Production",
      "MVP",
      "Version 1.0.0",
      "Stable with real-time streaming support",
      "Development",
      "Initial implementation of command architecture",
      "Pre-production",
      "Optimized build",
      "Integration tests",
      "Automated tests",
      "Unit tests implemented for core features",
      "Maintenance"
    ],
    "critical_business_rules": [
      "System permissions must be respected",
      "Strict input validation to prevent invalid commands",
      "Maintain integrity of automation operations",
      "Continuous service availability",
      "Automatic restart on excessive memory usage",
      "Error and output logs for auditing",
      "Safe execution of UI commands",
      "Maintain consistent system state",
      "Strict validation of input coordinates to prevent out-of-bounds actions",
      "Minimum confidence threshold for image recognition",
      "Timeouts for template waits",
      "Image buffer integrity",
      "Sequential and correct execution of automation commands",
      "Isolate hardware dependencies via adapters",
      "Environment variables must be correctly defined",
      "API key must not be empty in production",
      "Standardized result return for integration",
      "Extensibility for new command types",
      "Immutability of actions after creation",
      "Consistent typing of options",
      "Accurate definition of regions",
      "Consistent conversion from MatchResult to ScreenRegion",
      "Stop execution on command failure",
      "Detailed success/failure results",
      "Server availability must be maintained",
      "Consistent API response integrity",
      "Precise cursor movement",
      "Correct mouse button mapping",
      "Reliable execution of clicks and drags",
      "Configurable confidence for screen capture",
      "Strict JSON Schema input validation",
      "Standardized responses with success status",
      "Integrity of SSE stream",
      "Errors must be handled and returned with appropriate HTTP status",
      "Clear and standardized error messages",
      "Error logs must contain sufficient context for debugging",
      "No stack trace exposure in production",
      "Immediate response to invalid data with status 400",
      "Reliable event streaming",
      "Accurate keyboard input handling",
      "Stable route registration",
      "Build must be clean and error-free",
      "Strict typing to prevent bugs",
      "Sensitive configuration files must not be versioned",
      "No versioning of dependencies and generated artifacts",
      "Clipboard content must not be empty or exceed 1 MB",
      "Text must not be empty or contain only control characters",
      "Supported key list enforcement",
      "Key combinations limited to 5 valid keys",
      "Operations must return standardized results",
      "Failures must be handled and reported",
      "Strict text sanitization to prevent control characters",
      "Max text length for typing: 10000 characters",
      "Max delay for timing strategies: 300000ms",
      "Batch size between 1 and 1000",
      "Default mode must be one of: instant, perChar, total",
      "Consistent response for success and failure",
      "No loss of error messages",
      "Returned data integrity",
      "Services must implement automation contracts",
      "Command execution must be traceable via CommandResult",
      "Standard key support",
      "Robust error handling",
      "Input operations must be atomic and reliable",
      "Clipboard content integrity must be preserved",
      "Error responses must be consistent and informative",
      "Payloads must conform to JSON Schema Draft 7",
      "Clipboard content must be a non-empty string",
      "No additional properties allowed in requests",
      "Strict input data validation to prevent injection or malformed commands",
      "API key authentication required for all endpoints",
      "Strict parameter validation to prevent invalid commands",
      "Max response time of 5000ms to ensure performance",
      "Max size limits for text and clipboard content (e.g., 10,000 characters for typing, 1MB for clipboard)",
      "Correct HTTP responses for routes",
      "Complete logs for auditing",
      "Chronological event order must be maintained",
      "Correct replay after reconnection",
      "Buffer size limit to prevent memory overflow",
      "Rate limiting to prevent overload",
      "Reliable event distribution to all listeners",
      "Invalid event filtering",
      "Buffer size between 1 and 100000",
      "Heartbeat interval between 1000 and 300000 ms",
      "Max event rate between 1 and 50000 events/s",
      "Max event age between 1000 and 3600000 ms",
      "Logs must be configured according to environment",
      "Log levels must respect environment variables",
      "Reliable event delivery",
      "SSE connections must remain active with heartbeats",
      "No event loss during reconnections",
      "Real-time event delivery via SSE",
      "Event buffer integrity and consistency",
      "Respect max event age limits for stored events",
      "Event integrity and order",
      "Correct timestamp for synchronization",
      "Unique event identification",
      "API key must be provided for connection",
      "Event logs must not exceed 100 entries",
      "Connection status must be accurately reflected",
      "API must return success:true",
      "Image field must be present and valid base64",
      "Saved PNG must have valid header and minimum size"
    ]
  },
  "technical_stack": {
    "primary_language": [
      "TypeScript 5.x",
      "JavaScript (Node.js)",
      "Node.js 18+",
      "ECMAScript 2022"
    ],
    "frameworks": [
      "Fastify 4.x",
      "TSyringe 4.x",
      "Zod 3.x",
      "PM2 5.x",
      "Jest 29.x",
      "ESLint 8.x",
      "NutJS 4.2",
      "dotenv 16.0",
      "Sharp",
      "Clipboardy 3.x",
      "OpenCV 4.7",
      "Tesseract OCR 5.0"
    ],
    "databases": [
      "None"
    ],
    "external_services": [
      "@nut-tree-fork/nut-js",
      "dotenv",
      "Clipboardy",
      "Sharp",
      "MouseService",
      "ScreenService",
      "API key authentication",
      "Server-Sent Events (SSE)",
      "pino logger",
      "nanoid",
      "Operating System APIs for keyboard and clipboard control",
      "EventSource (SSE client)",
      "Cloud Storage API",
      "Authentication Service (OAuth2)",
      "Environment Variables (process.env)"
    ],
    "package_manager": [
      "npm",
      "yarn",
      "pip"
    ]
  },
  "architecture_patterns": {
    "design_pattern": [
      "Clean Architecture",
      "Dependency Injection",
      "Modular Architecture",
      "REST API",
      "Schema Validation Pattern",
      "Command Pattern",
      "Service Layer",
      "Adapter Pattern",
      "Singleton",
      "Factory Method",
      "Middleware Pattern",
      "Layered Architecture",
      "Plugin Pattern",
      "Controller Pattern",
      "DTO",
      "Observer",
      "Circular Buffer",
      "Rate Limiter",
      "Strategy"
    ],
    "folder_structure": [
      "src/ - main source code",
      "dist/ - build output",
      "tests/ - unit and integration tests",
      "config/ - global configuration",
      "domain/entities - domain entities",
      "application/services - business logic and services",
      "infrastructure/adapters - hardware adapters",
      "interface/controllers - HTTP controllers",
      "schemas/ - JSON Schema and Zod validation",
      "types/ - TypeScript type definitions",
      "logs/ - log files",
      "node_modules/ - external dependencies",
      "coverage/ - test coverage reports"
    ],
    "naming_conventions": [
      "camelCase for variables and functions",
      "PascalCase for classes and interfaces",
      "kebab-case for files",
      "UPPER_SNAKE_CASE for environment variables",
      "Suffix Service, Adapter, Controller for responsibilities",
      "Prefix I for interfaces",
      "Suffix Middleware for middlewares",
      "Suffix Schema for validation objects"
    ],
    "module_boundaries": [
      "Unidirectional dependencies from Domain to Application, Infrastructure, and Interface",
      "Clear separation between business logic and infrastructure",
      "Dependency injection to decouple modules",
      "Separation between API (Fastify) and automation logic (NutJS)",
      "Isolated data validation modules",
      "Separation between domain, DTOs, and services",
      "Controllers encapsulate business logic",
      "Routes only register endpoints and delegate to controllers",
      "Isolated error definition and error handling middleware",
      "Isolated configuration module exported for global use",
      "Separation between production code and tests",
      "Mocks isolated in test configuration",
      "Separation between mouse, keyboard, clipboard, and screen operations",
      "Isolated authentication module",
      "Buffer and dispatcher modules for event streaming"
    ]
  },
  "code_standards": {
    "style_guide": [
      "Airbnb JavaScript Style Guide adapted for TypeScript",
      "ESLint Recommended",
      "Prettier"
    ],
    "linting_rules": [
      "ESLint with @typescript-eslint plugin",
      "eslint-config-prettier to disable conflicting rules",
      "Prohibition of explicit any",
      "Strict typing",
      "No unused variables",
      "Async/await required for async operations"
    ],
    "formatting": [
      "Prettier with default settings",
      "semi: true",
      "singleQuote: true",
      "tabWidth: 2",
      "trailingComma: all",
      "printWidth: 100"
    ],
    "documentation_style": [
      "JSDoc for functions and classes",
      "JSDoc for public methods and interfaces",
      "Inline comments in Portuguese for context"
    ],
    "type_checking": [
      "Strict TypeScript",
      "noImplicitAny",
      "strictNullChecks",
      "Explicit types for parameters and returns"
    ]
  },
  "testing_strategy": {
    "test_framework": [
      "Jest 29.x",
      "Postman Tests (JavaScript)",
      "Pytest 7.4"
    ],
    "test_structure": [
      "tests/unit for unit tests",
      "tests/integration for integration tests",
      "**/__tests__/**/*.test.ts",
      "**/tests/**/*.spec.ts",
      "Mocks for external dependencies"
    ],
    "coverage_requirements": [
      "Minimum 80% coverage",
      "branches >= 80%",
      "functions >= 80%",
      "lines >= 80%",
      "statements >= 80%"
    ],
    "test_patterns": [
      "Arrange-Act-Assert (AAA)",
      "Given-When-Then for integration tests",
      "Use of mocks for external dependencies",
      "Async tests with fake timers"
    ],
    "mocking_approach": [
      "Jest mocks and spies",
      "Mocks for MouseService and ScreenService",
      "Mocks for hardware adapters and event dispatchers",
      "Mocks for external services and timers",
      "Mocks for FastifyRequest and FastifyReply",
      "Mocks for clipboardy",
      "Mocks for environment variables"
    ]
  },
  "development_workflow": {
    "branch_strategy": [
      "GitHub Flow",
      "git Flow"
    ],
    "commit_conventions": [
      "Conventional Commits"
    ],
    "pr_requirements": [
      "Code review mandatory",
      "Passing CI checks",
      "Automated tests passing",
      "Lint and test checks"
    ],
    "ci_cd_pipeline": [
      "Linting",
      "Testing",
      "Build",
      "Deployment",
      "Build, test, lint, deploy automated via GitHub Actions"
    ]
  },
  "commands": {
    "setup": [
      "cp .env.example .env",
      "npm install",
      "python -m venv venv && source venv/bin/activate && pip install -r requirements.txt"
    ],
    "install": [
      "npm install",
      "yarn install",
      "pip install -r requirements.txt"
    ],
    "dev": [
      "npm run dev",
      "tsc --watch",
      "node --loader esm src/index.js",
      "flask run --reload"
    ],
    "test": [
      "npm test",
      "npm run test",
      "pytest --cov=ocr_module tests/"
    ],
    "build": [
      "npm run build",
      "npm run build:prod",
      "tsc",
      "docker build -t ocr-service ."
    ],
    "lint": [
      "npm run lint",
      "npx eslint .",
      "eslint . --ext .ts,.tsx",
      "flake8 ocr_module/"
    ],
    "format": [
      "npm run format",
      "npx prettier --write .",
      "prettier --write .",
      "black ocr_module/"
    ]
  },
  "security_constraints": {
    "authentication_method": [
      "API key via HTTP header x-api-key",
      "JWT (JSON Web Token)",
      "OAuth2"
    ],
    "authorization_rules": [
      "Role-based access control for sensitive endpoints",
      "Requests without or with invalid API key are rejected",
      "API key required for all API connections and calls"
    ],
    "sensitive_data": [
      "Environment variables for configuration",
      "API keys",
      "Clipboard content must be handled carefully to avoid leaks",
      "User input data",
      "JWT tokens",
      "Buffers of base64 images must be protected",
      "Sensitive configuration files (.env) are ignored in version control"
    ],
    "security_headers": [
      "Content-Security-Policy",
      "X-Content-Type-Options",
      "Strict-Transport-Security",
      "Cache-Control",
      "CORS",
      "Content-Type: application/json",
      "x-api-key for authentication"
    ],
    "encryption_requirements": [
      "TLS for HTTP communication",
      "AES-256 for data at rest",
      "JWT token encryption",
      "HTTPS recommended for secure transport"
    ]
  },
  "performance_requirements": {
    "response_time_limits": [
      "< 200ms for REST routes",
      "< 100ms for event streaming",
      "Minimum 100ms, maximum 5000ms for actions",
      "Default timeout 5000ms for template waits",
      "Screen capture must be performed in milliseconds to seconds",
      "Error responses must be fast to avoid UX impact",
      "At least 5 events per second for streaming",
      "Test timeout set to 10000ms",
      "Operations should respond in less than 500ms under normal conditions",
      "Low latency expected for clipboard operations",
      "Real-time updates with minimal latency"
    ],
    "optimization_priorities": [
      "Speed and responsiveness for automation commands",
      "Memory control to avoid crashes",
      "Fastify server speed and scalability",
      "Reliability and accuracy over raw speed",
      "Smooth movement prioritized over raw speed",
      "Efficient resource usage for responsiveness",
      "Efficient validation to avoid overhead on large payloads",
      "Low latency for real-time event streaming",
      "Efficient logging and buffer management",
      "Performance in production, readability in development"
    ],
    "caching_strategy": [
      "In-memory buffer for event streaming",
      "Configurable TTL for routes",
      "No cache for real-time streaming",
      "Buffer for event replay and loss reduction"
    ],
    "scalability_considerations": [
      "Modular architecture for horizontal scalability",
      "Support for multiple SSE connections",
      "Stateless middleware for scalability",
      "Horizontal scaling via multiple Fastify instances",
      "Configurable for different event loads",
      "Efficient management of listeners and SSE connections",
      "Singleton limits direct horizontal scalability; possible future extension"
    ]
  },
  "error_handling": {
    "error_format": [
      "Standard JSON with message and HTTP code",
      "CommandResult with success boolean and optional error string",
      "Centralized error handler middleware format",
      "JSON with fields: success, error, code, and optional details",
      "Zod validation errors with clear messages",
      "HTTP status codes for not found and validation errors"
    ],
    "logging_strategy": [
      "Structured logging with pino and pino-pretty",
      "Separate logs for errors (logs/error.log) and output (logs/out.log)",
      "Log level configurable via environment variable",
      "Logs stored in /logs, *.log files ignored in version control",
      "Pretty print in development",
      "Logs disabled in tests"
    ],
    "monitoring_tools": [
      "PM2 for monitoring and automatic restart",
      "Prometheus",
      "Grafana",
      "EventDispatcher for input events"
    ],
    "error_recovery": [
      "Automatic process restart on memory limit (1G)",
      "Error handling via Fastify middleware",
      "Immediate response with status 400 for validation errors",
      "Graceful shutdown to avoid request loss",
      "Retry mechanism for transient failures",
      "Fallbacks for critical routes",
      "Recovery via last-event-id for lost events",
      "Removal of listeners and cleanup on disconnect"
    ]
  },
  "dependencies_context": {
    "critical_dependencies": [
      "@nut-tree-fork/nut-js",
      "Fastify",
      "TSyringe",
      "Zod",
      "Node.js",
      "PM2",
      "pino",
      "dotenv",
      "Sharp",
      "Clipboardy",
      "Jest",
      "TypeScript",
      "nanoid",
      "EventSource",
      "OpenCV",
      "Tesseract OCR"
    ],
    "deprecated_packages": [
      "None"
    ],
    "version_constraints": [
      "@nut-tree-fork/nut-js ^4.2.0",
      "fastify ^4.24.0",
      "typescript ^5.3.2",
      "zod >=3.0.0",
      "tsyringe 4.x",
      "pino 8.x",
      "clipboardy >=3.0.0",
      "dotenv >=16.0.0",
      "Jest >=29.x",
      "Node.js >=18"
    ],
    "internal_packages": [
      "domain/entities",
      "domain/use-cases",
      "application/services",
      "infrastructure/adapters",
      "interface/controllers",
      "schemas",
      "types",
      "config",
      "routes",
      "shared"
    ]
  },
  "current_challenges": {
    "technical_debt": [
      "Error handling could be more granular",
      "Input validation can be strengthened",
      "Base execute methods not implemented in subclasses",
      "Lack of formal automated tests",
      "Authentication and authorization missing on endpoints",
      "Documentation incomplete for controllers",
      "Test coverage can be expanded for edge and integration cases",
      "Supported key list maintenance",
      "Clipboard content size limit is fixed and may be inflexible",
      "Need to support more typing strategies",
      "Performance improvements for very long texts",
      "Interface is too generic and may lead to inconsistent implementations",
      "Validation of maximum content size not implemented in schema",
      "Missing static typing may hinder maintenance",
      "Routes not implemented",
      "Manual listener management could be improved with abstractions"
    ],
    "known_issues": [
      "Possible latency in smooth scroll with many steps",
      "Potential overhead in frequent base64 decoding",
      "Risk of exceptions if execute is not overridden",
      "Search and wait functionalities not implemented",
      "Potential resource leak in SSE streams if connections are not closed properly",
      "Possible latency in streaming under high load",
      "Dependency on local API availability",
      "Compatibility limited to environments with ES2022 and decorators support",
      "No explicit validation of environment variable values",
      "Clipboardy may show inconsistencies on some OS",
      "Delay accumulation may impact UX for large texts",
      "Possible acceptance of payloads larger than 1MB",
      "Performance limitations in screen capture and recognition operations",
      "Possible event loss when exceeding rate limit",
      "Direct dependency on environment variables may cause failures if not configured correctly",
      "Possible overhead with many simultaneous SSE clients",
      "Insecure storage of API key",
      "Unsecured connection (HTTP)"
    ],
    "performance_bottlenecks": [
      "Single instance limitation may impact performance under high load",
      "Potential latency in UI automation depending on environment",
      "Async loops in scroll may impact responsiveness",
      "Synchronous buffer operations may impact performance",
      "Sequential execution may limit throughput",
      "Delays in loops may impact performance in long movements",
      "Large image processing may impact memory and CPU",
      "Continuous streaming may impact performance under high load",
      "Fixed delays may impact total execution time",
      "Image preprocessing step is CPU intensive",
      "Interpolated movements may be costly at high frequency",
      "Smooth scroll may generate multiple calls, impacting performance on limited devices",
      "Intensive use of await in sequential loops",
      "Incorrect configurations may impact typing performance",
      "Screen capture and image recognition operations may be costly",
      "Synchronous processing of listeners may impact performance",
      "Buffer and dispatcher may become bottlenecks at scale"
    ],
    "migration_status": [
      "Initial project, no migrations in progress",
      "Migration to Fastify 4 completed",
      "Stable, no migrations ongoing"
    ]
  },
  "team_preferences": {
    "code_review_focus": [
      "Code quality",
      "Test coverage",
      "Security and validation",
      "Type and limit validation",
      "Naming consistency",
      "Error handling validation",
      "Dependency injection consistency",
      "Coordinate validation",
      "Clear separation of responsibilities",
      "Strict typing",
      "Clear documentation",
      "No unjustified any usage",
      "Schema validation, error handling, correct use of dependency injection",
      "Test coverage for all error cases",
      "Correct schema validation",
      "Clear and simple schemas",
      "Performance of async processing",
      "Correct buffer usage",
      "Logging clarity",
      "Error handling completeness"
    ],
    "documentation_requirements": [
      "Clear documentation via JSDoc and README",
      "JSDoc for public methods and interfaces",
      "Document environment variables and default values",
      "Clear documentation for each command and its parameters",
      "JSDoc for all schemas and types",
      "Clear documentation for endpoints and data contracts",
      "JSDoc for all public methods",
      "Clear documentation for configuration values and limits",
      "JSDoc for all interfaces and public functions",
      "Clear documentation for each implemented service"
    ],
    "communication_style": [
      "Clear and objective comments",
      "Use of PRs for discussions",
      "Technical and objective comments",
      "PRs with detailed description",
      "Clear comments in Portuguese for context",
      "Use of technical terms in English for rules",
      "Objective comments and use of JSDoc",
      "Clear and informative comments, no excessive verbosity"
    ],
    "decision_log": [
      "Adoption of Fastify for performance",
      "Use of tsyringe for DI",
      "Validation with Zod",
      "Separation between mouse and screen services",
      "Use of DI for testability and modularity",
      "Use of NutJS for hardware abstraction",
      "Use of dotenv for configuration",
      "Command pattern for modularity and extensibility",
      "Factory Method for action creation",
      "Use of interfaces for data contracts",
      "Immediate stop on failures for safety",
      "Use of Clean Architecture and SSE for real-time streaming",
      "Centralized error handling in middleware",
      "Declarative validation with Zod",
      "1MB limit for clipboard content",
      "Strategy pattern for typing flexibility",
      "EventDispatcher for event decoupling",
      "Immutable configuration for safety and predictability",
      "Adapter pattern for hardware abstraction",
      "Strict coordinate validation",
      "Strict async/await and explicit types for quality",
      "Jest for testing",
      "Global logger mock to avoid log pollution in tests",
      "Linear interpolation for smooth movement",
      "Singleton pattern for unique instance",
      "Configurable rate limiting for flow control",
      "SSE for unidirectional streaming",
      "Buffer for replay of lost events",
      "Local persistence for API key",
      "Base64 image decoding and PNG header validation"
    ]
  },
  "api_specifications": {
    "api_style": [
      "REST",
      "RESTful API",
      "REST with HTTP POST and GET endpoints",
      "REST with SSE endpoint for streaming"
    ],
    "versioning_strategy": [
      "URL versioning (/api/v1/)",
      "Semantic versioning via package.json",
      "URI prefix /api/v1"
    ],
    "response_formats": [
      "JSON",
      "{ success: boolean, error?: string, data?: any }",
      "Base64 encoded images",
      "CommandResult with success, data, and error",
      "application/json",
      "JSON for REST endpoints, text/event-stream for SSE"
    ],
    "rate_limiting": [
      "Configurable rate limiting per route",
      "Default limit of 5000 events per second",
      "Configurable maxRate in inputEventsConfig"
    ]
  },
  "deployment_context": {
    "environments": [
      "development (http://localhost:3000)",
      "production (configurable via .env)",
      "staging",
      "test"
    ],
    "deployment_method": [
      "PM2 process manager",
      "Docker container",
      "CI/CD pipeline",
      "Node.js runtime"
    ],
    "environment_variables": [
      "NODE_ENV",
      "PORT",
      "HOST",
      "LOG_LEVEL",
      "MOUSE_SPEED",
      "SCREEN_CONFIDENCE",
      "API_KEY",
      "API_URL",
      "SCREEN_ADAPTER_IMPLEMENTATION",
      "KEYBOARD_DEFAULT_MODE",
      "KEYBOARD_MAX_TEXT_LENGTH",
      "KEYBOARD_DEFAULT_DELAY_PER_CHAR",
      "KEYBOARD_MAX_DELAY",
      "KEYBOARD_BATCH_SIZE",
      "INPUT_EVENT_BUFFER",
      "INPUT_EVENT_RATE",
      "INPUT_EVENT_HEARTBEAT",
      "INPUT_EVENT_MAX_AGE",
      "INPUT_EVENT_DEBUG",
      "OCR_API_KEY",
      "DATABASE_URL",
      "REDIS_URL"
    ],
    "infrastructure_constraints": [
      "Accessibility permissions on macOS",
      "DISPLAY variable on Linux",
      "Memory limit set to 1G for automatic restart",
      "Requires Node.js >=18",
      "Compatible with Linux, Windows, and macOS",
      "Requires access to desktop for automation",
      "Requires access to OS APIs for input and clipboard",
      "Requires local API running on port 3000",
      "Persistent SSE connections required",
      "Resource limits depend on execution environment"
    ]
  },
  "lastCommitHash": "67041292c6f0f752640d9ea84416fbb24b09bdc1"
}

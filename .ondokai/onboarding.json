{
  "project_metadata": {
    "name": "NutJS Desktop Automation API - RESTful service for programmatic mouse and screen control",
    "domain": [
      "Desktop Automation",
      "UI Automation",
      "Visual Recognition",
      "REST API Backend",
      "Node.js",
      "TypeScript",
      "End-to-End Testing",
      "Robotic Process Automation (RPA)",
      "Optical Character Recognition",
      "Document Processing"
    ],
    "current_phase": [
      "Production",
      "Maintenance",
      "MVP",
      "Version 1.0.0",
      "Stabilization",
      "Active Development",
      "Pre-production",
      "Optimized Build"
    ],
    "critical_business_rules": [
      "Ensure code is free from common async/await errors",
      "Avoid explicit use of any",
      "Maintain style consistency with Prettier",
      "System permissions must be respected",
      "Strict validation of inputs to prevent invalid commands",
      "Maintain integrity of automation operations",
      "Continuous service availability",
      "Automatic restart on excessive memory usage",
      "Error and output logs for auditing",
      "Safe execution of UI commands",
      "Strict validation of coordinates to prevent off-screen actions",
      "Duration limits between 100 and 5000 ms",
      "Minimum confidence for template recognition: 0.8",
      "Standardized result return for integration",
      "Extensibility for new command types",
      "Immutability of actions after creation",
      "Stop execution on command failure",
      "Detailed success/failure results",
      "Configurable mouse speed within safe limits",
      "Correct mapping of mouse buttons",
      "Reliable execution of asynchronous commands",
      "Minimum image recognition accuracy",
      "Timeouts for visual element waits",
      "Strict typing must be maintained",
      "Exclusion of node_modules and dist from build",
      "Support for experimental decorators",
      "Sensitive configuration files must not be versioned",
      "Strict data privacy compliance",
      "Non-modification of original images",
      "Exclude test files from build",
      "Remove comments for clean code",
      "No source maps in production"
    ]
  },
  "technical_stack": {
    "primary_language": [
      "TypeScript 5.x",
      "JavaScript (Node.js)",
      "Node.js 18.x",
      "ECMAScript 2024",
      "Python 3.11"
    ],
    "frameworks": [
      "Fastify 4.x",
      "TSyringe 4.x",
      "Zod 3.x",
      "PM2 5.x",
      "Jest 29.x",
      "ESLint 8.x",
      "NutJS 2.x",
      "dotenv 16.x",
      "pino 8.x",
      "Express 4.x",
      "Tesseract OCR 5.0",
      "OpenCV 4.7",
      "Flask 2.3"
    ],
    "databases": [
      "PostgreSQL 15"
    ],
    "external_services": [
      "NutJS",
      "dotenv for environment configuration",
      "MouseService",
      "ScreenService",
      "@nut-tree-fork/nut-js (screen API)",
      "pino (logging)",
      "NutJS APIs for mouse and screen control",
      "AutomationService (IAutomationExecutor interface)",
      "Local REST API NutJS Mouse Control",
      "Postman for API testing",
      "Localhost HTTP server (http://localhost:3000)",
      "Cloud Storage API",
      "Authentication Service (OAuth2)"
    ],
    "package_manager": [
      "npm",
      "yarn",
      "pip"
    ]
  },
  "architecture_patterns": {
    "design_pattern": [
      "Plugin-based Architecture",
      "Declarative Configuration",
      "Clean Architecture",
      "Process Manager Pattern",
      "Dependency Injection",
      "Modular Architecture",
      "REST API",
      "Layered Architecture",
      "Schema Validation",
      "Type-safe API Contracts",
      "Command Pattern",
      "Adapter Pattern",
      "Service Layer",
      "Feature Flags",
      "Template Method",
      "Factory Method",
      "Middleware Pattern",
      "Centralized Error Handling",
      "Client-Server",
      "Strict typing enforcement",
      "Declarative Data Modeling",
      "Pipeline",
      "Configuration Inheritance"
    ],
    "folder_structure": [
      "src/ - main source code",
      "domain/entities - domain entities",
      "application/services - business logic and services",
      "infrastructure/adapters - integration adapters",
      "interface/controllers - route controllers",
      "src/controllers - API route handlers",
      "src/services - business logic",
      "src/utils - utility functions",
      "src/schemas - Zod schema definitions",
      "src/types - type definitions",
      "src/config - centralized configuration",
      "src/env - environment variable loading",
      "src/commands - automation commands",
      "src/models - domain interfaces and classes",
      "tests/ - unit and integration tests",
      "dist/ - build output",
      "logs/ - log files",
      "coverage/ - test coverage reports",
      "node_modules/ - external dependencies",
      ".vscode/, .idea/ - IDE configurations",
      "Schemas organized in separate files for each interaction type",
      "/preprocessing - image cleaning",
      "/recognition - OCR logic",
      "/postprocessing - text correction",
      "/api - integration endpoints"
    ],
    "naming_conventions": [
      "camelCase for variables and functions",
      "PascalCase for classes and types",
      "kebab-case for files",
      "Suffix Service for services",
      "Suffix Adapter for adapters",
      "Suffix Controller for controllers",
      "Suffix Handler for middlewares",
      "Suffix Middleware for middlewares",
      "Prefix I for interfaces",
      "camelCase for properties",
      "PascalCase for enums",
      "camelCase for methods",
      "Files with .ts extension",
      "*.test.ts and *.spec.ts for tests",
      "ecosystem.config.js for PM2 configuration",
      "jest.config.js for Jest configuration",
      ".eslintrc.js for ESLint configuration"
    ],
    "module_boundaries": [
      "Clear separation between domain, application, and infrastructure",
      "Unidirectional dependencies from domain to infrastructure",
      "Dependency injection to decouple modules",
      "Separation between API, automation services, and utilities",
      "Isolated modules for input device abstractions",
      "Separation between validation schemas and business logic",
      "Controllers depend on services via injection",
      "DTOs and schemas isolate data contracts",
      "Services encapsulate automation logic",
      "Separation between handlers, routes, and services",
      "Middleware isolated in own module",
      "Separation between configuration, routes, middleware, and server initialization",
      "Use of plugins for modularization",
      "Exclusion of node_modules and test files from build",
      "Separation between mouse and screen operations",
      "Schemas isolated for each interaction type",
      "API layer isolated from core OCR logic",
      "Clear separation between image processing and text extraction modules"
    ]
  },
  "code_standards": {
    "style_guide": [
      "ESLint Recommended",
      "Prettier",
      "Airbnb JavaScript/TypeScript Style Guide",
      "TypeScript ESLint Recommended",
      "PEP8"
    ],
    "linting_rules": [
      "no-async-promise-executor: error",
      "no-await-in-loop: warn",
      "@typescript-eslint/no-explicit-any: error",
      "@typescript-eslint/no-floating-promises: error",
      "@typescript-eslint/await-thenable: error",
      "@typescript-eslint/no-unused-vars: error with argsIgnorePattern ^_",
      "eslint-config-prettier",
      "eslint-plugin-prettier",
      "typescript-eslint",
      "eslint-config-standard-with-typescript",
      "Prohibition of explicit any",
      "Rules for async/await",
      "No explicit any except in controlled cases",
      "flake8 with max line length 88"
    ],
    "formatting": [
      "Prettier integration via plugin:prettier/recommended",
      "semi: true",
      "trailingComma: all",
      "singleQuote: true",
      "printWidth: 100",
      "tabWidth: 2",
      "Prettier 3.x with default settings",
      "Indentation 2 spaces",
      "Prettier configured for TypeScript",
      "Black"
    ],
    "documentation_style": [
      "JSDoc for functions and classes",
      "JSDoc for public methods and interfaces",
      "JSDoc for exported functions and constants",
      "Inline comments and JSDoc for public functions",
      "Google Docstrings",
      "Descriptions embedded in each endpoint in Postman"
    ],
    "type_checking": [
      "Strict TypeScript type checking via plugin:@typescript-eslint/recommended-requiring-type-checking",
      "Strict TypeScript",
      "Strict TypeScript settings enabled",
      "Explicit types for parameters and returns",
      "Strict TypeScript with 'as const' for immutability",
      "Strict TypeScript with tsconfig.json strict true",
      "noImplicitAny",
      "strictNullChecks",
      "Strict TypeScript typings via JSON Schema",
      "mypy strict"
    ]
  },
  "testing_strategy": {
    "test_framework": [
      "Jest 29.x",
      "Postman Collection Runner",
      "Pytest 7.4"
    ],
    "test_structure": [
      "__tests__/**/*.test.ts",
      "tests directory parallel to src",
      "Unit tests for services",
      "Integration tests for API endpoints",
      "tests/unit",
      "tests/integration",
      "tests/unit for schema validation",
      "tests/unit for MouseAction and types",
      "tests/middleware for middleware unit tests",
      "mocks for external dependencies",
      "coverage/ - coverage reports",
      "Test files excluded from build"
    ],
    "coverage_requirements": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/**/*.test.ts",
      "!src/index.ts",
      "Minimum 80% coverage",
      "Cobertura mÃ­nima de 90%",
      ">= 85% coverage"
    ],
    "test_patterns": [
      "Arrange-Act-Assert (AAA)",
      "Given-When-Then",
      "Linear sequence with delays to simulate real use",
      "Sequence of GET and POST calls to validate state and effects"
    ],
    "mocking_approach": [
      "Use of Jest mocks and fixtures",
      "Mocks and spies via Jest",
      "Mocks for MouseService and ScreenService",
      "Mocks for external adapters",
      "Fixtures for request DTOs",
      "Mocks for process.env to simulate environment variables",
      "Mocks for external dependencies and timers",
      "Mocks for input events",
      "Mocks for MatchResult input data",
      "Mocks for FastifyRequest and FastifyReply",
      "Mocks for controllers",
      "pytest-mock",
      "Fixtures for image inputs"
    ]
  },
  "development_workflow": {
    "branch_strategy": [
      "GitHub Flow",
      "git Flow"
    ],
    "commit_conventions": [
      "Conventional Commits"
    ],
    "pr_requirements": [
      "Code review mandatory",
      "Passing CI checks",
      "Checks de lint e testes",
      "RevisÃ£o obrigatÃ³ria e testes automatizados",
      "RevisÃ£o obrigatÃ³ria por pelo menos um revisor",
      "CI checks passing"
    ],
    "ci_cd_pipeline": [
      "Build",
      "Linting",
      "Testing",
      "Coverage collection",
      "Deployment",
      "Build, lint, test and deploy via GitHub Actions",
      "Unit tests",
      "Integration tests"
    ]
  },
  "commands": {
    "setup": [
      "npm install && cp .env.example .env",
      "python -m venv venv && source venv/bin/activate && pip install -r requirements.txt"
    ],
    "install": [
      "npm install",
      "yarn install",
      "pip install -r requirements.txt"
    ],
    "dev": [
      "npm run dev",
      "tsc --watch",
      "flask run --reload"
    ],
    "test": [
      "npm test",
      "npm run test",
      "Executar coleÃ§Ã£o Postman via Newman ou Postman Runner",
      "pytest --cov=ocr_module tests/"
    ],
    "build": [
      "npm run build",
      "npm run build:prod",
      "tsc",
      "docker build -t ocr-service ."
    ],
    "lint": [
      "npx eslint . --ext .ts,.tsx",
      "npm run lint",
      "npx eslint .",
      "flake8 ocr_module/"
    ],
    "format": [
      "npx prettier --write .",
      "npm run format",
      "black ocr_module/"
    ]
  },
  "security_constraints": {
    "authentication_method": [
      "OAuth2",
      "Not implemented in current code"
    ],
    "authorization_rules": [
      "Role-based access control for API endpoints",
      "Not implemented explicitly in current code"
    ],
    "sensitive_data": [
      "Environment variables for configuration",
      "Accessibility permissions on macOS",
      "Base64 encoded images must be protected",
      "API keys",
      "Database credentials",
      "Extracted personal data must be encrypted at rest and in transit",
      ".env files"
    ],
    "security_headers": [
      "Content-type: application/json",
      "Content-Security-Policy",
      "X-Content-Type-Options",
      "Strict-Transport-Security"
    ],
    "encryption_requirements": [
      "TLS 1.3 for data in transit",
      "AES-256 for data at rest"
    ]
  },
  "performance_requirements": {
    "response_time_limits": [
      "Low latency expected for API calls",
      "Minimum action duration: 100ms",
      "Maximum action duration: 5000ms",
      "Asynchronous operations should be fast, ideally < 500ms for simple actions",
      "Default template wait timeout: 5000ms",
      "Mouse operations should be fast and responsive (milliseconds to seconds)",
      "< 2 seconds per image for OCR processing"
    ],
    "optimization_priorities": [
      "Speed and responsiveness for automation commands",
      "Memory control to avoid crashes",
      "Execution in fork mode for isolation",
      "Efficiency in HTTP response and command execution",
      "Precision and robustness over raw speed",
      "Low overhead in dependency resolution",
      "Responsiveness and extensibility",
      "Sequential execution to ensure integrity",
      "Balance between speed and accuracy",
      "Reduce bundle size",
      "Avoid source map generation for production"
    ],
    "caching_strategy": [
      "Configuration loaded once and reused",
      "Cache processed images and extracted text for 24 hours"
    ],
    "scalability_considerations": [
      "Current configuration limited to 1 instance, scalable via multiple PM2 instances",
      "Modular architecture enables horizontal scalability",
      "Horizontal scaling of OCR workers",
      "Load balancing API requests",
      "Easy replacement of implementations for different platforms"
    ]
  },
  "error_handling": {
    "error_format": [
      "Standard JSON with message and HTTP code",
      "Object with success (boolean) and error (string)",
      "Centralized error handler middleware format",
      "JSON with fields: success, error, details (optional array)",
      "JSON with error code, message and details"
    ],
    "logging_strategy": [
      "Structured logging with pino and pino-pretty",
      "Logs separated for errors (logs/error.log) and output (logs/out.log)",
      "Log level configurable via LOG_LEVEL variable",
      "Logs stored in /logs, *.log files ignored in versioning",
      "Structured logging with levels INFO, WARN, ERROR"
    ],
    "monitoring_tools": [
      "PM2 for monitoring and automatic restart",
      "Prometheus",
      "Grafana"
    ],
    "error_recovery": [
      "Automatic process restart on memory limit (1G)",
      "Error handling via Fastify middleware",
      "Standardized error return for failures, no automatic retry",
      "Propagation of errors to upper layers for handling",
      "Graceful shutdown to avoid request loss",
      "Immediate response with status 400 for validation errors",
      "Retry mechanism for transient failures",
      "Fallback to manual review queue"
    ]
  },
  "dependencies_context": {
    "critical_dependencies": [
      "@typescript-eslint/parser",
      "@typescript-eslint/eslint-plugin",
      "eslint",
      "prettier",
      "NutJS",
      "Fastify",
      "TSyringe",
      "Zod",
      "Node.js",
      "PM2",
      "@nut-tree-fork/nut-js",
      "pino",
      "dotenv",
      "TypeScript 5.x",
      "AutomationService",
      "nut-js",
      "AutomationController",
      "TypeScript compiler",
      "Node.js runtime",
      "Jest",
      "Postman for testing",
      "JSON Schema validation libraries (e.g., ajv)",
      "Tesseract OCR",
      "OpenCV",
      "Base tsconfig.json"
    ],
    "deprecated_packages": [
      "None identified"
    ],
    "version_constraints": [
      "ECMAScript 2024",
      "TypeScript 5.x",
      "@nut-tree-fork/nut-js ^4.2.0",
      "fastify ^4.24.0",
      "typescript ^5.3.2",
      "zod 3.x",
      "tsyringe 4.x",
      "pino 8.x",
      "dotenv >=16.0.0",
      "Nut.js compatible with Node.js 16+",
      "Fastify >=4.x",
      "Node.js compatible with ESNext",
      "Tesseract >=5.0",
      "OpenCV >=4.5"
    ],
    "internal_packages": [
      "domain/entities",
      "domain/use-cases",
      "application/services",
      "infrastructure/adapters",
      "application/dto",
      "infrastructure/schemas",
      "interface/controllers",
      "config/environment.js",
      "ocr_core",
      "image_utils",
      "api_handlers"
    ]
  },
  "current_challenges": {
    "technical_debt": [
      "Lack of explicit authentication and authorization",
      "Command validation can be more robust",
      "Error handling could be more granular",
      "Input validation can be improved",
      "Environment variable validation could be enhanced",
      "Base execute methods not implemented in subclasses",
      "Temporary use of any for images",
      "Image dimension estimation imprecise",
      "Lack of robust error handling",
      "Lack of formal automated tests",
      "Refactor legacy image preprocessing code",
      "Improve test coverage on edge cases"
    ],
    "known_issues": [
      "Risk of unauthorized command execution",
      "Possible silent failure on unknown commands",
      "Potential overhead in base64 decoding on frequent calls",
      "Risk of exceptions if execute is not overridden",
      "Possible failure in correct dimension detection for non-square buffers",
      "Possible exposure of sensitive endpoints without protection",
      "Possible error message leakage in production if NODE_ENV misconfigured",
      "Dependency on local API availability",
      "OCR accuracy drops on low-quality scans",
      "High memory usage on large batch processing"
    ],
    "performance_bottlenecks": [
      "Limitation to one instance may impact performance under high load",
      "Potential latency in UI automation depending on environment",
      "Potential latency in synchronous desktop command execution",
      "Dependency on external services may impact latency",
      "Synchronous buffer operations may impact performance",
      "Sequential execution may limit throughput",
      "Fixed delays may impact total execution time",
      "Image preprocessing step is CPU intensive"
    ],
    "migration_status": [
      "Initial project, no migrations in progress",
      "Stable project, no migrations in progress",
      "Migrating from Tesseract 4 to 5"
    ]
  },
  "team_preferences": {
    "code_review_focus": [
      "ESLint compliance",
      "Avoid explicit any",
      "Correct use of async/await",
      "Code quality",
      "Test coverage",
      "Security and validation",
      "Type and schema validation",
      "Naming consistency",
      "Error handling",
      "Correct dependency injection",
      "Correctness of OCR logic",
      "Performance optimizations",
      "Security compliance"
    ],
    "documentation_requirements": [
      "Clear documentation via JSDoc and README",
      "JSDoc for public methods",
      "Clear documentation for schemas and types",
      "Document environment variables and defaults",
      "Clear documentation for each command and parameters",
      "Clear documentation for endpoints and DTOs",
      "Comprehensive docstrings",
      "Architecture decision records"
    ],
    "communication_style": [
      "Clear and objective comments",
      "Use of _ prefix for ignored arguments",
      "Objective and technical comments in Portuguese with technical terms in English",
      "Clear, concise comments",
      "Respectful and constructive PR discussions"
    ],
    "decision_log": [
      "Adoption of strict rules for promises and unused variables",
      "Adoption of Fastify for performance",
      "Use of tsyringe for DI",
      "Validation with Zod",
      "Use of DI for flexibility and testability",
      "Use of NutJS for device control",
      "Use of dotenv for centralized configuration",
      "Adoption of Command pattern for modularity and extensibility",
      "Use of interfaces for data contracts",
      "Immediate stop on failures for safety",
      "Separation between domain and infrastructure",
      "Fastify for high performance REST APIs",
      "Centralized error handling for maintainability and monitoring",
      "Use of Zod for centralized validation",
      "Use of Controller pattern for modularization",
      "Adoption of Fastify Plugin for routes",
      "Use of async/await for async control",
      "Use of ESLint and Jest for quality and testing",
      "Clear separation of ignored files",
      "Adopted pipeline pattern for modularity",
      "Use OAuth2 for API security"
    ]
  },
  "api_specifications": {
    "api_style": [
      "REST",
      "RESTful API"
    ],
    "versioning_strategy": [
      "Versioning via URL (/api/v1/)",
      "Semantic versioning via package.json",
      "URI versioning (e.g., /api/v1/)"
    ],
    "response_formats": [
      "JSON",
      "Standardized JSON with success, error, and data fields",
      "Base64 encoded images",
      "Buffers for images"
    ],
    "rate_limiting": [
      "1000 requests per minute per user"
    ]
  },
  "deployment_context": {
    "environments": [
      "development (http://localhost:3000)",
      "production (configurable via .env)",
      "staging",
      "prod - ocr.example.com"
    ],
    "deployment_method": [
      "PM2 process manager",
      "Docker container",
      "Node.js runtime",
      "CI/CD pipelines",
      "Docker containers orchestrated by Kubernetes"
    ],
    "environment_variables": [
      "NODE_ENV",
      "PORT",
      "HOST",
      "LOG_LEVEL",
      "MOUSE_SPEED",
      "SCREEN_CONFIDENCE",
      "SCREEN_ADAPTER_IMPLEMENTATION",
      "API_URL",
      "OCR_API_KEY",
      "DATABASE_URL",
      "REDIS_URL"
    ],
    "infrastructure_constraints": [
      "Accessibility permissions on macOS",
      "DISPLAY variable on Linux",
      "Memory limit set to 1G for automatic restart",
      "Requires Node.js >=16",
      "Compatible with Linux, Windows, and macOS",
      "Requires access to desktop for automation",
      "Requires access to graphical resources for screen capture and mouse control",
      "Requires local API running",
      "Limited GPU availability",
      "Max 4 CPU cores per pod"
    ]
  },
  "lastCommitHash": "db6d741b10ccd2b9f5fd8ccd1c9eeb877257f85d"
}

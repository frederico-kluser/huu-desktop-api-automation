{
  "project_metadata": {
    "name": "NutJS REST API for Desktop UI Automation via HTTP",
    "domain": [
      "Desktop Automation",
      "UI Automation",
      "Input Device Control",
      "Visual Recognition",
      "REST API Backend",
      "Automated Testing",
      "Clipboard Management",
      "Keyboard Input Automation",
      "Screen Capture",
      "Command Execution",
      "Robotic Process Automation (RPA)"
    ],
    "current_phase": [
      "Production",
      "MVP",
      "Stable",
      "Development",
      "Pre-production",
      "Tested with real-time streaming support",
      "Integration Testing",
      "Unit Tests Implemented for Core Features",
      "Maintenance"
    ],
    "critical_business_rules": [
      "System permissions must be respected",
      "Strict input validation to prevent invalid commands",
      "Maintain integrity of automation operations",
      "Continuous service availability",
      "Automatic restart on excessive memory usage",
      "Error and output logs for auditing",
      "Safe execution of UI commands",
      "Strict validation of coordinates to prevent out-of-bounds actions",
      "Minimum confidence threshold for image recognition",
      "Timeouts for template waits",
      "Correct and consistent dependency registration",
      "Decoupling between adapters and services",
      "Automation services must be resolved via container",
      "Environment variables must be correctly defined",
      "API key must not be empty in production",
      "Sequential and correct execution of commands",
      "Standardized result return for integration",
      "Extensibility for new command types",
      "Immutability of actions after creation",
      "Detailed success/failure results must be returned",
      "Consistent API responses",
      "Precise cursor movement",
      "Accurate mouse button mapping",
      "Reliable execution of clicks and drags",
      "Strict JSON Schema input validation",
      "Standardized responses with success status",
      "Immediate response to invalid data with status 400",
      "API automation endpoints must be available",
      "Route access security",
      "Build must be clean and error-free",
      "Strict typing to avoid bugs",
      "Sensitive configuration files must not be versioned",
      "No versioning of dependencies and generated artifacts",
      "Clipboard content must not be empty or exceed 1 MB",
      "Typed text must not contain dangerous control characters",
      "Maximum text length for typing: 10,000 characters",
      "Maximum allowed delay: 300,000ms (5 minutes)",
      "Batch size must be between 1 and 1000",
      "Default mode must be one of: instant, perChar, total",
      "Clipboard operations must not corrupt system clipboard state",
      "Keyboard actions must be executed in correct sequence and timing",
      "Payloads must conform to JSON Schema Draft 7",
      "Clipboard content must be a non-empty string",
      "No additional properties allowed in requests",
      "Input data must be validated strictly to prevent injection or malformed commands",
      "API key authentication required for all endpoints",
      "Maximum response time of 5000ms to ensure performance",
      "HTTP responses must be correct for all routes",
      "Complete logs for auditing",
      "Server availability must be maintained"
    ]
  },
  "technical_stack": {
    "primary_language": [
      "TypeScript 5.x",
      "Node.js 20.x",
      "JavaScript (Node.js)"
    ],
    "frameworks": [
      "Fastify 4.x",
      "TSyringe 4.x",
      "Zod 3.x",
      "PM2 5.x",
      "Jest 29.x",
      "ESLint 8.x",
      "dotenv 16.x",
      "Nut.js 2.x",
      "clipboardy 3.x",
      "OpenCV 4.7",
      "Tesseract OCR 5.0"
    ],
    "databases": [
      "PostgreSQL 15"
    ],
    "external_services": [
      "@nut-tree-fork/nut-js",
      "clipboardy",
      "dotenv for environment configuration",
      "pino logger",
      "Server-Sent Events (SSE) for streaming",
      "Authentication Service (OAuth2)",
      "Cloud Storage API"
    ],
    "package_manager": [
      "npm",
      "yarn",
      "pip"
    ]
  },
  "architecture_patterns": {
    "design_pattern": [
      "Clean Architecture",
      "Dependency Injection",
      "Command Pattern",
      "Adapter Pattern",
      "Service Layer",
      "Schema Validation Pattern",
      "REST API",
      "Layered Architecture",
      "Controller Pattern",
      "Factory Method",
      "Middleware Pattern",
      "Modular Architecture",
      "DTO",
      "Strategy Pattern"
    ],
    "folder_structure": [
      "src/ - main source code",
      "dist/ - build output",
      "tests/ - unit and integration tests",
      "config/ - global configuration files",
      "domain/entities - domain entities",
      "domain/use-cases - use cases",
      "application/services - business logic and services",
      "infrastructure/adapters - hardware adapters",
      "interface/controllers - HTTP route controllers",
      "schemas/ - Zod and JSON Schema definitions",
      "middleware/ - validation and error handling",
      "logs/ - log files",
      "node_modules/ - external dependencies",
      "coverage/ - test coverage reports"
    ],
    "naming_conventions": [
      "camelCase for variables and functions",
      "PascalCase for classes and types",
      "kebab-case for files",
      "Suffix Service for service classes",
      "Suffix Adapter for adapters",
      "Prefix I for interfaces",
      "Suffix Controller for controllers",
      "snake_case for environment variables",
      "Suffix Middleware for middlewares",
      "Suffix Schema for validation objects"
    ],
    "module_boundaries": [
      "Unidirectional dependencies from Domain to Application, Infrastructure, and Interface",
      "Clear separation between business logic and infrastructure",
      "Dependency injection to decouple modules",
      "Isolated modules for input device abstractions",
      "DTOs and schemas isolate validation and typing",
      "Controllers depend on services via DI",
      "Domain does not depend on infrastructure",
      "Infrastructure implements interfaces defined in domain",
      "Configuration isolated in its own module",
      "Separation between mouse, keyboard, clipboard, and screen operations",
      "Middleware decouples validation from main logic",
      "Exclusion of tests and build artifacts from production build"
    ]
  },
  "code_standards": {
    "style_guide": [
      "Airbnb JavaScript/TypeScript Style Guide",
      "ESLint Recommended",
      "Prettier"
    ],
    "linting_rules": [
      "ESLint with @typescript-eslint plugin",
      "eslint-config-prettier to disable conflicting rules",
      "No explicit any except in controlled cases",
      "Prohibition of implicit any",
      "Async/await required for async operations",
      "@typescript-eslint/no-explicit-any: error",
      "@typescript-eslint/no-unused-vars: error"
    ],
    "formatting": [
      "Prettier with default settings",
      "semi: true",
      "singleQuote: true",
      "tabWidth: 2",
      "printWidth: 100",
      "trailingComma: all"
    ],
    "documentation_style": [
      "JSDoc for functions and classes",
      "JSDoc for public methods",
      "Inline comments for context"
    ],
    "type_checking": [
      "Strict TypeScript",
      "StrictNullChecks",
      "NoImplicitAny",
      "Explicit typing for DTOs and service interfaces"
    ]
  },
  "testing_strategy": {
    "test_framework": [
      "Jest 29.x",
      "Postman Tests (JavaScript)",
      "Pytest 7.4"
    ],
    "test_structure": [
      "tests/unit for unit tests",
      "tests/integration for integration tests",
      "Test files located in __tests__ folders adjacent to source files",
      "Exclusion of *.test.ts files from build",
      "Coverage/ - test coverage reports"
    ],
    "coverage_requirements": [
      "Minimum 80% coverage",
      "branches >= 80%",
      "functions >= 80%",
      "lines >= 80%",
      "statements >= 80%",
      ">= 90% coverage for schemas"
    ],
    "test_patterns": [
      "Arrange-Act-Assert (AAA)",
      "Given-When-Then for integration tests",
      "Use of mocks for external dependencies",
      "Async tests with fake timers"
    ],
    "mocking_approach": [
      "Use of Jest mocks and fixtures",
      "Mocks for MouseService and ScreenService",
      "Mocks for external dependencies and timers",
      "Mocks for FastifyRequest and FastifyReply",
      "Mocks for clipboardy with jest.mock",
      "Mocks for IKeyboardAdapter using jest.mock or ts-mockito"
    ]
  },
  "development_workflow": {
    "branch_strategy": [
      "GitHub Flow",
      "git Flow"
    ],
    "commit_conventions": [
      "Conventional Commits"
    ],
    "pr_requirements": [
      "Code review mandatory",
      "Passing CI checks",
      "Automated tests passing",
      "Lint and test checks"
    ],
    "ci_cd_pipeline": [
      "Linting",
      "Testing",
      "Build",
      "Deployment",
      "Unit tests",
      "Integration tests",
      "Automated deploy",
      "Build, test, lint, deploy stages"
    ]
  },
  "commands": {
    "setup": [
      "cp .env.example .env",
      "npm install",
      "npm install && cp .env.example .env",
      "python -m venv venv && source venv/bin/activate && pip install -r requirements.txt"
    ],
    "install": [
      "npm install",
      "yarn install",
      "pip install -r requirements.txt"
    ],
    "dev": [
      "npm run dev",
      "tsc --watch",
      "node script.js",
      "flask run --reload"
    ],
    "test": [
      "npm test",
      "npm run test",
      "pytest --cov=ocr_module tests/"
    ],
    "build": [
      "npm run build",
      "npm run build:prod",
      "tsc",
      "docker build -t ocr-service ."
    ],
    "lint": [
      "npm run lint",
      "npx eslint .",
      "eslint . --ext .ts,.tsx",
      "flake8 ocr_module/"
    ],
    "format": [
      "npm run format",
      "npx prettier --write .",
      "prettier --write .",
      "black ocr_module/"
    ]
  },
  "security_constraints": {
    "authentication_method": [
      "API Key via HTTP header x-api-key",
      "JWT",
      "OAuth2"
    ],
    "authorization_rules": [
      "Role-based access control for API endpoints",
      "Rejection of requests with missing or invalid API key",
      "Access denied for invalid or missing keys",
      "Unauthorized and Forbidden errors handled explicitly"
    ],
    "sensitive_data": [
      "Environment variables for configuration",
      "API keys in environment variables must be masked",
      "Clipboard content may contain sensitive data and must be handled carefully",
      "Typed text may contain sensitive data, sanitized to avoid control characters",
      "API_KEY must be kept secret and not exposed in logs",
      "Tokens JWT",
      "Database credentials",
      "Extracted personal data must be encrypted at rest and in transit",
      ".env files are ignored to protect sensitive variables"
    ],
    "security_headers": [
      "Content-Security-Policy",
      "X-Content-Type-Options",
      "Strict-Transport-Security",
      "Cache-Control",
      "Content-Type: application/json",
      "x-api-key for authentication",
      "Expected via Fastify server configuration"
    ],
    "encryption_requirements": [
      "TLS 1.3 for data in transit",
      "AES-256 for data at rest",
      "HTTPS recommended for secure transmission",
      "Secure storage of tokens"
    ]
  },
  "performance_requirements": {
    "response_time_limits": [
      "Low latency expected for API calls",
      "Minimum duration 100ms, maximum 5000ms for actions",
      "Default timeout 5000ms for template waits",
      "< 200ms for main endpoints",
      "<= 25ms for simple requests (observed)",
      "Streaming with configurable interval for mouse position",
      "At least 5 events per second in streaming",
      "Operations must respond within 5000ms",
      "Mouse movements must occur within configured duration parameter"
    ],
    "optimization_priorities": [
      "Speed and responsiveness for automation commands",
      "Memory control to avoid crashes",
      "Responsiveness and extensibility",
      "Low latency in automation routes",
      "Efficient resource usage in SSE streaming",
      "Balance between smoothness of movement and responsiveness",
      "Efficient validation to avoid overhead on large payloads",
      "Reliability and precision over raw speed",
      "Efficient build and fast compilation"
    ],
    "caching_strategy": [
      "In-memory cache for static configuration data",
      "No caching for real-time streaming",
      "Cache processed images and extracted text for 24 hours"
    ],
    "scalability_considerations": [
      "Horizontal scaling via multiple Fastify instances",
      "Modular architecture for easy expansion",
      "Support for multiple simultaneous SSE connections",
      "Configuration allows adjustment for different loads",
      "Interface allows multiple scalable implementations",
      "Support for multiple simultaneous REST API requests"
    ]
  },
  "error_handling": {
    "error_format": [
      "Standard JSON with message and HTTP code",
      "Zod validation with standardized messages",
      "CommandResult with success boolean and optional error string",
      "Centralized error handler middleware format",
      "JSON with fields: success, error, code, and optional details",
      "HTTP status codes (404 for not found routes)"
    ],
    "logging_strategy": [
      "Structured logging with pino and pino-pretty",
      "Separate logs for errors (logs/error.log) and output (logs/out.log)",
      "Log level configurable via environment variable",
      "Structured logging with request context",
      "Logs stored in /logs, *.log files ignored in version control",
      "Logs disabled in tests (logger: false)"
    ],
    "monitoring_tools": [
      "PM2 for monitoring and automatic restart",
      "Prometheus",
      "Grafana"
    ],
    "error_recovery": [
      "Automatic process restart on memory limit (1G)",
      "Error handling via Fastify middleware",
      "Immediate response with status 400 for validation errors",
      "Graceful shutdown to avoid request loss",
      "Error handling in streaming to close connection and clean resources",
      "Retry mechanism for transient failures",
      "Fallback to manual review queue"
    ]
  },
  "dependencies_context": {
    "critical_dependencies": [
      "@nut-tree-fork/nut-js",
      "Fastify",
      "TSyringe",
      "Zod",
      "Node.js",
      "PM2",
      "pino",
      "dotenv",
      "clipboardy",
      "Jest",
      "TypeScript",
      "OpenCV",
      "Tesseract OCR"
    ],
    "deprecated_packages": [
      "None identified"
    ],
    "version_constraints": [
      "@nut-tree-fork/nut-js ^4.2.0",
      "fastify ^4.24.0",
      "typescript ^5.3.2",
      "zod >=3.0.0",
      "tsyringe 4.x",
      "pino 8.x",
      "clipboardy >=3.0.0",
      "dotenv >=16.0",
      "Jest >=29.x",
      "Node.js >=20.x"
    ],
    "internal_packages": [
      "domain/entities",
      "domain/use-cases",
      "application/services",
      "infrastructure/adapters",
      "interface/controllers",
      "schemas",
      "config",
      "middleware",
      "src/config/environment.js"
    ]
  },
  "current_challenges": {
    "technical_debt": [
      "Error handling could be more granular",
      "Input validation can be strengthened",
      "Base subclasses missing execute methods",
      "Temporary use of any for images",
      "Lack of authentication and authorization on endpoints",
      "Incomplete controller documentation",
      "Limited integration tests",
      "Test coverage can be expanded for edge cases",
      "Clipboard content size limit is fixed at 1MB, may be inflexible",
      "Sanitization may not cover all cases",
      "Interface too generic may lead to inconsistent implementations",
      "Lack of explicit type checking may hinder maintenance"
    ],
    "known_issues": [
      "Possible latency in smooth scrolls with high duration",
      "Potential overhead in frequent base64 decoding",
      "Risk of exceptions if execute is not overridden",
      "Potential resource leaks in SSE streams if connections are not closed properly",
      "Possible latency in async route registration",
      "Limited compatibility with environments lacking ES2022 and decorators",
      "No explicit validation of environment variable values",
      "clipboardy may show inconsistencies on some OS",
      "Possible slowness with very long texts and high delays",
      "No handling for NaN values in parseInt",
      "Possible exposure of sensitive operations without access control",
      "Possible acceptance of payloads larger than 1MB",
      "Performance limitations in screen capture and recognition operations"
    ],
    "performance_bottlenecks": [
      "Single instance limitation may impact performance under high load",
      "Potential latency in UI automation depending on environment",
      "Async loops in scroll may impact performance",
      "Synchronous buffer operations may impact performance",
      "Sequential execution may limit throughput",
      "Continuous streaming may impact performance under high load",
      "Image preprocessing step is CPU intensive",
      "Interpolated movements may be costly at high frequency",
      "Smooth scroll may generate multiple calls, impacting performance on limited devices",
      "Synchronous I/O operations may impact latency",
      "Screen capture and image recognition operations may be costly"
    ],
    "migration_status": [
      "Initial project, no migrations in progress",
      "Migration to Fastify 4 completed",
      "Stable, no migrations ongoing"
    ]
  },
  "team_preferences": {
    "code_review_focus": [
      "Code quality",
      "Test coverage",
      "Security and validation",
      "Type and boundary validation",
      "Naming consistency",
      "Error handling validation",
      "Dependency injection consistency",
      "Clear separation of responsibilities",
      "Strict typing",
      "Correct async/await usage",
      "Schema validation and error handling",
      "Security on routes",
      "Clarity and documentation"
    ],
    "documentation_requirements": [
      "Clear documentation via JSDoc and README",
      "JSDoc for public methods",
      "Document environment variables and default values",
      "Document interfaces and service contracts",
      "Clear documentation for each command and its parameters",
      "JSDoc for all schemas and types",
      "Clear documentation for error classes and handlers"
    ],
    "communication_style": [
      "Clear and objective comments",
      "Use of PRs for discussions",
      "Technical and concise comments",
      "Use of English for technical terms",
      "Objective comments in Portuguese for context",
      "Use of PR templates",
      "Respectful and constructive PR discussions"
    ],
    "decision_log": [
      "Adoption of Fastify for performance",
      "Use of tsyringe for DI",
      "Validation with Zod",
      "Separation between mouse and screen services",
      "Use of Dependency Injection for testability and modularity",
      "Use of NutJS for device automation",
      "Use of dotenv for configuration",
      "Command pattern for modularity and extensibility",
      "Factory Method for action creation",
      "Use of interfaces for data contracts",
      "Immediate stop on failures for safety",
      "API key for authentication",
      "Streaming via Server-Sent Events (SSE)",
      "Jest for testing",
      "Global logger mock to avoid log pollution in tests",
      "Linear interpolation for smooth movement",
      "Adapter pattern for hardware abstraction",
      "Strict coordinate validation",
      "Strict async/await and explicit types for quality",
      "Declarative validation with Zod",
      "1MB limit for clipboard content",
      "Strategy Pattern for typing flexibility",
      "Immutable configuration for safety and predictability",
      "Interfaces to standardize service responses",
      "Marker interface for automation services",
      "JSON Schema Draft 7 for compatibility and standardization",
      "API key for authentication, modularization by functional domain"
    ]
  },
  "api_specifications": {
    "api_style": [
      "REST",
      "RESTful API",
      "REST with HTTP POST and GET endpoints",
      "REST with SSE endpoint for streaming"
    ],
    "versioning_strategy": [
      "URL versioning (/api/v1/)",
      "Semantic versioning via package.json",
      "URI prefix /api/v1"
    ],
    "response_formats": [
      "JSON",
      "{ success: boolean, error?: string, data?: any }",
      "Base64 encoded images",
      "CommandResult with success, data, and error"
    ],
    "rate_limiting": [
      "Configurable rate limiting via Fastify plugins",
      "1000 requests per minute per user",
      "Recommended for production"
    ]
  },
  "deployment_context": {
    "environments": [
      "development (http://localhost:3000)",
      "production (configurable via .env)",
      "staging",
      "test"
    ],
    "deployment_method": [
      "PM2 process manager",
      "Docker container",
      "Node.js server",
      "CI/CD pipelines",
      "Kubernetes"
    ],
    "environment_variables": [
      "NODE_ENV",
      "PORT",
      "HOST",
      "LOG_LEVEL",
      "MOUSE_SPEED",
      "SCREEN_CONFIDENCE",
      "API_KEY",
      "API_URL",
      "JWT_SECRET",
      "DATABASE_URL",
      "REDIS_URL",
      "MOUSE_MIN_DUR",
      "MOUSE_MAX_DUR",
      "MOUSE_DEFAULT_SMOOTH",
      "MOUSE_SAMPLE_RATE",
      "MOUSE_STREAM_INTERVAL",
      "MOUSE_DEFAULT_DURATION",
      "KEYBOARD_DEFAULT_MODE",
      "KEYBOARD_MAX_TEXT_LENGTH",
      "KEYBOARD_DEFAULT_DELAY_PER_CHAR",
      "KEYBOARD_MAX_DELAY",
      "KEYBOARD_BATCH_SIZE",
      "KEYBOARD_DEBUG",
      "OCR_API_KEY"
    ],
    "infrastructure_constraints": [
      "Accessibility permissions on macOS",
      "DISPLAY variable on Linux",
      "Memory limit set to 1G for automatic restart",
      "Requires Node.js >=20.x",
      "Compatible with Linux, Windows, and macOS",
      "Requires graphical environment for mouse control",
      "Requires access to system resources for clipboard and keyboard",
      "SSE connections must remain open and stable",
      "API local must be running",
      "No versioning of node_modules and dist for repository performance"
    ]
  },
  "lastCommitHash": "5284c6adc4d8d9ec478ccdeb95ec2d6efae29b43"
}

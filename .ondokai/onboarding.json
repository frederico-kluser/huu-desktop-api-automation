{
  "project_metadata": {
    "name": "NutJS Desktop Automation API â€“ RESTful service for programmatic mouse and screen control using Node.js and nut-js",
    "domain": [
      "Desktop Automation",
      "UI Automation",
      "Mouse and Screen Control",
      "Computer Vision",
      "Backend API",
      "Test Automation",
      "Input Device Control",
      "Optical Character Recognition",
      "Data Capture",
      "Error Handling",
      "Configuration Management"
    ],
    "current_phase": [
      "Production",
      "Stable",
      "MVP",
      "Initial Command Architecture Implementation",
      "Active Development",
      "Pre-production",
      "Optimized Build",
      "Integration Testing",
      "Automated Testing",
      "Environment Configuration"
    ],
    "critical_business_rules": [
      "Ensure code is free from common async/await errors",
      "Avoid explicit use of any",
      "Maintain style consistency with Prettier",
      "System permissions must be respected",
      "Strict input validation to prevent invalid commands",
      "Maintain integrity of automation operations",
      "Continuous service availability",
      "Automatic restart on excessive memory usage",
      "Error and output logs for auditing",
      "Safe execution of UI commands",
      "Strict validation of coordinates to prevent out-of-bounds actions",
      "Minimum confidence threshold for image recognition",
      "Timeouts for template waits",
      "Immutability of actions after creation",
      "Do not expose sensitive keys in logs or code",
      "Environment variables must be correctly set to avoid failures",
      "Standardized API responses for integration",
      "Extensibility for new command types",
      "Strict typing must be maintained",
      "Exclude node_modules and dist from build",
      "Support for experimental decorators",
      "Sensitive configuration files must not be committed",
      "Accurate mouse coordinate handling",
      "Maintain integrity of screenshots",
      "Respect duration and smoothing in movements",
      "Accuracy thresholds for text extraction",
      "Data privacy compliance",
      "Non-modification of original images",
      "Exclude test files from build",
      "Immediate response to invalid data with status 400",
      "Authentication required via API key",
      "Continuous and ordered event streaming",
      "Proper streaming closure on connection end",
      "Test environment isolation",
      "Suppression of logs during tests",
      "Accurate smooth movement interpolation",
      "Button mapping must be consistent",
      "Drag sequence must follow press-move-release order",
      "Correct division of scroll for smooth scrolling"
    ]
  },
  "technical_stack": {
    "primary_language": [
      "TypeScript 5.x",
      "JavaScript (Node.js)",
      "ECMAScript 2024",
      "Python 3.11"
    ],
    "frameworks": [
      "Fastify 4.x",
      "TSyringe 4.x",
      "Zod 3.x",
      "PM2 5.x",
      "Jest 29.x",
      "ESLint 8.x",
      "NutJS 2.x",
      "dotenv 16.0",
      "pino 8.x",
      "Express 4.x",
      "Tesseract OCR 5.0",
      "OpenCV 4.7",
      "Flask 2.3",
      "@nut-tree-fork/nut-js"
    ],
    "databases": [
      "PostgreSQL 15"
    ],
    "external_services": [
      "NutJS APIs for mouse and screen control",
      "dotenv for environment configuration",
      "MouseService",
      "ScreenService",
      "@nut-tree-fork/nut-js (screen API)",
      "APIs via API_KEY",
      "AutomationService (IAutomationExecutor interface)",
      "Local REST API NutJS Mouse Control",
      "Postman for API testing",
      "Cloud Storage API",
      "Authentication Service (OAuth2)",
      "EventSource (SSE client)",
      "Environment configuration service",
      "pino logger"
    ],
    "package_manager": [
      "npm",
      "yarn",
      "pip"
    ]
  },
  "architecture_patterns": {
    "design_pattern": [
      "Plugin-based Architecture",
      "Declarative Configuration",
      "Clean Architecture",
      "Process Manager Pattern",
      "Dependency Injection",
      "Modular Architecture",
      "REST API",
      "Schema Validation Pattern",
      "Type-safe API Contracts",
      "Command Pattern",
      "Adapter Pattern",
      "Service Layer",
      "Configuration Centralization",
      "Immutable Object Pattern",
      "Template Method",
      "Factory Method",
      "Middleware Pattern",
      "Controller Pattern",
      "Centralized Error Handling",
      "Layered Architecture",
      "Plugin Pattern",
      "Client-Server",
      "API Client Abstraction",
      "Strict typing enforcement",
      "Modular API endpoints by resource (mouse, screen)",
      "Pipeline",
      "Configuration Inheritance",
      "Configuration Object",
      "Immutable Constants",
      "Controller-Service Pattern",
      "Test Setup Pattern",
      "Mocking Pattern",
      "Dependency Injection via Adapter Pattern"
    ],
    "folder_structure": [
      "src/ - main source code",
      "dist/ - compiled build output",
      "tests/ - unit and integration tests",
      "config/ - global configurations and constants",
      "domain/entities - domain entities",
      "application/services - business logic and services",
      "infrastructure/adapters - external library integrations",
      "interface/controllers - HTTP route controllers",
      "src/config - environment variables and configuration files",
      "src/schemas - Zod schema definitions",
      "src/types - type and interface definitions",
      "src/commands - automation commands",
      "src/models - domain interfaces and classes",
      "src/utils - utility functions",
      "routes - API route definitions",
      "logs/ - log files",
      "coverage/ - test coverage reports",
      "node_modules/ - external dependencies",
      ".vscode/, .idea/ - IDE configurations",
      ".eslintrc.js - ESLint configuration",
      "jest.config.js - Jest configuration",
      "ecosystem.config.js - PM2 configuration",
      "/preprocessing - image cleaning",
      "/recognition - OCR logic",
      "/postprocessing - text correction",
      "/api - integration endpoints"
    ],
    "naming_conventions": [
      "camelCase for variables and functions",
      "PascalCase for classes and types",
      "kebab-case for files and scripts",
      "snake_case for environment variables",
      "Suffix Service for service classes",
      "Suffix Adapter for adapters",
      "Suffix Controller for controllers",
      "Suffix Handler for middlewares",
      "Prefix I for interfaces",
      "Const assertions for immutable objects",
      "Files with .ts extension for TypeScript code",
      "Files with .test.ts and .spec.ts for tests"
    ],
    "module_boundaries": [
      "Clear separation between domain, application, and infrastructure",
      "Dependency injection to decouple modules",
      "Use of interfaces for abstractions",
      "Isolated configuration in its own module",
      "Separation between API, automation services, and infrastructure",
      "Isolated data validation",
      "Controllers depend on services via DI",
      "Services encapsulate business logic",
      "Isolated modules for input device abstractions",
      "Separation between handlers, routes, and services",
      "Separation between schemas and inferred types",
      "Separation between production code and tests",
      "Mocks isolated in test configuration",
      "Separation between mouse and screen operations",
      "API layer isolated from core OCR logic",
      "Exclusion of tests and build artifacts from compilation",
      "Centralized configuration in environment.js",
      "Use of plugins for modularization",
      "Explicit export of constants for global use"
    ]
  },
  "code_standards": {
    "style_guide": [
      "ESLint Recommended",
      "Prettier",
      "Airbnb JavaScript/TypeScript Style Guide",
      "TypeScript ESLint Recommended",
      "PEP8"
    ],
    "linting_rules": [
      "no-async-promise-executor: error",
      "no-await-in-loop: warn",
      "@typescript-eslint/no-explicit-any: error",
      "@typescript-eslint/no-floating-promises: error",
      "@typescript-eslint/await-thenable: error",
      "@typescript-eslint/no-unused-vars: error with argsIgnorePattern ^_",
      "eslint-config-prettier to disable conflicting rules",
      "eslint-config-standard-with-typescript",
      "Prohibition of explicit any",
      "Mandatory use of async/await for async operations",
      "Config via .eslintrc.js",
      "flake8 with max line length 88"
    ],
    "formatting": [
      "Prettier integration via plugin:prettier/recommended",
      "semi: true",
      "trailingComma: all",
      "singleQuote: true",
      "printWidth: 100",
      "tabWidth: 2",
      "Prettier 3.x with default settings",
      "Black"
    ],
    "documentation_style": [
      "JSDoc for functions and classes",
      "JSDoc for public and private methods",
      "Inline comments and JSDoc for public functions",
      "Google Docstrings",
      "Descriptions embedded in each endpoint in Postman"
    ],
    "type_checking": [
      "Strict TypeScript type checking via plugin:@typescript-eslint/recommended-requiring-type-checking",
      "Strict TypeScript settings enabled",
      "Strict TypeScript with tsc --noEmit",
      "Strict TypeScript with explicit typing in DTOs and methods",
      "Strict TypeScript with strict true in tsconfig.json",
      "noImplicitAny",
      "strictNullChecks",
      "mypy strict"
    ]
  },
  "testing_strategy": {
    "test_framework": [
      "Jest 29.x",
      "Postman Collection Runner",
      "Pytest 7.4"
    ],
    "test_structure": [
      "**/__tests__/**/*.test.ts",
      "**/tests/**/*.spec.ts",
      "tests directory parallel to src",
      "Unit tests for services",
      "Integration tests for API endpoints",
      "tests/unit",
      "tests/integration",
      "mocks for external dependencies",
      "coverage/ - coverage reports"
    ],
    "coverage_requirements": [
      "branches >= 80%",
      "functions >= 80%",
      "lines >= 80%",
      "statements >= 80%",
      "Minimum 80% coverage",
      ">= 90% for middlewares",
      ">= 85%",
      "Full coverage for public MouseService functions"
    ],
    "test_patterns": [
      "Arrange-Act-Assert (AAA)",
      "Given-When-Then",
      "Sequence of GET and POST calls to validate state and effects",
      "Use of mocks for external dependencies",
      "Async tests with fake timers"
    ],
    "mocking_approach": [
      "Use of Jest mocks and fixtures",
      "Mocks for MouseService and ScreenService",
      "Mocks for adapters via tsyringe and jest.mock",
      "Mocks for external adapters",
      "Fixtures for input data",
      "Mocks for process.env to simulate environment variables",
      "Mocks for external dependencies and timers",
      "Mocks for input events",
      "Mocks for MatchResult input data",
      "Mocks for FastifyRequest and FastifyReply",
      "Mocks for external modules (@nut-tree-fork/nut-js)",
      "Mocks for async functions",
      "Use of jest.useFakeTimers for time control"
    ]
  },
  "development_workflow": {
    "branch_strategy": [
      "GitHub Flow",
      "git Flow"
    ],
    "commit_conventions": [
      "Conventional Commits"
    ],
    "pr_requirements": [
      "Code review mandatory",
      "Passing CI checks",
      "Checks de lint e testes automatizados",
      "RevisÃ£o obrigatÃ³ria por pelo menos um membro"
    ],
    "ci_cd_pipeline": [
      "Linting",
      "Testing",
      "Build",
      "Deployment",
      "Build, lint, test and deploy automated via GitHub Actions",
      "Unit tests",
      "Integration tests"
    ]
  },
  "commands": {
    "setup": [
      "npm install && cp .env.example .env",
      "python -m venv venv && source venv/bin/activate && pip install -r requirements.txt"
    ],
    "install": [
      "npm install",
      "yarn install",
      "pip install -r requirements.txt"
    ],
    "dev": [
      "npm run dev",
      "tsc --watch",
      "flask run --reload"
    ],
    "test": [
      "npm test",
      "npm run test",
      "pytest --cov=ocr_module tests/",
      "Executar coleÃ§Ã£o Postman via Newman ou Postman Runner"
    ],
    "build": [
      "npm run build",
      "npm run build:prod",
      "tsc",
      "docker build -t ocr-service ."
    ],
    "lint": [
      "npx eslint . --ext .ts,.tsx",
      "npm run lint",
      "flake8 ocr_module/"
    ],
    "format": [
      "npx prettier --write .",
      "npm run format",
      "black ocr_module/"
    ]
  },
  "security_constraints": {
    "authentication_method": [
      "API Key via environment variable",
      "API Key via header x-api-key",
      "OAuth2"
    ],
    "authorization_rules": [
      "Strict input validation to prevent unauthorized execution",
      "External control based on API Key",
      "API Key validation for streaming endpoint",
      "Role-based access control for API endpoints",
      "Reject requests without or with invalid API key"
    ],
    "sensitive_data": [
      "Environment variables for configuration",
      "Accessibility permissions on macOS",
      "API_KEY must be kept secret and not exposed",
      "Base64 encoded images must be protected",
      "Extracted personal data must be encrypted at rest and in transit",
      ".env files",
      "API keys",
      "Database credentials"
    ],
    "security_headers": [
      "Content-Security-Policy: default-src 'none'",
      "X-Content-Type-Options: nosniff",
      "Cache-Control: no-cache",
      "Strict-Transport-Security",
      "Content-Type: application/json",
      "Mandatory validation of x-api-key header"
    ],
    "encryption_requirements": [
      "TLS 1.3 for data in transit",
      "AES-256 for data at rest",
      "HTTPS recommended for secure transmission"
    ]
  },
  "performance_requirements": {
    "response_time_limits": [
      "Low latency expected for API calls",
      "Minimum duration 100ms, maximum 5000ms for actions",
      "Async operations should be fast, ideally < 500ms for simple actions",
      "Smooth movements configurable between 0 and 1000ms",
      "Default timeout of 5000ms for template waits",
      "At least 5 events per second in streaming",
      "< 2 seconds per image for OCR processing",
      "Test timeout set to 10000ms"
    ],
    "optimization_priorities": [
      "Speed and responsiveness for automation commands",
      "Memory control to avoid crashes",
      "Execution in fork mode for isolation",
      "Speed and efficiency in UI manipulation",
      "HTTP server speed and scalability",
      "Precision and reliability over extreme speed",
      "Efficient resource usage in SSE streaming",
      "Balance between speed and accuracy",
      "Reduce bundle size",
      "Avoid source map generation for production"
    ],
    "caching_strategy": [
      "Configuration loaded once and immutable",
      "Cache processed images and extracted text for 24 hours"
    ],
    "scalability_considerations": [
      "Current config limits to 1 instance, can scale via multiple PM2 instances",
      "Modular architecture for easy horizontal scaling",
      "Streaming SSE may require load balancing for multiple clients",
      "Horizontal scaling of OCR workers",
      "Load balancing API requests",
      "Support for multiple simultaneous SSE connections"
    ]
  },
  "error_handling": {
    "error_format": [
      "Standard JSON with message and HTTP code",
      "Validation via Zod with standardized messages",
      "Object with success (boolean) and error (string)",
      "Centralized error handler middleware format",
      "JSON with error code, message and details",
      "Promises rejected on failure"
    ],
    "logging_strategy": [
      "Structured logging with pino and pino-pretty",
      "Logs separated for errors (logs/error.log) and output (logs/out.log)",
      "LogLevel configurable via environment variable",
      "Logs stored in /logs, *.log files ignored in version control",
      "Console.log for results and errors",
      "Logs disabled in tests (logger: false)"
    ],
    "monitoring_tools": [
      "PM2 for monitoring and automatic restart",
      "Prometheus",
      "Grafana"
    ],
    "error_recovery": [
      "Automatic process restart on 1G memory limit",
      "Error handling via Fastify middleware",
      "Standardized error response for failures, no automatic retry",
      "Graceful shutdown to avoid request loss",
      "Immediate response with status 400 for validation errors",
      "Interruption of streaming on error, 401 response for failed authentication",
      "Try/catch for error capture, no retry"
    ]
  },
  "dependencies_context": {
    "critical_dependencies": [
      "@typescript-eslint/parser",
      "@typescript-eslint/eslint-plugin",
      "eslint",
      "prettier",
      "NutJS",
      "Fastify",
      "TSyringe",
      "Zod",
      "Node.js",
      "PM2",
      "@nut-tree-fork/nut-js",
      "pino",
      "dotenv",
      "TypeScript 5.0",
      "Jest",
      "Tesseract OCR",
      "OpenCV",
      "TypeScript compiler",
      "Node.js runtime",
      "Postman for testing",
      "EventSource"
    ],
    "deprecated_packages": [
      "None identified"
    ],
    "version_constraints": [
      "ECMAScript 2024",
      "TypeScript 5.0",
      "@nut-tree-fork/nut-js ^4.2.0",
      "fastify ^4.24.0",
      "typescript ^5.3.2",
      "zod >=3.0.0",
      "tsyringe >=4.0.0",
      "dotenv >=16.0.0",
      "Jest >=29.x",
      "Tesseract >=5.0",
      "OpenCV >=4.5"
    ],
    "internal_packages": [
      "src/ modules organized by responsibility",
      "domain/entities",
      "domain/use-cases",
      "dto",
      "services",
      "application/services",
      "infrastructure/adapters",
      "config",
      "application/dto",
      "schemas",
      "src/interface/controllers",
      "src/application/services",
      "src/config",
      "src/domain/entities/mouse-action.js",
      "src/config/mouse.config.js"
    ]
  },
  "current_challenges": {
    "technical_debt": [
      "Command validation can be more robust",
      "Lack of timeout for async operations",
      "Error handling can be more granular",
      "Input validation can be strengthened",
      "Environment variable validation not yet implemented",
      "Use of 'as any' for drag and scroll options may compromise typing",
      "Temporary use of any for images",
      "Imprecise image dimension estimation",
      "Simple authentication may be insufficient for production",
      "Lack of formal automated tests",
      "Refactor legacy image preprocessing code",
      "Improve test coverage on edge cases",
      "Need for more integrated tests with real hardware"
    ],
    "known_issues": [
      "Possible silent failure on unknown commands",
      "Possible latency in smooth scrolls with high duration",
      "Possible overhead in frequent base64 decoding",
      "Default values may mask incorrect configurations",
      "Risk of exceptions if execute is not overridden",
      "Possible failure in correct dimension detection for non-square buffers",
      "Possible overhead in continuous streaming without connection control",
      "Possible error message leakage in production if NODE_ENV misconfigured",
      "Dependency on local API availability",
      "OCR accuracy drops on low-quality scans",
      "High memory usage on large batch processing",
      "Limitations of mock for simulating real mouse behavior"
    ],
    "performance_bottlenecks": [
      "Single instance limitation may impact performance under high load",
      "Potential latency in UI automation depending on environment",
      "Dependency on external services may impact latency",
      "Async loops in scroll may impact performance",
      "Synchronous buffer operations may impact performance",
      "Sequential execution may limit throughput",
      "Delays in loops may impact total execution time",
      "Streaming SSE may impact CPU and memory at scale",
      "Image preprocessing step is CPU intensive",
      "Interpolated movements may be costly at high frequency",
      "Smooth scroll may generate multiple calls, impacting performance on limited devices"
    ],
    "migration_status": [
      "Initial project, no migrations in progress",
      "Stable project, no migrations ongoing",
      "Migrating from Tesseract 4 to 5"
    ]
  },
  "team_preferences": {
    "code_review_focus": [
      "ESLint rule compliance",
      "Avoid explicit any",
      "Correct use of async/await",
      "Code quality",
      "Test coverage",
      "Security and validation",
      "Type and error validation",
      "Naming consistency",
      "Separation of responsibilities",
      "Correct registration in DI container",
      "Dependency injection consistency",
      "Immutability validation",
      "Correct use of environment variables",
      "Correct implementation of execute method",
      "Documentation clarity",
      "No unjustified any usage",
      "Interface definition clarity",
      "Dependency injection",
      "Error handling",
      "Modularity",
      "Performance optimizations",
      "Security compliance",
      "Authentication validation",
      "Streaming performance",
      "Mock isolation",
      "Error message clarity"
    ],
    "documentation_requirements": [
      "Clear documentation via JSDoc and README",
      "JSDoc for public methods",
      "Clear documentation of schemas and types",
      "Document environment variables and defaults",
      "Clear documentation for each command and its parameters",
      "Document static methods and interfaces",
      "Clear documentation of error formats and handler usage",
      "Document middleware functions with JSDoc",
      "Clear documentation for controllers and routes",
      "Comprehensive docstrings",
      "Architecture decision records",
      "Clear documentation of environment variables and their effects",
      "Clear documentation of endpoints and data contracts"
    ],
    "communication_style": [
      "Clear and objective comments",
      "Use of _ prefix for ignored arguments",
      "Objective and technical comments",
      "Use of PRs for discussions",
      "Objective and explanatory comments in Portuguese",
      "Objective and technical comments, no excessive verbosity",
      "Clear, concise comments",
      "Respectful and constructive PR discussions",
      "Use of English for technical terms",
      "Objective comments in Portuguese for context"
    ],
    "decision_log": [
      "Adoption of strict rules for promises and unused variables",
      "Adoption of Fastify for performance",
      "Use of tsyringe for DI",
      "Validation with Zod",
      "Use of Dependency Injection for testability and modularity",
      "Use of NutJS for device control",
      "Use of dotenv for configuration",
      "Default values to avoid failures in development",
      "Adoption of Command pattern for modularity and extensibility",
      "Choice of Factory Method for action creation",
      "Use of interfaces for data contracts",
      "Immediate stop on failures for safety",
      "Choice of nut-js for mouse control due to robustness and multiplatform support",
      "Use of Clean Architecture and DI for modularity",
      "Centralized error handling for maintainability and monitoring",
      "Use of Zod for centralized validation",
      "Use of Controller pattern for modularization",
      "Adoption of Fastify Plugin for routes",
      "Use of async/await for async control",
      "Use of ESLint and Jest for quality and testing",
      "Clear separation of ignored files",
      "Decision to ignore environment files and build directories to keep repository clean",
      "Adopted pipeline pattern for modularity",
      "Use OAuth2 for API security",
      "Use of immutable constants for configuration",
      "Dependency on environment variables for flexibility",
      "Use of API key for authentication",
      "Streaming via Server-Sent Events (SSE)",
      "Use of Jest for testing",
      "Global logger mock to avoid log pollution",
      "Use of nut-js for mouse abstraction",
      "Use of linear interpolation for smooth movement",
      "Use of adapter pattern for hardware abstraction",
      "Strict coordinate validation"
    ]
  },
  "api_specifications": {
    "api_style": [
      "REST",
      "RESTful API",
      "REST with HTTP POST and GET endpoints",
      "REST with SSE endpoint for streaming"
    ],
    "versioning_strategy": [
      "Versioning via URL (/api/v1/)",
      "Semantic versioning via package.json",
      "URI versioning (e.g., /api/v1/)"
    ],
    "response_formats": [
      "JSON",
      "Standardized JSON with success, error, and data fields",
      "Base64 encoded images",
      "Arrays of MatchResult",
      "CommandResult with success, data, and error"
    ],
    "rate_limiting": [
      "1000 requests per minute per user"
    ]
  },
  "deployment_context": {
    "environments": [
      "development",
      "production",
      "staging",
      "test",
      "dev (http://localhost:3000)",
      "prod",
      "Development (http://localhost:3000)",
      "Production (configurable via environment)"
    ],
    "deployment_method": [
      "PM2 process manager",
      "Docker",
      "Kubernetes",
      "Node.js runtime",
      "Docker containers orchestrated by Kubernetes",
      "CI/CD pipelines"
    ],
    "environment_variables": [
      "NODE_ENV",
      "PORT",
      "HOST",
      "LOG_LEVEL",
      "MOUSE_SPEED",
      "SCREEN_CONFIDENCE",
      "API_KEY",
      "API_URL",
      "SCREEN_ADAPTER_IMPLEMENTATION",
      "MOUSE_MIN_DUR",
      "MOUSE_MAX_DUR",
      "MOUSE_DEFAULT_SMOOTH",
      "MOUSE_SAMPLE_RATE",
      "MOUSE_STREAM_INTERVAL",
      "MOUSE_DEFAULT_DURATION",
      "DATABASE_URL",
      "REDIS_URL",
      "OCR_API_KEY"
    ],
    "infrastructure_constraints": [
      "Accessibility permissions on macOS",
      "DISPLAY variable on Linux",
      "Memory limit set to 1G for automatic restart",
      "Requires Node.js >=16",
      "Compatible with Linux, Windows, and macOS",
      "Requires access to desktop for automation",
      "Requires access to graphical resources for mouse and screen capture",
      "Persistent connections required for SSE",
      "Low latency requirements",
      "Limited GPU availability",
      "Max 4 CPU cores per pod"
    ]
  },
  "lastCommitHash": "4dfe390c12b64889594311c085cbe1de44322558"
}

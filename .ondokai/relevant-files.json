{
  ".env.example": {
    "summary": "Este arquivo de configuração define variáveis de ambiente essenciais para a execução de uma aplicação backend em ambiente de desenvolvimento. Ele especifica parâmetros de rede como porta e host, níveis de log para monitoramento, além de configurações específicas para controle de mouse e reconhecimento de tela. Também inclui chaves de API para autenticação e integração com serviços externos como OpenAI e DeepSeek, habilitando funcionalidades avançadas de inteligência artificial e busca. O comportamento central do arquivo é fornecer um contexto configurável e seguro para a aplicação operar, facilitando a integração com APIs externas e ajustando parâmetros operacionais conforme o ambiente.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Configuração de ambiente para aplicação backend com integração AI"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend", "AI Integration", "API Authentication"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Development"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Proteção das chaves de API",
          "Configuração correta do ambiente para evitar falhas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["Node.js (versão não especificada)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API", "DeepSeek API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Environment Configuration Pattern", "Twelve-Factor App"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["UPPER_SNAKE_CASE para variáveis de ambiente"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API Keys para OpenAI e DeepSeek"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Log level configurável via LOG_LEVEL"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["OpenAI API", "DeepSeek API"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "PORT",
          "HOST",
          "LOG_LEVEL",
          "MOUSE_SPEED",
          "SCREEN_CONFIDENCE",
          "API_KEY",
          "OPENAI_API_KEY",
          "DEEPSEEK_API_KEY"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".eslintignore": {
    "summary": "Este arquivo de configuração lista diretórios e arquivos típicos de um projeto Node.js com foco em desenvolvimento web e testes automatizados. Ele define exclusões para ferramentas de build, cobertura de testes, logs, configurações de ambiente e arquivos de documentação, indicando um ambiente estruturado para desenvolvimento, testes e deploy. A presença de arquivos como jest.config.js, ecosystem.config.js e webpack.config.cjs sugere integração com testes unitários, gerenciamento de processos e bundling, respectivamente, suportando um fluxo de trabalho moderno e escalável para aplicações JavaScript/TypeScript.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto Node.js Web Application"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento web", "JavaScript", "Node.js", "Test Automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter integridade dos testes automatizados",
          "Garantir isolamento de logs e cobertura"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (ES6+)", "Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "Webpack 5", "PM2 5"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Configuration", "Separation of Concerns"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules/ (dependências)",
          "dist/ (build output)",
          "coverage/ (test coverage)",
          "logs/ (arquivos de log)",
          "web/ (código frontend)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e funções", "kebab-case para arquivos de configuração"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre backend (node_modules, dist) e frontend (web)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.js com regras customizadas"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier configurado para formatação automática"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript strict mode (implícito)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pastas __tests__ e cobertura em coverage/"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks e spies via Jest"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de build e testes"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs separados em logs/ e *.log"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["jest", "webpack", "pm2"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Qualidade do código", "Conformidade com padrões"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e formais"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["PM2", "Docker (possível)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".eslintrc.cjs": {
    "summary": "Este arquivo configura o ESLint para um projeto TypeScript moderno, garantindo a aplicação rigorosa de regras de linting que promovem a qualidade e a manutenção do código. Ele utiliza o parser '@typescript-eslint/parser' para interpretar sintaxe TypeScript avançada e integra regras recomendadas do ESLint e do plugin TypeScript, incluindo verificações que exigem análise de tipos. O arquivo também incorpora a integração com Prettier para formatação consistente, além de definir regras específicas para evitar práticas problemáticas como uso de 'any', promessas não tratadas e variáveis não utilizadas. Um override especial é aplicado para arquivos de teste, apontando para uma configuração de projeto distinta, o que permite validação adequada do código de testes. Essa configuração assegura que o código siga padrões robustos, reduzindo bugs e facilitando a escalabilidade e colaboração no desenvolvimento.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript com ESLint para qualidade de código"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "TypeScript", "Linting", "Qualidade de código"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Código deve seguir regras de linting para evitar erros comuns",
          "Testes devem usar configuração específica para garantir validação correta"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "ECMAScript 2022"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuração declarativa", "Separation of Concerns"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Configuração centralizada em arquivo raiz",
          "Overrides para testes em subdiretórios"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para variáveis e funções", "Arquivos .ts para código TypeScript"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação entre código de produção e testes via overrides"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["ESLint Recommended", "Prettier"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "no-async-promise-executor: error",
          "no-await-in-loop: warn",
          "@typescript-eslint/no-explicit-any: error",
          "@typescript-eslint/no-floating-promises: error",
          "@typescript-eslint/await-thenable: error",
          "@typescript-eslint/no-unused-vars: error (ignora args iniciados com '_')"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com plugin ESLint"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript strict com análise de tipos via tsconfig.json"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Arquivos em pasta tests/**/*.ts com override de parserOptions"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["eslint . --ext .ts"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["prettier --write ."]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@typescript-eslint/parser",
          "eslint",
          "@typescript-eslint/eslint-plugin",
          "prettier"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatibilidade com ECMAScript 2022 e TypeScript 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Conformidade com regras de linting", "Uso correto de tipos TypeScript"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de ESLint com integração TypeScript e Prettier para padronização"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".nvmrc": {
    "summary": "O código consiste em um valor literal numérico simples, especificamente o número 20, sem qualquer lógica, função ou estrutura adicional. Seu comportamento é estático e não realiza transformações, operações ou interações com outros componentes do sistema. Funcionalmente, ele representa um dado fixo que pode ser utilizado como constante ou valor de configuração em um contexto maior, mas isoladamente não produz efeitos observáveis ou mudanças de estado. Não há integração explícita com outros módulos, nem padrões arquiteturais aplicados, e não apresenta riscos de segurança ou performance devido à sua simplicidade extrema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto genérico sem nome definido"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Indefinido"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Indefinido"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Nenhuma regra identificada"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["Indefinido"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Nenhum"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Nenhum"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["Indefinido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Nenhum"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Indefinido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Indefinido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Nenhum"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Indefinido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Nenhum"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Indefinido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Indefinido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhum"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Indefinido"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhum"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Indefinido"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Indefinido"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Indefinido"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Indefinido"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Nenhum"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Nenhum"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Nenhum"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Nenhum"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Indefinido"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Indefinido"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Indefinido"]
      }
    ]
  },
  ".prettierignore": {
    "summary": "Este arquivo é um .gitignore configurado para projetos Node.js com foco em manter o repositório limpo de arquivos e pastas gerados automaticamente durante o desenvolvimento, build e execução. Ele exclui diretórios comuns como node_modules, dist, coverage, e arquivos de log, além de configurações específicas de ambiente e IDEs, garantindo que apenas o código-fonte relevante e arquivos de configuração essenciais sejam versionados. Essa prática evita conflitos, reduz o tamanho do repositório e melhora a eficiência do controle de versão, facilitando a colaboração e a manutenção do projeto.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto Node.js com foco em backend e frontend integrados"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento web full-stack", "Node.js ecosystem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter repositório limpo de arquivos temporários e sensíveis",
          "Garantir integridade do código versionado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (ES6+)", "TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Node.js 18.x", "Express 4.x", "React 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["PostgreSQL 15", "Redis 7.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["APIs REST externas", "Serviços de autenticação OAuth2"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm 9.x"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["MVC", "Modularização por feature"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules/ para dependências",
          "dist/ para builds",
          "coverage/ para relatórios de testes",
          "logs/ para arquivos de log"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre backend e frontend", "Isolamento de dependências externas"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para ES6 e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com configuração no tsconfig.json"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/ para testes unitários e integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Uso de jest.mock e fixtures para dependências externas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm ci"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Role-based Access Control (RBAC)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Tokens JWT, senhas, chaves API - armazenados em variáveis de ambiente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Security-Policy", "X-Frame-Options", "Strict-Transport-Security"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["TLS para comunicação", "Hashing bcrypt para senhas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["API responses < 200ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de resposta priorizada sobre uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache Redis com TTL configurado para dados estáticos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Arquitetura escalável horizontalmente via containers"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON padrão com campos code, message e details"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis (info, warn, error) usando Winston"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Sentry para monitoramento de erros em produção"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retries automáticos para falhas temporárias", "Fallbacks configurados"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Express", "TypeScript", "Jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js >=18", "TypeScript 5.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["@company/utils", "@company/api-client"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Refatoração de módulos legados em JavaScript para TypeScript"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Inconsistências em ambientes de desenvolvimento local"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Consultas pesadas no banco de dados sem cache"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração para TypeScript em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Segurança, legibilidade e cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para APIs e módulos críticos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e educados, PRs detalhados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do padrão MVC e uso de JWT para autenticação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["URI versioning (ex: /api/v1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["application/json"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["1000 requests por minuto por IP"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development (http://dev.example.com)",
          "staging (http://staging.example.com)",
          "production (http://example.com)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containers orquestrados via Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "DATABASE_URL", "JWT_SECRET"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória em pods Kubernetes", "Regras de firewall restritivas"]
      }
    ]
  },
  ".prettierrc": {
    "summary": "Este arquivo configura regras de formatação de código para um projeto JavaScript/TypeScript utilizando Prettier, definindo padrões como uso obrigatório de ponto e vírgula (semi), vírgula final em todos os elementos de listas e objetos (trailingComma), aspas simples (singleQuote), largura máxima de linha de 100 caracteres (printWidth) e tabulação de 2 espaços (tabWidth). O objetivo principal é garantir consistência e padronização no estilo do código-fonte, facilitando a manutenção, legibilidade e integração entre equipes. A configuração atua como um contrato de estilo que automatiza a formatação, reduzindo discussões sobre estilo e prevenindo erros comuns relacionados a inconsistências visuais e sintáticas no código.",
    "properties": [
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "semi: true",
          "trailingComma: all",
          "singleQuote: true",
          "printWidth: 100",
          "tabWidth: 2"
        ]
      }
    ]
  },
  "NutJS-Desktop-Automation-API.postman_collection.json": {
    "summary": "Este arquivo define uma API REST completa para automação desktop utilizando a biblioteca NutJS, permitindo controle programático do mouse, teclado, operações de clipboard, captura e reconhecimento de tela, além de streaming de eventos em tempo real. A API suporta múltiplas operações detalhadas, como movimentação e clique do mouse com parâmetros configuráveis de suavidade e duração, digitação de texto com modos variados de velocidade, combinações de teclas, manipulação do conteúdo do clipboard e captura de tela com reconhecimento de imagens para automação baseada em visão computacional. Também inclui endpoints para integração com modelos LLM para geração de texto e análises estruturadas, com suporte a autenticação via API key e tratamento de erros padronizado. A arquitetura modular e orientada a recursos facilita a extensão e integração em fluxos de trabalho de automação, testes e monitoramento, garantindo respostas rápidas e confiáveis com validação rigorosa dos dados de entrada e saída.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Desktop Automation API - API REST para automação desktop"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação Desktop",
          "Desktop Automation",
          "UI Testing",
          "Clipboard Management",
          "Screen Capture",
          "Keyboard and Mouse Control"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação obrigatória via API key para acesso aos endpoints",
          "Validação rigorosa dos parâmetros de entrada para evitar comandos inválidos",
          "Limites de tempo e tamanho para operações de digitação e captura",
          "Garantia de resposta em tempo hábil (menos de 5 segundos para a maioria das operações)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["Node.js (JavaScript/TypeScript)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["NutJS (desktop automation library)", "Express.js (assumido para API REST)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "LLM models (gpt-4.1, gpt-4.1-mini, deepseek-chat, deepseek-reasoner, deepseek-coder) via API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "RESTful API",
          "Modular Resource-based Design",
          "Event-driven (SSE for streaming mouse position)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "api/v1/mouse - endpoints para controle do mouse",
          "api/v1/keyboard - endpoints para controle do teclado",
          "api/v1/clipboard - endpoints para operações de clipboard",
          "api/v1/screen - endpoints para captura e reconhecimento de tela",
          "api/v1/llm - endpoints para geração de texto via modelos LLM",
          "middleware para autenticação e validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para propriedades JSON",
          "snake_case não utilizado",
          "nomes descritivos para endpoints e parâmetros"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre mouse, keyboard, clipboard, screen e LLM",
          "API key como boundary para segurança"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["JavaScript Standard Style (implícito)"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários em Markdown para descrição de endpoints e parâmetros"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript typings presumidos para payloads e respostas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Postman Tests (JavaScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes embutidos em coleções Postman para pré-requisição e validação de respostas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Validação de propriedades de sucesso e tempo de resposta"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via HTTP Header"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Acesso restrito a usuários com chave válida",
          "Sem níveis de acesso diferenciados"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API keys", "Conteúdo do clipboard"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Type: application/json", "Accept: text/event-stream para SSE"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Recomendado uso de HTTPS para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Respostas em menos de 5000ms para operações padrão"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e responsividade para operações de input e captura"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplas requisições simultâneas",
          "Streaming SSE para dados em tempo real"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error, code e detalhes"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Validação prévia para evitar execução de comandos inválidos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["NutJS library", "Modelos LLM externos", "Postman para testes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Limitações na manipulação de grandes volumes de texto para digitação",
          "Necessidade de múltiplas chamadas para ações repetitivas (ex: múltiplos tabs)"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de segurança na autenticação",
          "Consistência nos formatos de resposta",
          "Cobertura de testes automatizados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos parâmetros e exemplos de uso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários técnicos objetivos e uso de Markdown"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de API key para autenticação simples",
          "Separação modular por tipo de operação (mouse, keyboard, clipboard, screen, llm)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL (/api/v1/)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padrão com campos success, data, error"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Localhost: http://localhost:3000"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["baseUrl", "apiKey"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "README.md": {
    "summary": "Este projeto consiste em uma API REST que serve como um wrapper para a biblioteca NutJS, permitindo automação desktop via endpoints HTTP. Seu principal objetivo é expor funcionalidades de controle do mouse e captura de tela, facilitando a integração de automações de interface gráfica em sistemas distribuídos. A arquitetura segue o padrão Clean Architecture, separando claramente as responsabilidades em camadas de domínio, aplicação, infraestrutura e interface, garantindo alta manutenibilidade e escalabilidade. A API oferece endpoints para movimentação e clique do mouse, captura e busca de imagens na tela, além de um health check para monitoramento. O uso de TypeScript, Fastify e injeção de dependências com TSyringe assegura robustez e tipagem rigorosa, enquanto a validação de dados com Zod contribui para a segurança e integridade das operações. O projeto suporta múltiplos sistemas operacionais, com configurações específicas para permissões e variáveis de ambiente, e é preparado para ambientes de desenvolvimento, build e produção, facilitando a adoção em pipelines CI/CD.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS REST API - Automação Desktop via HTTP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação Desktop", "Automação de Interface Gráfica", "Controle de Mouse e Tela"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir execução correta dos comandos de automação",
          "Manter integridade e segurança das operações de controle do mouse",
          "Validação rigorosa dos dados de entrada"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "TSyringe", "Zod"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Domain - entidades e casos de uso",
          "Application - serviços e DTOs",
          "Infrastructure - adaptadores NutJS e providers",
          "Interface - controllers e middleware"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e funções",
          "kebab-case para arquivos",
          "prefixo api/v1 para rotas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Domain não depende de Application ou Infrastructure",
          "Application depende de Domain",
          "Infrastructure depende de Application",
          "Interface depende de Application e Infrastructure"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente para configuração"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade na execução dos comandos de automação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["NutJS", "Fastify", "TSyringe", "Zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de permissões específicas do SO"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Operações de captura e busca de imagens podem ser custosas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de entrada",
          "Separação clara de camadas",
          "Uso correto de injeção de dependências"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos endpoints e exemplos de uso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do Clean Architecture para garantir manutenibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL (/api/v1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev (http://localhost:3000)", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [".env com configurações específicas"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Permissões de acessibilidade no macOS", "Variável DISPLAY no Linux"]
      }
    ]
  },
  "ecosystem.config.js": {
    "summary": "Este arquivo configura a execução de uma aplicação Node.js chamada 'nutjs-api' utilizando o gerenciador de processos PM2. Ele define parâmetros essenciais para o ambiente de produção, como o script principal a ser executado, o número de instâncias, modo de execução, limites de memória para reinício automático e variáveis de ambiente críticas, incluindo NODE_ENV e porta de escuta. Além disso, especifica arquivos para registro de logs de saída e erros, garantindo monitoramento e manutenção adequados. O comportamento central é garantir a disponibilidade e estabilidade da aplicação em ambiente de produção, facilitando a gestão de processos e a recuperação automática em caso de falhas ou consumo excessivo de memória.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-api", "API para automação e controle de dispositivos via Node.js"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Controle de dispositivos", "Node.js API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Disponibilidade contínua da API", "Limite de uso de memória para evitar crashes"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["Node.js 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Process Manager Pattern (PM2)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["dist/ - código transpilado", "logs/ - arquivos de logs"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para nomes de apps", "lowercase para scripts e arquivos de log"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre código fonte (dist/) e logs (logs/)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Controle de memória para evitar crashes"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Uso de instância única limita escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs separados para erros e saída padrão", "Monitoramento via arquivos em logs/"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["PM2 internal monitoring"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reinício automático ao exceder limite de memória"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["pm2", "node"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Uso de uma única instância pode limitar throughput"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do PM2 para gerenciamento de processos",
          "Configuração para modo fork e limite de memória"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["PM2 process manager"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV=production", "PORT=3000"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limite de memória de 1GB para reinício automático"]
      }
    ]
  },
  "jest.config.js": {
    "summary": "Este arquivo configura o ambiente de testes para um projeto TypeScript que utiliza Jest com suporte a módulos ECMAScript (ESM). Ele define presets específicos para integração com ts-jest, configura o ambiente de execução dos testes para Node.js, e mapeia extensões e módulos para garantir compatibilidade com ESM. Além disso, especifica padrões para transformação de arquivos TypeScript, ignora transformações em certos módulos, define padrões para localização dos testes, coleta e reporta cobertura de código com metas mínimas, e configura timeout e scripts de setup para o ambiente de testes. Essa configuração assegura que os testes sejam executados de forma consistente, com cobertura adequada e suporte a recursos modernos do TypeScript e ESM, facilitando a manutenção e qualidade do código no ciclo de desenvolvimento.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "ts-jest (versão compatível com Jest 29)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["**/__tests__/**/*.test.ts", "**/tests/**/*.test.ts", "**/tests/**/*.spec.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["branches >= 80%", "functions >= 80%", "lines >= 80%", "statements >= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_timeout",
        "value": ["10000 ms"]
      },
      {
        "property": "development_workflow",
        "subProperty": "setup_files_after_env",
        "value": ["<rootDir>/tests/setup.ts"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["ts-jest", "jest", "typescript", "clipboardy"]
      }
    ]
  },
  "package-lock.json": {
    "summary": "O projeto nutjs-rest-api é uma API RESTful desenvolvida em TypeScript que utiliza o framework Fastify para fornecer uma interface eficiente e escalável para automação de interações com o sistema operacional, utilizando a biblioteca @nut-tree-fork/nut-js. Ele integra funcionalidades para manipulação de clipboard, processamento de imagens com Sharp, e gerenciamento de dependências e injeção de dependência via tsyringe, garantindo modularidade e testabilidade. O sistema é configurado para ambientes modernos Node.js, com suporte a variáveis de ambiente via dotenv, geração de IDs únicos com nanoid, e logging estruturado com pino e pino-pretty. A arquitetura favorece a separação de responsabilidades, validação de dados com zod, e testes automatizados com Jest e ts-jest, assegurando qualidade e manutenção contínua. O projeto é adequado para automação de tarefas desktop via API, com foco em performance, segurança e extensibilidade, suportando múltiplas plataformas (Windows, Linux, macOS).",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-rest-api", "API REST para automação desktop"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação desktop", "API REST", "Interação com sistema operacional"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade das ações de automação",
          "Segurança no acesso ao clipboard",
          "Validação rigorosa de dados de entrada"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "Node.js >=16"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.29.1", "tsyringe 4.10.0", "Jest 29.7.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "dotenv (configuração ambiente)",
          "clipboardy (clipboard management)",
          "sharp (image processing)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Modular Architecture", "REST API"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/controllers (API endpoints)",
          "src/services (business logic)",
          "src/utils (helpers)",
          "tests (unit and integration tests)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controllers, services e infra",
          "Uso de interfaces para abstração",
          "Injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com @typescript-eslint plugin",
          "Regras para evitar any e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão",
          "Integração com ESLint para formatação consistente"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes principais"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Uso de zod para validação runtime"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.7.0", "ts-jest para integração com TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Uso de Jest mocks e fixtures para isolamento"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow com branches feature, main e hotfix"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev (executa Fastify em modo desenvolvimento)"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test (executa Jest)"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build (compila TypeScript para JavaScript)"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint (executa ESLint)"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format (executa Prettier)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no pacote, presumivelmente JWT ou API Key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso via middleware Fastify (não detalhado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Clipboard data tratado com cuidado para evitar vazamentos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Configuração recomendada via Fastify plugins (não detalhado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Uso de HTTPS presumido para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para operações de automação e API REST"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e eficiência na manipulação de eventos e imagens"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache local para dados temporários (não detalhado)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via Fastify e Node.js cluster"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON padrão com mensagens e códigos HTTP"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging estruturado com pino e pino-pretty"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Possível integração com ferramentas externas (não detalhado)"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros via middleware Fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "fastify", "pino", "tsyringe", "zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js >=16", "TypeScript 5.x", "Fastify 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["@nut-tree-fork/* (nut-js ecosystem)"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum explicitamente identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Compatibilidade entre versões de Node.js e dependências nativas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Processamento intensivo de imagens pode impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Atualizado para TypeScript 5.x, uso de Fastify 4.x"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Qualidade da tipagem", "Cobertura de testes", "Segurança e validação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc e README atualizados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e PRs com descrição detalhada"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Fastify para alta performance", "Uso de tsyringe para DI"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL ou headers (não detalhado)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado, recomendada implementação via plugins Fastify"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker (presumido)", "Node.js process manager"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["PORT", "NODE_ENV", "API_KEYS (não expostos)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Suporte multiplataforma (Windows, Linux, macOS)",
          "Requisitos de permissões para automação"
        ]
      }
    ]
  },
  "package.json": {
    "summary": "O projeto nutjs-rest-api é uma API REST que serve como um wrapper para a automação desktop utilizando a biblioteca NutJS. Seu principal objetivo é expor funcionalidades de automação de interface gráfica via endpoints HTTP, permitindo controle programático de ações no desktop, como manipulação de mouse, teclado e captura de tela. A aplicação integra tecnologias modernas como Fastify para o servidor web, React para interface web, e ferramentas de OCR como Tesseract.js, além de utilizar injeção de dependências com tsyringe para modularidade. O projeto possui scripts robustos para desenvolvimento, build, testes unitários e integração, além de ferramentas para linting e formatação, garantindo qualidade e manutenção. A arquitetura modular e o uso de padrões como injeção de dependência e separação clara entre backend e frontend facilitam a escalabilidade e integração com sistemas maiores. A solução é ideal para automatizar tarefas repetitivas em desktops via API, habilitando integrações com outras aplicações e fluxos de trabalho automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-rest-api", "API REST para automação desktop com NutJS"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação Desktop", "Automação de Interface Gráfica", "API REST"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Versão 1.0.1 estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução segura de comandos de automação",
          "Integridade das ações no desktop",
          "Disponibilidade da API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "JavaScript ES Modules"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.24.0", "React 18.2.0", "React-Bootstrap 2.9.1", "Webpack 5.89.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI via @langchain/openai", "Tesseract.js para OCR"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Modular Architecture", "REST API"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ para código fonte backend",
          "web/ para frontend React",
          "dist/ para build output",
          "scripts/ para scripts auxiliares"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para scripts e arquivos config"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre backend e frontend",
          "Uso de tsyringe para injeção e desacoplamento",
          "Dependências gerenciadas via package.json"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com @typescript-eslint",
          "Regras para evitar erros comuns e manter padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com tsc --noEmit"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima não especificada, mas uso de jest --coverage configurado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks e spies via Jest"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado explicitamente"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado explicitamente"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado explicitamente"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Scripts para build, lint, test e start indicam pipeline automatizado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev", "npm run dev:web", "npm run dev:full"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test",
          "npm run test:unit",
          "npm run test:integration",
          "npm run test:coverage"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build", "npm run build:web", "npm run build:prod"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint", "npm run lint:fix"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format", "npm run format:check"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no package.json"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não especificado no package.json"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente gerenciadas via dotenv"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não especificado no package.json"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado no package.json"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não especificado explicitamente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Build otimizado para produção via Webpack"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Uso de @fastify/static sugere cache estático para frontend"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Arquitetura modular facilita escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não especificado no package.json"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de pino e pino-pretty para logging estruturado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no package.json"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não especificado no package.json"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "fastify", "react", "tesseract.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["robotjs (versão 0.6.0 pode estar desatualizada)"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Versões fixas e range semânticos no package.json"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Não aplicável"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["TODO no script audit:roadmap indica pendência de roadmap"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Download de tessdata pode falhar no postinstall, fallback implementado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Não identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não especificado"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Qualidade do código via ESLint e Prettier", "Cobertura de testes via Jest"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Uso de JSDoc para documentação inline"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários técnicos em português com termos técnicos em inglês"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de injeção de dependência com tsyringe",
          "Separação clara entre backend e frontend"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via package.json (1.0.1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Node.js server", "Webpack para frontend bundling"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Gerenciadas via dotenv, NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de permissões para automação desktop", "Ambiente Node.js compatível"]
      }
    ]
  },
  "src/application/dto/automation-request.dto.ts": {
    "summary": "Este arquivo define schemas de validação utilizando a biblioteca Zod para representar e validar dados relacionados a interações de mouse e operações de captura e busca na tela. Ele estrutura objetos que descrevem movimentos, cliques, arrastes e scroll do mouse, além de operações de captura de tela e reconhecimento de padrões visuais, garantindo que os dados recebidos estejam dentro de limites e formatos esperados. A abordagem modular e tipada permite integração segura e consistente com sistemas que automatizam ou monitoram ações de interface gráfica, facilitando a manipulação programática de eventos de input e análise visual em aplicações que demandam automação ou testes de UI. O uso de defaults e validações rigorosas assegura robustez e previsibilidade no comportamento das operações, suportando cenários de controle preciso do cursor e análise visual baseada em templates.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Interaction and Screen Automation Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Testes automatizados", "Interação com interface gráfica"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos parâmetros de input para evitar ações inválidas",
          "Garantia de valores default para parâmetros opcionais"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Type-safe Data Modeling"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/schemas - definição de schemas de validação",
          "src/types - tipos inferidos a partir dos schemas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para tipos e schemas", "snake_case para propriedades opcionais"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre schemas de input e tipos inferidos",
          "Isolamento das validações em módulo dedicado"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de schemas e validações"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para simular inputs inválidos e defaults"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação eficiente para evitar overhead em runtime"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros de validação padronizados pelo Zod"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod >=3.0.0 <4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta dos schemas", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do Zod para validação e tipagem"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/clipboard-request.dto.ts": {
    "summary": "Este arquivo define Data Transfer Objects (DTOs) para operações relacionadas ao clipboard, utilizando a biblioteca Zod para validação rigorosa dos dados de entrada. Ele oferece schemas específicos para as operações de copiar, colar e limpar o conteúdo do clipboard, garantindo integridade e limites claros, como o tamanho máximo de 1 MB para o conteúdo copiado. O código foca em validar as requisições de forma declarativa, facilitando a integração com APIs RESTful e assegurando que dados inválidos sejam rejeitados antes do processamento, promovendo segurança e robustez na manipulação do clipboard em aplicações que dependem dessas operações.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Clipboard Operations API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["clipboard management", "data validation", "API integration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Content size must not exceed 1 MB", "Content cannot be empty for copy operation"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["DTO", "Schema Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/dtos - Contém definições de DTOs e schemas de validação"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e funções", "PascalCase para tipos e schemas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre validação (schemas) e lógica de negócio"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/dtos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de schemas e validações"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Clipboard content limited to 1 MB to prevent abuse"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validation efficiency to minimize request overhead"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Zod validation error format"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Limitação fixa de 1 MB pode ser insuficiente para alguns casos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta dos schemas", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os schemas e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação declarativa"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/keyboard-request.dto.ts": {
    "summary": "Este arquivo define Data Transfer Objects (DTOs) para operações relacionadas a teclado, utilizando a biblioteca Zod para validação rigorosa dos dados de entrada. Ele oferece schemas para três tipos principais de requisições: digitação de texto com controle de timing, pressionamento de teclas específicas e combinações de teclas, garantindo integridade e conformidade com regras de negócio específicas, como limites de tamanho, tipos e valores permitidos. O código foca em validar entradas para evitar caracteres inválidos, assegurar que as teclas pressionadas estejam dentro de um conjunto suportado e limitar o número de teclas em combinações, habilitando uma interface segura e consistente para manipulação programática de eventos de teclado em sistemas maiores.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard Operations DTOs and Validation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de interface", "Input Handling", "UI Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Text input must not be empty or contain only control characters",
          "Key presses must be from a predefined supported set",
          "Key combinations must have between 1 and 5 keys and only use allowed modifiers and letters",
          "Timing values must be non-negative integers and not exceed 300000ms"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["DTO Pattern", "Schema Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/dtos - Contém definições de DTOs e schemas de validação para entrada de dados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e propriedades", "PascalCase para tipos e schemas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre schemas de validação e lógica de negócio"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/dtos - Testes unitários para validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90% para DTOs"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para entradas válidas e inválidas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint, Test, Build e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Value field max 300000ms to limit delay"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação rápida e eficiente para evitar overhead"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Zod error objects com mensagens customizadas"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod >=3.0.0 <4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta de inputs", "Cobertura de testes", "Clareza e documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os schemas e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação por ser leve e expressivo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/clipboard.service.ts": {
    "summary": "O arquivo implementa um serviço de automação para manipulação da área de transferência (clipboard) em um ambiente Node.js utilizando TypeScript. Ele oferece funcionalidades principais para copiar, colar e limpar o conteúdo do clipboard, garantindo validações como limite máximo de tamanho do conteúdo (1 MB) e tratamento robusto de erros. A classe ClipboardService integra-se ao sistema via injeção de dependência (tsyringe) e utiliza a biblioteca clipboardy para interagir com o clipboard do sistema operacional, retornando resultados padronizados que indicam sucesso ou falha das operações, além de fornecer dados relevantes sobre o conteúdo manipulado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Clipboard Automation Service",
          "Serviço de automação para manipulação da área de transferência"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Clipboard management", "Sistemas desktop e web"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Conteúdo copiado não pode exceder 1 MB",
          "Operações devem retornar resultados padronizados",
          "Tratamento robusto de erros"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["clipboardy 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Service Layer", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/ - entidades e interfaces de domínio",
          "services/ - serviços de automação",
          "infrastructure/ - integrações externas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para métodos e variáveis",
          "sufixo Service para classes de serviço"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e infraestrutura",
          "Interfaces definem contratos para serviços",
          "Dependências injetadas via tsyringe"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Regras para evitar any implícito e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Uso de tipos explícitos para parâmetros e retornos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/services/clipboardService.test.ts",
          "Testes unitários focados em copy, paste e clear"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de clipboardy para simular operações de clipboard"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard pode conter dados sensíveis, deve ser tratado com cuidado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações devem ser rápidas, idealmente < 100ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre velocidade e uso de memória, limite de 1 MB para evitar overhead"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto CommandResult com success boolean e error string opcional"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de erros devem ser capturados externamente, não implementado diretamente"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções para evitar falhas e retornar mensagens claras"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["clipboardy", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["clipboardy >=3.0.0", "tsyringe >=4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../domain/interfaces/automation-service.interface.js",
          "../../domain/entities/command-result.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de testes mais abrangentes para edge cases do clipboard"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possíveis falhas em sistemas operacionais com restrições de acesso ao clipboard"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Validação de entrada", "Consistência de retorno"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de clipboardy para compatibilidade multiplataforma",
          "Limite de 1 MB para evitar overhead"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["CommandResult com success, data e error"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipeline"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Dependência do sistema operacional para acesso ao clipboard"]
      }
    ]
  },
  "src/application/services/event-buffer.service.ts": {
    "summary": "O código implementa um serviço de buffer circular para armazenamento temporário de eventos do tipo InputEvent, permitindo o replay eficiente de eventos após reconexões de clientes SSE (Server-Sent Events). Ele mantém um histórico limitado e gerenciável de eventos, suportando operações como adição, recuperação por ID, intervalo de tempo, limpeza e remoção de eventos antigos, garantindo a integridade e disponibilidade dos dados para sincronização de estado entre servidor e clientes. O serviço é projetado para operar com alta performance e baixa latência, utilizando um buffer circular fixo para otimizar o uso de memória e facilitar a manutenção do histórico recente de eventos em sistemas reativos e distribuídos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["EventBuffer Service", "Buffer circular para eventos SSE"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Realtime event streaming", "SSE (Server-Sent Events)", "Event replay"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter ordem cronológica dos eventos",
          "Garantir replay correto após reconexão",
          "Não perder eventos recentes dentro do buffer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["SSE clients", "Environment variables"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Circular Buffer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - configurações",
          "src/types - definições de tipos",
          "src/services - serviços de negócio"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "PascalCase para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, serviços e configuração",
          "Dependência unidirecional para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any implícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para InputEvent e logger"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente (serviço interno)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso externo ao serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Eventos não contêm dados sensíveis diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Gerenciados em camada superior (SSE)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável ao buffer em memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações em tempo constante ou linear com tamanho do buffer"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e uso eficiente de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer circular atua como cache de eventos recentes"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Limitação do tamanho do buffer para evitar uso excessivo de memória"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não há tratamento explícito de erros no código apresentado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de logger para info e debug em operações críticas"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reinicialização do buffer via método clear"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "logger", "InputEvent type"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["tsyringe 4.x", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../types/input-event.types.js", "../../config/logger.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Correção do uso incorreto de 'new array' para 'new Array'"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Ausência de controle de concorrência",
          "Possível perda de eventos em buffer cheio"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Operações lineares em tamanho do buffer para recuperação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Estável, sem migrações em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de estilo", "Cobertura de testes", "Performance e segurança"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc completo para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de buffer circular para otimização de memória"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Array de InputEvent"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no serviço"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["INPUT_EVENT_BUFFER"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória para buffers grandes"]
      }
    ]
  },
  "src/application/services/event-dispatcher.service.ts": {
    "summary": "O código implementa um serviço singleton chamado EventDispatcher que gerencia o despacho e distribuição de eventos de input, especificamente eventos de mouse e teclado, para múltiplos ouvintes registrados. Utilizando o padrão Observer, ele mantém uma fila interna de eventos, aplica um rate limiter configurável para controlar a taxa de eventos processados por segundo e filtra teclas não imprimíveis para garantir a qualidade dos dados. O serviço suporta eventos padrão e estendidos, garantindo a atribuição de identificadores únicos e processa a fila de eventos de forma assíncrona, notificando todos os ouvintes registrados, além de fornecer estatísticas em tempo real sobre seu estado operacional.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["EventDispatcher", "Serviço de despacho de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Input event management",
          "User interaction tracking",
          "Real-time event processing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Rate limiting para evitar sobrecarga",
          "Garantir entrega de eventos para todos os listeners",
          "Filtragem de teclas não imprimíveis"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["nanoid (ID generation)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton", "Observer", "Rate Limiter"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ (configurações e logger)",
          "types/ (definições de tipos)",
          "services/ (serviços singleton)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "PascalCase para interfaces e tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, configuração e serviços",
          "Dependência unidirecional para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/services", "tests/integration"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para listeners e eventos", "Fixtures para eventos padrão e estendidos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Listeners devem ser confiáveis para evitar execução maliciosa"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Processamento assíncrono imediato para minimizar latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de processamento e controle de taxa"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Singleton limita instância, mas pode ser escalado horizontalmente com cuidado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs estruturados via logger configurado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis debug, info, warn e error para monitoramento detalhado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Logger customizado, possível integração com sistemas externos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Continuação do processamento mesmo após falha em listener"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "nanoid", "logger interno"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["tsyringe >=4.0.0", "nanoid >=4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../types/input-event.types.js",
          "../../config/environment.js",
          "../../config/logger.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Melhorar tratamento de eventos estendidos", "Documentação mais detalhada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Rate limit pode descartar eventos em picos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Processamento sequencial da fila pode atrasar em alta carga"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de tratamento de erros",
          "Conformidade com rate limiting",
          "Qualidade dos logs"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de emojis para logs informativos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de singleton para garantir instância única",
          "Rate limiter configurável via variável de ambiente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Internal event dispatching API"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Configuração via variável de ambiente INPUT_EVENT_RATE",
          "Limite padrão 5000 eventos por segundo"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["INPUT_EVENT_RATE"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação de instância única por processo",
          "Dependência de variáveis de ambiente para configuração"
        ]
      }
    ]
  },
  "src/application/services/keyboard.service.ts": {
    "summary": "Este arquivo implementa um serviço de automação de teclado que permite a digitação programada de texto com controle refinado de timing, suportando diferentes estratégias de input: instantânea, por caractere com delay, e com tempo total definido. O serviço abstrai a interação com o hardware via um adaptador de teclado, emitindo eventos para rastreamento de ações e garantindo sanitização do texto para evitar caracteres de controle perigosos. Além da digitação, oferece funcionalidades para pressionar teclas isoladas e executar combinações, com validações rigorosas para limites de entrada e tempo, assegurando robustez e flexibilidade na automação de tarefas que envolvem entrada de texto e comandos de teclado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Keyboard Automation Service",
          "Serviço de automação de teclado com controle de timing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de software", "Input simulation", "Keyboard automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Texto digitado não pode conter caracteres de controle perigosos",
          "Limite máximo de 10.000 caracteres para digitação",
          "Delay máximo permitido de 300.000ms (5 minutos)",
          "Combinações de teclas suportam até 5 teclas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js (mouse position API)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Strategy Pattern", "Dependency Injection", "Service Layer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/interfaces - interfaces de domínio",
          "domain/entities - entidades de domínio",
          "services - implementação dos serviços de automação",
          "utils - utilitários e helpers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I' (ex: IKeyboardAdapter)",
          "Classes em PascalCase",
          "Métodos em camelCase",
          "Constantes e enums em PascalCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e serviços",
          "Dependência invertida via injeção para adaptadores e eventos",
          "Serviço KeyboardService como ponto central de orquestração"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo no-unused-vars, strict typing"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e interfaces"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode habilitado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para IKeyboardAdapter e EventDispatcher"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória, testes aprovados, linting passado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Texto digitado deve ser sanitizado para evitar caracteres de controle"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Delay máximo configurável até 300.000ms (5 minutos)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de digitação e precisão de eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Processamento em lotes para textos longos para evitar bloqueios"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto com success boolean e mensagem de erro em string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Eventos de teclado emitidos via EventDispatcher para auditoria"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções com retorno estruturado para falhas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["IKeyboardAdapter", "EventDispatcher", "@nut-tree-fork/nut-js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Timing value máximo de 300000ms", "Limite máximo de 10000 caracteres"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["domain/interfaces", "domain/entities", "services"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Manutenção das estratégias de digitação e eventos pode crescer em complexidade"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Performance pode ser impactada em textos muito longos com delays altos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Uso de await sequencial em digitação por caractere pode causar lentidão"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de limites, tratamento de erros, clareza nas estratégias"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para interfaces e métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do Strategy Pattern para flexibilidade em timing de digitação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Objeto com success boolean, data ou error string"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/mouse.service.ts": {
    "summary": "O código implementa um serviço de automação para controle do mouse, fornecendo funcionalidades para mover, clicar, arrastar e rolar o cursor na tela com suporte a movimentos suaves e validação de coordenadas. Ele integra um adaptador de mouse abstrato para executar ações físicas e um despachante de eventos para emitir eventos relacionados às ações do mouse, garantindo rastreabilidade e controle. O serviço é projetado para ser injetável e extensível, facilitando a integração em sistemas maiores que demandam automação de input, com tratamento robusto de erros e logging detalhado para monitoramento e diagnóstico.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Automation Service",
          "Controle programático de ações do mouse para automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Input Automation", "Controle de dispositivos de entrada"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa de coordenadas dentro dos limites da tela",
          "Emissão correta e sequencial de eventos de mouse",
          "Execução confiável das ações físicas do mouse"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js (screen dimension API)", "pino (logging)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern", "Observer Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/entities (entidades de domínio)",
          "dto (objetos de transferência de dados)",
          "services (serviços de aplicação)",
          "types (tipos compartilhados)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para métodos e variáveis",
          "Sufixo 'Request' para DTOs"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, DTOs e serviços",
          "Dependência unidirecional via injeção"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e interfaces"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode ativado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ paralela aos serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de IMouseAdapter e EventDispatcher para testes unitários"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um revisor",
          "Checks de lint e testes automatizados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test, deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço local de automação)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso externo recomendado para uso do serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Movimentos e cliques com duração configurável, padrão 1000ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Suavidade do movimento priorizada sobre velocidade bruta"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhum cache implementado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Projeto para uso local, escalabilidade não aplicável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados como exceções padrão com mensagens descritivas"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging detalhado com níveis debug, info e error via pino"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado, recomendação para integração externa"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Propagação de erros para camadas superiores para tratamento"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["IMouseAdapter", "EventDispatcher", "@nut-tree-fork/nut-js", "pino"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["domain/entities", "dto", "services", "types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum débito técnico identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência da resolução da tela para validação de coordenadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Scroll suave pode causar delays perceptíveis em durações longas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de tratamento de erros",
          "Cobertura de testes",
          "Consistência de logging"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para métodos públicos e interfaces"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos, sem excesso de verbosidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de DI para facilitar testes e extensibilidade",
          "Uso de eventos para rastreabilidade das ações do mouse"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (serviço local)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Local development", "Production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Node.js runtime"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de acesso ao hardware do mouse e permissões adequadas"]
      }
    ]
  },
  "src/application/services/screen.service.ts": {
    "summary": "Este arquivo implementa um serviço de captura e busca de imagens na tela, utilizando injeção de dependência para abstrair a interface de captura e reconhecimento visual. A classe ScreenService oferece métodos assíncronos para localizar templates gráficos na tela, capturar regiões específicas e aguardar a aparição de um template dentro de um timeout configurável. O serviço transforma imagens codificadas em base64 em buffers binários para processamento, delegando a lógica de reconhecimento ao adaptador injetado. Além disso, registra logs detalhados para monitoramento e tratamento de erros, garantindo rastreabilidade e robustez na operação. Essa funcionalidade é essencial para automação de testes visuais, robôs de automação ou sistemas que dependem de reconhecimento de padrões visuais em interfaces gráficas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Screen Automation Service",
          "Serviço de automação visual para captura e reconhecimento de tela"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Robotic Process Automation (RPA)",
          "Reconhecimento visual",
          "Screen capture"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão mínima de reconhecimento (confidence) deve ser respeitada",
          "Timeouts para espera de templates não devem ser ultrapassados",
          "Logs devem registrar falhas para auditoria"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["ScreenAdapter (interface para captura e reconhecimento visual)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern", "Service Layer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/entities - entidades de domínio",
          "dto - objetos de transferência de dados",
          "services - lógica de negócio e integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para métodos e variáveis",
          "Prefixo I para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre DTOs, entidades de domínio e serviços",
          "Dependência invertida via injeção para adaptadores externos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["@typescript-eslint/recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ ou pasta tests paralela"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de ScreenAdapter para testes unitários"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagens base64 devem ser tratadas com cuidado para evitar exposição"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações de captura e busca devem responder em até 5 segundos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade e precisão do reconhecimento"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Serviço deve suportar múltiplas requisições concorrentes via injeção de dependência"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados com objetos contendo mensagem e stack trace"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso do pino para logs em níveis debug, info e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Rejeição de promises para falhas, sem retry automático"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "pino", "ScreenAdapter interface"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../dto/automation-request.dto.js", "../../domain/entities/screen-region.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Tratamento de erros mais granular", "Melhorar cobertura de testes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência da qualidade do adaptador externo para reconhecimento"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Decodificação base64 e busca podem ser custosas em imagens grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Clareza nos logs", "Uso correto de async/await"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Dependency Injection para desacoplamento", "Uso de pino para logging"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Base64 encoded images", "JSON objects for match results"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker container"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de acesso a recursos gráficos para captura de tela"]
      }
    ]
  },
  "src/config/dependency-injection.ts": {
    "summary": "Este arquivo configura a injeção de dependências para um sistema modular que integra serviços de automação de input, captura e processamento de eventos, além de funcionalidades avançadas de OCR e interação com modelos de linguagem (LLM). Utilizando o container do tsyringe, ele registra adaptadores específicos para mouse, teclado, tela e LLM, além de serviços que encapsulam lógica de negócio para manipulação de input, captura global, processamento de imagens e OCR. O código adota padrões de singleton para componentes que mantêm estado compartilhado, como buffers de eventos e pools de workers OCR, garantindo eficiência e reutilização. A configuração centraliza a orquestração dos módulos, facilitando a escalabilidade e manutenção do sistema, que visa automatizar e interpretar interações de usuário e conteúdo visual, integrando inteligência artificial para análise e resposta contextual.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automação e Processamento de Input e OCR com LLM"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de desktop",
          "Processamento de imagem",
          "Reconhecimento óptico de caracteres",
          "Inteligência Artificial",
          "Interação homem-máquina"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir singleton para serviços compartilhados",
          "Manter isolamento entre adaptadores e serviços",
          "Preservar integridade dos eventos capturados globalmente"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x", "NutJS", "LangChain"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LangChain LLM API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Singleton", "Factory", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio e serviços centrais",
          "infrastructure/adapters - adaptadores para hardware e APIs externas",
          "interface/controllers - controladores para interação com UI e eventos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes e serviços",
          "camelCase para variáveis e funções",
          "sufixo Service para serviços",
          "Adapter para adaptadores"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre application, infrastructure e interface",
          "Dependências unidirecionais do container para serviços"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests localizados em pastas __tests__ correspondentes a cada módulo"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para adaptadores externos e serviços de LLM"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso deve ser implementado em camadas superiores"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados de input do usuário e resultados OCR devem ser tratados com confidencialidade"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Comunicação com LLM deve usar TLS"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações de input e captura devem ser em tempo real",
          "OCR pode tolerar latência moderada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre velocidade e uso de memória",
          "Reutilização via singletons para reduzir overhead"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Uso de pools para OCR workers para otimizar processamento"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Arquitetura modular permite escalabilidade horizontal dos serviços"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros padronizados via exceptions e logs estruturados"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs centralizados para eventos e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Integração com ferramentas externas não detalhada"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reuso de instâncias singleton para evitar falhas repetidas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "NutJS adapters", "LangChain LLM adapter"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe compatível com reflect-metadata"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "infrastructure/adapters", "interface/controllers"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Documentação do container de dependências pode ser melhorada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível overhead na criação de instâncias transient"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["OCR pode ser gargalo sem pool eficiente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência na injeção de dependências",
          "Uso correto de singletons e transient"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar serviços e adaptadores com JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, foco em comportamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do tsyringe para DI", "Uso de singleton para serviços compartilhados"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["LLM_API_KEY", "OCR_WORKER_COUNT"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de recursos para pool de workers OCR"]
      }
    ]
  },
  "src/config/environment.ts": {
    "summary": "Este arquivo de configuração em TypeScript tem como objetivo principal centralizar e padronizar a leitura das variáveis de ambiente essenciais para a aplicação, garantindo que parâmetros críticos como NODE_ENV, porta, host, níveis de log e chaves de API estejam disponíveis de forma consistente. Ele utiliza a biblioteca dotenv para carregar variáveis de ambiente de arquivos .env, permitindo flexibilidade entre ambientes de desenvolvimento e produção. Além disso, expõe flags booleanas para facilitar a identificação do ambiente atual, habilitando comportamentos condicionais no sistema. Essa abordagem promove a manutenção, segurança e escalabilidade da aplicação ao isolar configurações sensíveis e facilitar a integração com serviços externos como OpenAI e Deepseek.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Configuração de Ambiente Centralizada",
          "Gerenciamento de variáveis de ambiente para controle de execução"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Backend Node.js",
          "Configuração e integração com APIs externas (OpenAI, Deepseek)"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Desenvolvimento", "Preparação para produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Variáveis de ambiente devem estar definidas para evitar falhas",
          "Chaves de API não devem ser expostas em código fonte",
          "Ambiente deve ser corretamente identificado para habilitar comportamentos específicos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "Node.js 18+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["dotenv 16.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API", "Deepseek API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Object", "Feature Flags"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - arquivos de configuração e variáveis de ambiente",
          "src/modules - lógica de negócio e integração com APIs"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e propriedades",
          "PascalCase para tipos e constantes exportadas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada em módulo próprio para evitar acoplamento",
          "Exposição apenas do objeto environment e flags para uso externo"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de variáveis de ambiente e serviços externos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install && cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Keys para autenticação de serviços externos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso baseado em ambiente e chaves"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API Keys e tokens devem ser mantidos fora do código fonte"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Uso de HTTPS para comunicação com APIs externas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na leitura de configuração",
          "Minimizar overhead no carregamento de variáveis"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Configuração carregada uma única vez na inicialização"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplos ambientes e escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis de log configuráveis via variável LOG_LEVEL"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["dotenv >=16.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação de variáveis de ambiente ainda não implementada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de variáveis de ambiente e segurança das chaves"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar variáveis de ambiente e seus usos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de dotenv para configuração centralizada", "Flags booleanas para ambiente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "PORT",
          "HOST",
          "LOG_LEVEL",
          "MOUSE_SPEED",
          "SCREEN_CONFIDENCE",
          "API_KEY",
          "OPENAI_API_KEY",
          "DEEPSEEK_API_KEY"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/config/input-events.config.ts": {
    "summary": "Este arquivo configura e valida parâmetros essenciais para o sistema de eventos de input, garantindo que o buffer, taxa e tempo de vida dos eventos estejam dentro de limites seguros e operacionais. Ele importa variáveis de ambiente para definir configurações como bufferSize, heartbeatMs, maxRate, maxEventAge e debug, aplicando validações rigorosas para evitar configurações inválidas que possam comprometer a estabilidade do sistema. Ao validar e congelar essas configurações, o código assegura um comportamento previsível e robusto do sistema de input events, facilitando a manutenção e integração com outros módulos que dependem dessas definições.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Events Configuration System"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Sistemas de eventos, Input Event Processing, Middleware"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "bufferSize deve estar entre 1 e 100000",
          "heartbeatMs deve estar entre 1000 e 300000 ms",
          "maxRate deve estar entre 1 e 50000 eventos/s",
          "maxEventAge deve estar entre 1000 e 3600000 ms"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Node.js 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["dotenv (environment variable management)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton", "Fail-fast"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do sistema",
          "src/ - código fonte principal",
          "tests/ - testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para interfaces e tipos",
          "UPPER_SNAKE_CASE para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo de configuração isolado para input events",
          "Dependência unidirecional para dotenv e processo Node.js"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e interfaces"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/ para testes de configuração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de variáveis de ambiente e funções de processo"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install && cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente devem ser protegidas e não expostas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Configurações devem garantir baixa latência no processamento de eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre throughput e uso de memória no buffer"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Configurações permitem ajuste para diferentes cargas de eventos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Lançamento de Error com mensagens claras para configuração inválida"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Console.error para erros críticos de configuração"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fail-fast: encerra processo em caso de configuração inválida"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["dotenv versão compatível com Node.js 18+"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de variáveis de ambiente pode causar falhas se não configuradas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Configurações incorretas podem impactar throughput e latência"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação rigorosa de limites e tratamento de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para interfaces e funções"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de fail-fast para evitar execução com configurações inválidas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Configuração de maxRate para limitar eventos por segundo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev, staging, prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker e Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "INPUT_EVENT_BUFFER",
          "INPUT_EVENT_HEARTBEAT",
          "INPUT_EVENT_RATE",
          "INPUT_EVENT_MAX_AGE",
          "INPUT_EVENT_DEBUG"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de memória e CPU para buffers grandes"]
      }
    ]
  },
  "src/config/keyboard.config.ts": {
    "summary": "Este arquivo define configurações imutáveis para funcionalidades de teclado, permitindo a personalização via variáveis de ambiente. Ele estabelece parâmetros como modo padrão de digitação, tamanho máximo de texto, delays por caractere e tamanho de lote para processamento, além de habilitar logs para debug. A função de validação assegura que os valores configurados estejam dentro de limites seguros e aceitáveis, prevenindo erros de configuração que possam impactar a performance ou comportamento do sistema. O código integra-se a um sistema maior que manipula entrada de texto, garantindo flexibilidade e robustez na configuração do comportamento do teclado, com foco em controle preciso de timing e volume de dados processados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard Input Configuration Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software Development", "Input Automation", "Keyboard Event Handling"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "maxTextLength must be between 1 and 100000",
          "defaultDelayPerChar must be non-negative",
          "maxDelay must be between 0 and 3600000",
          "batchSize must be between 1 and 1000",
          "defaultMode must be one of: instant, perChar, total"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["dotenv (environment variable loader)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Immutable Configuration Object",
          "Environment-based Configuration",
          "Validation Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do sistema",
          "src/ - código fonte principal",
          "tests/ - testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para constantes e funções",
          "PascalCase para tipos e interfaces",
          "snake_case para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configurações isoladas em módulo próprio",
          "Validação separada da definição de constantes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e constantes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/keyboardConfig.test.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock environment variables with jest"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "Passing CI checks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Unit tests", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Environment variables should not expose sensitive data"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["N/A"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Delays configuráveis para otimização de performance"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balance entre velocidade de digitação e uso de recursos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["N/A"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Batch size configurável para escalabilidade no processamento"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Lançamento de Error com mensagens claras"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Debug mode habilita logs detalhados"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["N/A"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Validação prévia evita estados inválidos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["dotenv latest stable"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação poderia ser mais robusta para tipos e NaN"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falha silenciosa se variáveis de ambiente forem mal formatadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Configurações incorretas podem impactar performance de digitação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["N/A"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de limites e tipos", "Clareza e imutabilidade das configurações"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as funções e constantes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de dotenv para configuração via ambiente",
          "Imutabilidade das configurações para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["N/A"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "KEYBOARD_DEFAULT_MODE",
          "KEYBOARD_MAX_TEXT_LENGTH",
          "KEYBOARD_DEFAULT_DELAY_PER_CHAR",
          "KEYBOARD_MAX_DELAY",
          "KEYBOARD_BATCH_SIZE",
          "KEYBOARD_DEBUG"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limite máximo de delay para evitar bloqueios longos",
          "Batch size para controle de uso de memória"
        ]
      }
    ]
  },
  "src/config/logger.ts": {
    "summary": "Este arquivo configura um logger utilizando a biblioteca pino, adaptando seu comportamento conforme o ambiente de execução. Ele cria uma instância de logger que ajusta o nível de log dinamicamente com base na configuração do ambiente, e aplica um formato de saída humanamente legível (pino-pretty) durante o desenvolvimento, melhorando a legibilidade dos logs com cores e timestamps formatados. Em ambientes de produção, o logger opera em modo padrão, garantindo performance e simplicidade na geração dos logs. Essa configuração centraliza o controle de logging, facilitando a manutenção e a observabilidade do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Logger Configuration Module",
          "Centralized logging setup for environment-aware log output"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software Infrastructure", "Observability", "Logging"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Development"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Log level must reflect environment settings",
          "Development logs must be human-readable",
          "Production logs must be performant and minimal"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript ES Modules"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["pino 8.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton Logger Instance", "Environment-based Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["/src/logger - módulo responsável pela configuração e exportação do logger"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes (não aplicável aqui)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Logger isolado em módulo próprio, dependente apenas do environment e pino"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Nenhum type checking explícito (JavaScript puro)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Performance otimizada em produção", "Legibilidade em desenvolvimento"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis de log configuráveis via environment", "Formato human-readable em dev"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["pino", "environment.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./environment.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de níveis de log", "Configuração correta para ambientes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de pino-pretty apenas em desenvolvimento para melhor legibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["logLevel", "nodeEnv"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/config/mouse.config.ts": {
    "summary": "Este arquivo define uma configuração padrão para operações relacionadas ao mouse, centralizando parâmetros essenciais para controlar o comportamento de ações como movimentos e cliques. Ele extrai valores de variáveis de ambiente para permitir customização dinâmica, garantindo flexibilidade na duração mínima e máxima das ações, suavização do movimento, taxa de amostragem para interpolação e intervalos de streaming. A estrutura é imutável, promovendo segurança e previsibilidade no uso dessas configurações em diferentes partes do sistema, facilitando a integração com módulos que dependem de parâmetros consistentes para manipulação de eventos do mouse.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Control Configuration", "Configuração padrão para operações do mouse"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["User Interaction", "Input Device Management", "Mouse Event Handling"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Stable Configuration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "minDuration must be less than maxDuration",
          "Duration values must be positive integers",
          "Smooth movement flag must be boolean"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["None (Library/Utility Module)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["N/A"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Environment Variables (process.env)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Immutable Configuration Object", "Environment-based Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - arquivos de configuração",
          "src/ - código fonte principal",
          "types/ - definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para constantes e tipos", "snake_case para variáveis de ambiente"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configurações isoladas em módulo próprio",
          "Exportação de tipos para tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para comentários de código"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock environment variables"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "Passing CI checks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Unit Tests", "Build"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Environment variables devem ser protegidas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["N/A"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Configuração deve ser carregada rapidamente na inicialização"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na leitura de configurações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Configuração imutável evita necessidade de cache dinâmico"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Configuração centralizada facilita escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["N/A - valores padrão aplicados em caso de ausência"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["N/A"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["N/A"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para valores padrão em parsing de variáveis de ambiente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["process.env"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >= 4.5"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["N/A"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação de variáveis de ambiente pode ser melhorada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Valores inválidos em variáveis de ambiente podem causar comportamento inesperado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Estável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de valores padrão e tipos", "Imutabilidade das configurações"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários JSDoc para todas as propriedades"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Clareza e objetividade em comentários"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de variáveis de ambiente para flexibilidade",
          "Configuração imutável para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["N/A"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "MOUSE_MIN_DUR",
          "MOUSE_MAX_DUR",
          "MOUSE_DEFAULT_SMOOTH",
          "MOUSE_SAMPLE_RATE",
          "MOUSE_STREAM_INTERVAL",
          "MOUSE_DEFAULT_DURATION"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Variáveis de ambiente devem ser configuradas corretamente para evitar falhas"]
      }
    ]
  },
  "src/domain/entities/command-result.ts": {
    "summary": "Este arquivo define uma interface TypeScript chamada CommandResult, que padroniza o formato de resposta para a execução de comandos em serviços de automação. Seu propósito principal é encapsular o resultado de operações, indicando sucesso ou falha, e fornecendo dados ou mensagens de erro conforme apropriado. Essa estrutura simples e genérica facilita a interoperabilidade entre módulos, garantindo um contrato claro para o tratamento de respostas e erros em fluxos automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Serviço de Automação de Comandos"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Serviços", "Execução de comandos"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir resposta consistente para sucesso e falha",
          "Não perder mensagens de erro"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["DTO", "Interface Segregation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Interfaces definidas em pasta /interfaces para reutilização"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para interfaces", "camelCase para propriedades"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Interface isolada para padronizar comunicação entre serviços"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["success: boolean", "data?: any", "error?: string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/entities/mouse-action.ts": {
    "summary": "Este arquivo define uma abstração para ações de mouse em um ambiente de automação ou interface gráfica, encapsulando operações como movimento, clique, arrasto e rolagem. Ele utiliza interfaces e enums para tipar pontos e botões do mouse, garantindo precisão e flexibilidade na configuração das ações, como movimentos suaves ou cliques duplos. A classe MouseAction centraliza a criação dessas ações, facilitando a composição e execução de comandos de interação com o cursor, sendo ideal para sistemas que necessitam simular ou controlar eventos de mouse programaticamente, como testes automatizados ou ferramentas de automação de UI.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Automation Toolkit",
          "Biblioteca para simulação e controle de eventos de mouse"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Testes automatizados", "Interação com interface gráfica"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão na posição do cursor",
          "Execução correta da sequência de eventos",
          "Respeito aos tipos de botões e opções"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Method", "Domain Model"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/models - definições de tipos e interfaces",
          "src/actions - implementação das ações do mouse"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "Enums em PascalCase",
          "métodos estáticos para criação de instâncias"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos (interfaces/enums) e lógica de ação (classe MouseAction)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários das ações"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para simular eventos de mouse"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações devem ser executadas com latência mínima para simulação realista"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e precisão na execução das ações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte para múltiplas ações sequenciais ou paralelas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Exceções lançadas em caso de parâmetros inválidos"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs para depuração de ações de mouse"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reexecução ou fallback para ações falhas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Uso de 'as any' pode comprometer segurança de tipos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Falta de validação robusta dos parâmetros"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de tipos", "Clareza na definição das ações", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara das interfaces e métodos estáticos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Escolha do padrão Factory Method para criação de ações"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum específico para este módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Execução em ambientes com suporte a Node.js"]
      }
    ]
  },
  "src/domain/entities/screen-region.ts": {
    "summary": "Este arquivo define interfaces e uma classe para manipulação de regiões retangulares na tela, focando em operações geométricas básicas como verificação de contenção e cálculo do centro. A interface Region especifica propriedades essenciais para delimitar uma área retangular, enquanto MatchResult estende Region adicionando um valor de confiança, sugerindo uso em reconhecimento ou detecção de padrões. A classe ScreenRegion implementa Region e oferece métodos para verificar se um ponto está dentro da região, calcular o ponto central e criar instâncias a partir de resultados de detecção, facilitando a integração com sistemas de reconhecimento visual ou automação. O código é estruturado para garantir imutabilidade das propriedades da região e promover reutilização e interoperabilidade em contextos que envolvem análise espacial e processamento de imagens.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "ScreenRegion Management",
          "Manipulação de regiões retangulares para reconhecimento visual"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "Automação", "Image Processing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Regiões devem ser definidas com coordenadas válidas",
          "Confiança deve ser considerada para decisões automatizadas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Method", "DTO", "Encapsulation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/models - definições de interfaces e classes de domínio",
          "src/utils - funções utilitárias relacionadas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para classes e interfaces", "camelCase para métodos e variáveis"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre interfaces e implementações",
          "Uso de métodos estáticos para conversão entre tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários das classes e interfaces"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dados de entrada de regiões e resultados de detecção"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência para operações de contenção e cálculo de centro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [""]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Falta de validação de parâmetros nas classes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [""]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [""]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [""]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de imutabilidade", "Cobertura de testes", "Clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de factory method para criação a partir de MatchResult"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [""]
      }
    ]
  },
  "src/domain/interfaces/automation-service.interface.ts": {
    "summary": "Este arquivo define uma interface base para serviços de automação, estabelecendo um contrato comum para todos os serviços que executam comandos automatizados dentro do sistema. Embora a interface em si não implemente métodos, ela funciona como uma marcação para padronizar e identificar serviços de automação, facilitando a integração e extensão futura. Essa abordagem modular permite que diferentes serviços específicos implementem seus próprios métodos, garantindo flexibilidade e consistência na arquitetura do sistema de automação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Services Framework",
          "Plataforma para execução e gerenciamento de comandos automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de processos", "Command Execution", "Automation Services"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Desenvolvimento inicial", "Definição de contratos e interfaces"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Serviços de automação devem implementar contratos definidos",
          "Execução de comandos deve ser consistente e rastreável"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico definido neste arquivo"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Importação de entidades internas para resultados de comandos"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Interface", "Marker Interface", "Modular Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "entities/: entidades de domínio",
          "services/: serviços de automação",
          "interfaces/: contratos e definições"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I'",
          "CamelCase para classes e interfaces",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre entidades, serviços e interfaces",
          "Dependências unidirecionais para evitar acoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style", "JSDoc para documentação"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços de automação e resultados de comandos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa complexidade, foco em extensibilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Interface permite múltiplas implementações escaláveis"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não definido nesta interface"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não definido nesta interface"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não definido nesta interface"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não definido nesta interface"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["entities/command-result.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["entities", "services", "interfaces"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Interface ainda sem métodos definidos pode levar a inconsistências"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum conhecido neste arquivo"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Em fase inicial, sem migrações"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência na implementação de interfaces", "Clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as interfaces e métodos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Marker Interface para padronizar serviços de automação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhuma variável específica neste arquivo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Nenhuma restrição específica neste arquivo"]
      }
    ]
  },
  "src/index.ts": {
    "summary": "Este arquivo implementa um servidor HTTP utilizando o framework Fastify, configurado para servir uma API RESTful e uma aplicação web SPA (Single Page Application). Ele realiza a injeção de dependências para inicializar serviços essenciais da aplicação, registra rotas específicas para automação, e gerencia o tratamento de erros e rotas não encontradas com lógica diferenciada para APIs e recursos estáticos. O servidor também expõe um endpoint de health check para monitoramento, suporta logs configuráveis conforme o ambiente, e implementa um mecanismo de shutdown gracioso para garantir encerramento seguro. A arquitetura modular e o uso de middlewares facilitam a manutenção e escalabilidade do sistema, integrando componentes de configuração, rotas, serviços e middleware de forma coesa e orientada a boas práticas de desenvolvimento backend moderno.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation API Server", "Backend service para automação e SPA"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Backend API", "SPA hosting"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "API versioning deve ser respeitada",
          "Rotas /api protegidas contra conflito com SPA",
          "Shutdown gracioso para evitar perda de dados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "@fastify/static"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Modular Architecture", "Middleware Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config: configurações e DI",
          "routes: definição de rotas API",
          "interface/middleware: middlewares e handlers",
          "application/services: lógica de negócio",
          "dist/web: frontend SPA estático"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes e serviços",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração, rotas, serviços e middleware",
          "Injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Regras para evitar any e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para código legível"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes públicas"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Uso de tipos explícitos em parâmetros e retornos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Logging configurável para desenvolvimento e produção",
          "Serviço leve e rápido com Fastify"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Modularidade e DI facilitam escalabilidade e manutenção"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success e error para APIs"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de pino com níveis configuráveis e pino-pretty em dev"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Middleware centralizado para tratamento de erros",
          "Shutdown gracioso para evitar falhas abruptas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "@fastify/static", "reflect-metadata", "pino"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./routes/automation.routes.js",
          "./interface/middleware/error-handler.middleware.js",
          "./config/dependency-injection.js",
          "./application/services/application-startup.service.js",
          "./config/environment.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipagem",
          "Tratamento correto de erros",
          "Modularidade e separação de responsabilidades"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar rotas e serviços principais com JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos", "Uso de inglês para termos técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Fastify para performance e simplicidade",
          "Injeção de dependências para desacoplamento",
          "Separação clara entre API e SPA"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Prefixo /api/v1 para versionamento"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para API", "HTML para SPA"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["PORT", "HOST", "NODE_ENV", "LOG_LEVEL"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-keyboard.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador de teclado utilizando a biblioteca NutJS, fornecendo uma interface abstrata para operações de teclado que incluem digitação de texto, pressionamento e liberação de teclas individuais, além de combinações de teclas. O adaptador encapsula a complexidade da biblioteca NutJS, garantindo que as operações sejam realizadas de forma confiável e com tratamento de erros robusto. Ele suporta um conjunto definido de teclas comuns e combinações, possibilitando automação de entrada de teclado em aplicações que requerem controle programático do teclado, mantendo a configuração de digitação instantânea para maior responsividade. A classe é decorada com @injectable para integração via injeção de dependência, facilitando seu uso em arquiteturas modulares e testáveis. Além disso, inclui um método para delay assíncrono, permitindo pausas controladas entre ações de teclado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Keyboard Adapter", "Interface para controle programático de teclado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de testes", "Automação de UI", "Controle de dispositivos"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir digitação instantânea sem delays",
          "Suporte apenas a teclas mapeadas",
          "Tratamento robusto de erros para operações de teclado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js (Keyboard control library)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - Serviços de domínio",
          "infrastructure/adapters - Implementações concretas de interfaces",
          "domain - Entidades e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Classes PascalCase", "Métodos camelCase", "Interfaces prefixadas com I"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre interface (IKeyboardAdapter) e implementação (NutJSKeyboardAdapter)",
          "Dependência invertida via injeção"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit - testes unitários para adaptadores"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de biblioteca NutJS para simular teclado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Digitação instantânea sem delays configurados"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de execução sobre uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados com mensagens detalhadas e contexto"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções para operações de teclado com mensagens claras"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services/keyboard.service.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Cobertura de teclas suportadas",
          "Conformidade com padrões de injeção"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de NutJS para abstração de teclado", "Configuração de autoDelayMs para 0"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-mouse.adapter.ts": {
    "summary": "O arquivo implementa um adaptador de mouse utilizando a biblioteca Nut.js para abstrair operações de controle do mouse em um ambiente TypeScript. Ele oferece funcionalidades para movimentação do cursor com suporte a movimentos instantâneos e suaves via interpolação linear, cliques simples e duplos, arrasto de elementos, rolagem vertical e obtenção da posição atual do mouse. O adaptador integra-se a um sistema maior por meio da interface IMouseAdapter, garantindo desacoplamento e injeção de dependências, além de configurar parâmetros como velocidade do mouse conforme variáveis de ambiente. Seu comportamento central foca em traduzir comandos de alto nível em ações físicas precisas e controladas do mouse, habilitando automação e controle programático de interfaces gráficas com alta fidelidade e flexibilidade.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Control Automation", "Nut.js Mouse Adapter"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de Interface", "Controle de dispositivos de entrada", "Mouse Actions"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Movimentação precisa do cursor",
          "Execução correta de cliques e arrastos",
          "Configuração dinâmica da velocidade do mouse"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Nut.js (mouse control library)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - Serviços de aplicação",
          "domain/entities - Entidades de domínio",
          "config - Configurações do sistema",
          "adapters - Implementações concretas de interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase",
          "Interfaces prefixadas com I",
          "Constantes em camelCase ou PascalCase",
          "Métodos em camelCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências unidirecionais do domínio para aplicação e infraestrutura"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e privados"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de dependências externas como Nut.js"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Movimentação instantânea deve ser imediata",
          "Movimentação suave respeita duração configurada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Precisão e suavidade do movimento priorizadas sobre uso mínimo de CPU"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Nut.js", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "domain/entities", "config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Uso de delays pode impactar performance em movimentos longos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de injeção de dependências",
          "Precisão dos movimentos",
          "Tratamento assíncrono correto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do Nut.js para controle de mouse",
          "Uso de DI para facilitar testes e manutenção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipelines"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["environment.mouseSpeed"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-screen.adapter.ts": {
    "summary": "O arquivo implementa um adaptador de captura de tela utilizando a biblioteca NutJS, focado em fornecer uma interface para capturar imagens da tela inteira ou de regiões específicas, convertendo os dados brutos em imagens PNG otimizadas. Ele integra funcionalidades básicas de captura com logging detalhado para monitoramento e diagnóstico, embora funcionalidades de busca e espera por templates ainda estejam pendentes de implementação. O componente é projetado para ser injetável e configurável, facilitando sua integração em sistemas maiores que demandam manipulação e análise de imagens de tela para automação ou monitoramento visual.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "NutJS Screen Capture Adapter",
          "Serviço de captura e processamento de tela para automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Screen Capture", "Image Processing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Desenvolvimento inicial", "Implementação parcial com funcionalidades pendentes"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Captura precisa e confiável da tela",
          "Conversão correta e eficiente para PNG",
          "Logging detalhado para auditoria"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS Screen API", "Sharp image processing library"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - serviços de aplicação",
          "domain/entities - entidades de domínio",
          "config - configurações do ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "Prefixo 'I' para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências unidirecionais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint-config-standard-with-typescript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para tipos e métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Eficiência na conversão de imagens", "Minimização do uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erro lançado com objeto Error padrão"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging estruturado com pino", "Níveis debug, info, error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "sharp", "pino", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../../application/services/screen.service.js",
          "../../../domain/entities/screen-region.js",
          "../../../config/environment.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Implementação incompleta dos métodos find e waitFor"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de logging", "Tratamento de erros", "Clareza e modularidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para métodos públicos e interfaces"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de emojis para facilitar leitura"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de NutJS para captura de tela",
          "Sharp para processamento de imagens",
          "Injeção de dependência com tsyringe"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Buffer PNG para captura de tela"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["environment.screenConfidence"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/controllers/automation.controller.ts": {
    "summary": "O arquivo define a classe AutomationController, responsável por expor uma API RESTful para automação de interações com mouse e captura de tela, utilizando o framework Fastify. Ele oferece endpoints para movimentação, clique, arrasto e scroll do mouse, além de captura e busca de imagens na tela, incluindo streaming em tempo real da posição do mouse via Server-Sent Events. A classe integra serviços especializados (MouseService e ScreenService) para executar as operações, aplicando validação de dados via JSON Schema e autenticação em rotas sensíveis. O controlador também implementa tratamento de erros robusto e logging detalhado para monitoramento e diagnóstico, garantindo respostas padronizadas e controle de acesso, habilitando automação remota e monitoramento visual em aplicações que demandam controle programático da interface gráfica.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation API", "Controle remoto de mouse e captura de tela"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de interface gráfica",
          "Automação de testes",
          "RPA (Robotic Process Automation)"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação obrigatória para streaming e captura sensível",
          "Limite de tamanho para imagens capturadas",
          "Respostas padronizadas para sucesso e erro"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Nenhum serviço externo explícito, integração interna com serviços de automação"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Controller Pattern", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio",
          "application/dto - objetos de transferência de dados",
          "config - configurações globais",
          "controllers - definição de rotas e controle de fluxo",
          "middleware - autenticação e validações",
          "schemas - validação de payloads"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase",
          "Funções e variáveis em camelCase",
          "Arquivos com extensão .js ou .ts seguindo o nome da classe ou funcionalidade"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre serviços de domínio e controladores",
          "Dependência unidirecional via injeção de dependência",
          "Middleware isolado para autenticação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo checagem de tipos e estilo"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ paralela aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços externos e injeção de dependência"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e checks de CI"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key' para rotas sensíveis"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Acesso restrito a streaming e captura de tela via middleware de autenticação"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagens capturadas tratadas como base64, limitadas a 1MB"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Security-Policy, X-Content-type-Options, Cache-Control para SSE"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não explícito no código, presumido uso de HTTPS para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações síncronas rápidas, streaming com intervalo configurável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência para comandos de mouse, controle de tamanho de imagens para memória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável explicitamente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Streaming SSE pode impactar escalabilidade, uso de autenticação para limitar acesso"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Resposta JSON com campo success boolean e mensagem de erro em caso de falha"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de pino para logs estruturados com níveis info, warn, error e debug"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não explícito, presumido integração com sistemas externos via logs"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de exceções com respostas HTTP 500 e encerramento controlado de streams"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["MouseService", "ScreenService", "authenticationMiddleware"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "tsyringe 4.x", "pino 7.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "application/dto", "middleware", "schemas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Limitação de tamanho de imagem pode impactar casos de uso com imagens maiores"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Streaming SSE pode gerar overhead em conexões simultâneas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de schemas, tratamento de erros, segurança em endpoints sensíveis"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para métodos públicos e endpoints"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos, uso de logs para rastreamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de injeção de dependência para desacoplamento",
          "Streaming SSE para dados em tempo real"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não explícito no código"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos success e data"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado explicitamente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker (presumido)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY para autenticação", "Configurações de mouse e streaming"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação de memória para imagens capturadas",
          "Necessidade de conexões persistentes para SSE"
        ]
      }
    ]
  },
  "src/interface/controllers/input-events.controller.ts": {
    "summary": "Este arquivo implementa um controller para streaming de eventos de input via Server-Sent Events (SSE), permitindo a transmissão em tempo real de cliques do mouse e teclas digitadas para clientes conectados. Ele gerencia conexões persistentes, reenvio de eventos perdidos com base no Last-Event-ID, manutenção de um buffer de eventos para replay e limpeza do buffer via endpoints dedicados. Além disso, oferece endpoints para obtenção de estatísticas do sistema de eventos e controle do buffer, garantindo alta disponibilidade e integridade dos dados transmitidos, com mecanismos de heartbeat para manter conexões ativas e logging detalhado para monitoramento e depuração. A arquitetura modular e injeção de dependências facilitam a integração com serviços de dispatcher e buffer, promovendo escalabilidade e manutenção eficiente do sistema de streaming de eventos de input.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Input Events Streaming Service",
          "Streaming de eventos de input em tempo real via SSE"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Real-time event streaming", "User input tracking", "SSE (Server-Sent Events)"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir entrega ordenada e completa dos eventos",
          "Manter conexões SSE ativas com heartbeat",
          "Preservar integridade do buffer de eventos para replay"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Logger service (custom)", "Config service (inputEventsConfig)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Observer Pattern", "MVC (Controller layer)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - serviços de negócio",
          "config - configurações e logger",
          "types - definições de tipos",
          "controllers - camada de controle HTTP"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "kebab-case para endpoints"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers dependem de serviços via injeção",
          "Serviços isolados para lógica de buffer e dispatcher",
          "Tipos compartilhados via pasta types"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any explícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão", "Quebra de linha em 80-100 caracteres"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos", "Comentários em português para contexto"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Tipos explícitos para parâmetros e retornos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ ao lado dos controllers e serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "Mocking de dependências via ts-mockito ou jest.mock"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de EventDispatcher e EventBuffer para testes unitários"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código (possível autenticação externa)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não implementado explicitamente no controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Cache-Control: no-cache", "Connection: keep-alive", "X-Accel-Buffering: no"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não tratado no código (depende do transporte HTTPS externo)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para streaming SSE"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e alta disponibilidade", "Minimizar overhead de buffering"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer local de eventos para replay"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplos clientes SSE simultâneos",
          "Heartbeat para manter conexões vivas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs detalhados via logger", "Resposta padrão JSON para endpoints REST"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logger customizado com níveis info, debug e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado, mas logger sugere integração externa possível"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros no envio SSE com limpeza de heartbeat"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Fastify",
          "tsyringe",
          "EventDispatcher",
          "EventBuffer",
          "inputEventsConfig",
          "logger"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "TypeScript 5.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../application/services/event-dispatcher.service.js",
          "../../application/services/event-buffer.service.js",
          "../../config/input-events.config.js",
          "../../config/logger.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Autenticação e autorização não implementadas",
          "Monitoramento e alertas não integrados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível desconexão silenciosa se heartbeat falhar"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Buffer pode crescer indefinidamente sem pruning"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Clareza e documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para métodos públicos", "Comentários em português para contexto"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e claros", "Uso de português para contexto"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de SSE para streaming em tempo real",
          "Injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com endpoints SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Prefixo /api/v1 para versionamento"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para endpoints REST", "text/event-stream para SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Configuração maxRate no inputEventsConfig (não implementado explicitamente)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes (provável)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configurações via inputEventsConfig (heartbeatMs, bufferSize, etc.)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de manter conexões SSE abertas",
          "Suporte a proxy sem buffering (X-Accel-Buffering: no)"
        ]
      }
    ]
  },
  "src/interface/controllers/keyboard.controller.ts": {
    "summary": "Este arquivo implementa um controller REST para operações de automação relacionadas a teclado e clipboard, permitindo a interação programática com entrada de texto e gerenciamento da área de transferência. Ele expõe endpoints para digitar texto com controle de timing, pressionar teclas individuais, executar combinações de teclas, além de copiar, colar e limpar o conteúdo do clipboard. O controller utiliza injeção de dependências para integrar serviços especializados, valida as requisições via schemas JSON e gerencia respostas padronizadas, incluindo tratamento robusto de erros e logging detalhado. Essa funcionalidade habilita automações de input e manipulação de clipboard em aplicações que demandam controle remoto ou testes automatizados, garantindo consistência e segurança nas operações de entrada e saída de dados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard and Clipboard Automation Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automation", "Input Control", "Clipboard Management", "Software Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que operações de teclado e clipboard sejam executadas com sucesso ou retornem erros claros",
          "Validar rigorosamente os dados de entrada para evitar comandos inválidos",
          "Manter integridade e segurança dos dados manipulados no clipboard"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Controller-Service Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio e serviços",
          "application/dto - objetos de transferência de dados e validações",
          "controllers - definição de endpoints REST",
          "schemas - definições JSON Schema para validação",
          "middleware - middlewares para validação e tratamento"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase (KeyboardController, KeyboardService)",
          "Métodos em camelCase (registerRoutes, clipboardCopy)",
          "Schemas com sufixo JsonSchema",
          "DTOs com sufixo Request"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers expõem rotas e delegam lógica para services",
          "Services encapsulam regras de negócio e interações com hardware ou sistema",
          "DTOs e schemas isolam validação e tipagem"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint-config-standard", "no-explicit-any restrito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode enabled)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos controllers e services"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços externos e injeção de dependências"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não implementado neste controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente, deve ser tratado em middleware externo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard tratado com cuidado para evitar vazamento"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Configuração externa ao controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações devem responder em milissegundos, exceto typing com timing configurável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e confiabilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via instâncias Fastify"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success:boolean, data:object, error:string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis info e error via Fastify logger"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retorno de erro padronizado e captura de exceções para evitar crashes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "tsyringe", "keyboardService", "clipboardService"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "application/dto", "controllers", "schemas", "middleware"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Uso de any para logger pode ser melhorado para tipagem forte"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum problema funcional aparente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Operação type pode ser lenta dependendo do timing configurado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Projeto em produção, sem migrações ativas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de schemas, tratamento de erros, logging e injeção de dependências"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para novos endpoints e serviços"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e informativos, sem excesso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Fastify para alta performance e tsyringe para DI"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não implementado explicitamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padronizado com success, data e error"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado neste controller"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containerizado com orquestração externa"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configuração externa via environment.ts, sem valores sensíveis no código"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de acesso a APIs de sistema para manipulação de teclado e clipboard"]
      }
    ]
  },
  "src/interface/middleware/auth.middleware.ts": {
    "summary": "Este arquivo implementa um middleware de autenticação para uma aplicação backend utilizando Fastify, cuja função principal é validar a presença e a validade de uma API key enviada via header HTTP 'x-api-key'. O middleware intercepta requisições, compara a chave recebida com a chave configurada no ambiente e, caso a validação falhe, responde com status 401 Unauthorized, bloqueando o acesso. Essa abordagem garante controle de acesso simples e eficaz para proteger endpoints sensíveis, integrando-se ao fluxo de requisições do servidor e habilitando uma camada básica de segurança para a API. O código é conciso, focado em autenticação baseada em chave estática, sem manipulação de estado além da resposta HTTP, e depende da configuração externa para a chave de autenticação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["API Authentication Middleware", "Controle de acesso via API key"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Segurança", "Autenticação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Requisições devem conter API key válida",
          "Falha na autenticação bloqueia acesso"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Middleware Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["config/ - configurações de ambiente", "middlewares/ - middlewares da aplicação"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para funções e variáveis", "PascalCase para tipos e classes"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre configuração e lógica de middleware"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/middlewares/"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de requisição e resposta Fastify"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes automatizados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via HTTP Header"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Requisição deve conter API key válida para acesso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API key armazenada em variáveis de ambiente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Transporte via HTTPS obrigatório"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta imediata para autenticação, < 100ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Middleware leve para alta escalabilidade"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success: false e error: string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Bloqueio imediato sem retry"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "environment configuration"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.0.0", "TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../config/environment.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Autenticação baseada em chave estática pode ser melhorada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Ausência de logs para tentativas falhas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Segurança da autenticação", "Clareza e simplicidade do middleware"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para middlewares"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de API key estática para autenticação simples"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/middleware/error-handler.middleware.ts": {
    "summary": "Este arquivo implementa um mecanismo robusto e centralizado de tratamento de erros para aplicações construídas com Fastify, focando em capturar, categorizar e responder adequadamente a diferentes tipos de exceções que podem ocorrer durante a execução. Ele define classes customizadas para erros de domínio, como NotFoundError, UnauthorizedError e LimitExceededError, facilitando a padronização das respostas HTTP e códigos de erro associados. O handler de erros processa erros de validação do Zod, erros específicos do Fastify, erros de domínio e erros genéricos, garantindo respostas estruturadas e logs detalhados para facilitar o monitoramento e a depuração, além de adaptar o nível de detalhe das mensagens conforme o ambiente (desenvolvimento ou produção).",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "API Error Handling Module",
          "Centralized error management for Fastify-based APIs"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Error handling", "HTTP status management", "Domain-driven design"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Stable error handling implementation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistent error response format",
          "Proper HTTP status codes",
          "No leakage of sensitive error details in production"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Domain Error Pattern", "Middleware Pattern", "Centralized Error Handling"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/errors - classes de erro customizadas",
          "/handlers - middlewares e handlers globais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Classes PascalCase", "Funções camelCase", "Constantes UPPER_SNAKE_CASE"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Errores de domínio isolados em módulo próprio",
          "Handler de erro centralizado importado no core do servidor"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo regras para erros e imports"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para classes e funções"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript settings (strictNullChecks, noImplicitAny)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["/tests/unit/errors", "/tests/integration/errorHandler"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90% coverage on error handling modules"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "Mocking Fastify request and reply"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para FastifyRequest e FastifyReply", "Fixtures para erros customizados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test", "Deploy automático para staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install && npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT (externamente gerenciado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Erros 401 e 403 para controle de acesso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Não expor stack trace em produção",
          "Mensagens de erro genéricas para usuários finais"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Respostas de erro rápidas para não impactar UX"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência", "Logging eficiente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Handler deve ser stateless e escalável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error, code e detalhes opcionais"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logging estruturado com contexto da requisição",
          "Níveis de log ajustados por ambiente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Respostas padronizadas para facilitar retry e tratamento no cliente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.x", "Zod >=3.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de padronizar novos erros customizados"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível excesso de logs em ambiente de desenvolvimento"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência no tratamento de erros", "Cobertura de testes para casos de erro"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar novas classes de erro e formatos de resposta"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do DomainError para padronizar erros de negócio"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padronizado com success, error, code e detalhes"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/middleware/validation.middleware.ts": {
    "summary": "Este arquivo implementa uma função middleware para validação de requisições HTTP em um servidor Fastify utilizando schemas do Zod. Seu propósito principal é garantir que o corpo da requisição esteja conforme o schema definido, promovendo a integridade dos dados recebidos antes do processamento posterior. Em caso de falha na validação, a função responde com um erro 400 detalhado, evitando que dados inválidos avancem na pipeline, o que contribui para a robustez e segurança da aplicação. A abordagem assíncrona e o uso de tipagem forte com Fastify e Zod facilitam a integração e manutenção em sistemas modernos baseados em TypeScript.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Fastify API Validation Middleware"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Validation", "TypeScript", "Fastify"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Request body must strictly conform to defined Zod schemas",
          "Invalid requests must be rejected with HTTP 400"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Middleware Pattern", "Schema Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/middleware - middlewares para validação e autenticação",
          "src/schemas - definições de schemas Zod",
          "src/routes - definição das rotas Fastify"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e classes",
          "validateRequest para middleware de validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Middleware isolado para validação, desacoplado da lógica de negócio",
          "Schemas importados e reutilizados nas rotas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para TypeScript e Fastify"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript settings (strictNullChecks, noImplicitAny)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/middleware - testes unitários para middlewares"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% coverage"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock FastifyRequest and FastifyReply objects"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "Passing CI checks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["{ success: false, error: string, message: string }"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reject invalid requests with HTTP 400 and descriptive message"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["fastify >=4.x", "zod >=3.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta de schemas", "Tratamento adequado de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar middleware e schemas com JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação por ser declarativo e integrado com TypeScript"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/schemas/automation.schemas.ts": {
    "summary": "Este arquivo define múltiplos JSON Schemas para validação de objetos relacionados a interações de mouse e operações de captura e busca na tela, focando em ações como movimento, clique, arrasto e scroll do mouse, além de funcionalidades de reconhecimento e captura de regiões específicas da tela. Cada schema especifica propriedades detalhadas, tipos e restrições para garantir a integridade dos dados de entrada, como coordenadas, duração, suavidade e botões do mouse, além de parâmetros para reconhecimento visual com níveis de confiança e regiões delimitadas. O comportamento central do código é fornecer uma estrutura rigorosa para validar comandos de automação de interface gráfica, assegurando que as ações sejam executadas com parâmetros corretos e consistentes, facilitando a integração com sistemas de automação e testes visuais. A ausência de propriedades adicionais e a definição de valores padrão indicam um controle estrito sobre os dados, promovendo segurança e previsibilidade no uso das ações definidas. Este conjunto de schemas é essencial para garantir que as interações com a interface sejam precisas, configuráveis e validadas antes da execução, suportando fluxos automatizados robustos e confiáveis.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse and Screen Interaction Automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de Interface Gráfica", "UI Automation", "Testes Automatizados"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos parâmetros de entrada",
          "Proibição de propriedades adicionais não definidas",
          "Garantia de valores dentro dos limites especificados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Data Contract"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Schemas definidos em módulo separado para validação e reutilização"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para propriedades", "PascalCase para constantes exportadas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre schemas de diferentes ações (mouseMove, mouseClick, etc.)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript typings via JSON Schema"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/schemas/clipboard.schemas.ts": {
    "summary": "Este arquivo define JSON Schemas compatíveis com JSON Schema Draft 7 para validação de requisições relacionadas ao gerenciamento de clipboard em uma aplicação Fastify. Ele especifica um schema para o endpoint de copiar conteúdo para o clipboard, exigindo uma string não vazia com limite implícito de tamanho, e schemas vazios para os endpoints de colar e limpar o clipboard, garantindo que não sejam aceitas propriedades adicionais. O foco principal é garantir a integridade e conformidade dos dados recebidos para operações de clipboard, facilitando a validação automática e segura das requisições HTTP, sem alterar estado diretamente, mas definindo contratos claros para integração com a lógica de negócio do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Clipboard API Validation Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["API Development", "Clipboard Management", "Fastify Framework"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Content must be a non-empty string",
          "No additional properties allowed in requests"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Declarative Validation", "Modular Schema Design"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["schemas/ - Contém definições de JSON Schema para validação de endpoints"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e propriedades", "PascalCase para tipos e interfaces"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Schemas isolados para cada endpoint, importados conforme necessidade"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/schemas/ - testes unitários para validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock JSON payloads para validação"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não definido no schema"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não definido no schema"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard tratado como string simples"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Gerenciados externamente ao schema"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável no schema"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não definido no schema"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação leve e rápida"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Schemas reutilizáveis para múltiplos endpoints"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Padronizado pelo Fastify via JSON Schema validation errors"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Gerenciado externamente"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não definido no schema"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Rejeição de requisições inválidas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["json-schema", "fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatível com JSON Schema Draft 7"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação de tamanho máximo do conteúdo não implementada no schema"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível aceitação de payloads maiores que 1MB sem validação extra"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Conformidade com JSON Schema", "Clareza e simplicidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para schemas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários técnicos objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de JSON Schema Draft 7 para validação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não definido no schema"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não definido no schema"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/schemas/keyboard.schemas.ts": {
    "summary": "Este arquivo define JSON Schemas compatíveis com Draft 7 para validação de requisições relacionadas a operações de teclado em um servidor Fastify. Ele especifica três schemas distintos para endpoints que permitem digitar texto, pressionar uma tecla individual e enviar combinações de teclas, garantindo que os dados recebidos estejam estruturados e validados conforme regras claras, como tipos, tamanhos e valores permitidos. A funcionalidade habilita controle programático e seguro de interações de teclado, suportando modos de digitação variados e combinações complexas, facilitando a integração com sistemas que necessitam simular ou processar eventos de teclado de forma robusta e padronizada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard Input Validation Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automation", "Input Simulation", "Keyboard Events"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Input data must conform to JSON Schema Draft 7",
          "No additional properties allowed in requests",
          "Text input length between 1 and 10000 characters"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Declarative Validation", "Schema-based Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["schemas/ - Contém definições JSON Schema para validação de dados de entrada"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para propriedades JSON", "PascalCase para constantes exportadas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Schemas isolados para cada tipo de operação de teclado, importados conforme necessidade"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para comentários de tipos e propriedades"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/schemas/ - testes unitários para validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90% cobertura para schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de requisições HTTP para validação de schemas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação rápida e eficiente para alta performance"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Padrão JSON Schema Validation Error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["json-schema", "fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["json-schema compatible with Draft 7"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta dos schemas", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de JSON Schema Draft 7 para validação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/routes/automation.routes.ts": {
    "summary": "Este arquivo define um conjunto de rotas para um servidor Fastify, centralizando a orquestração de múltiplos controladores responsáveis por funcionalidades distintas como automação, manipulação de teclado, integração com Large Language Models (LLM), reconhecimento óptico de caracteres (OCR), além de rotas para status e streaming de eventos de input. O comportamento principal consiste em registrar e expor endpoints HTTP que permitem a interação com esses subsistemas, facilitando a modularização e escalabilidade da aplicação. Através da injeção de dependências e registro assíncrono de rotas, o código promove uma arquitetura extensível e desacoplada, habilitando capacidades avançadas de automação e processamento de dados para usuários finais e sistemas integrados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation Backend", "Servidor de automação e integração de serviços"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Backend", "Integração de APIs", "OCR", "LLM"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Registro correto e seguro das rotas",
          "Isolamento entre módulos",
          "Disponibilidade das APIs"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LLM APIs", "OCR Services"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Modular Plugin Architecture", "Controller Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "interface/controllers - Controllers responsáveis por lógica de rotas",
          "routes - Definição de rotas agrupadas",
          "config - Configurações e injeção de dependência"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Controllers com sufixo Controller",
          "Rotas com sufixo .routes.js",
          "Variáveis camelCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers isolam lógica de negócio",
          "Rotas apenas expõem endpoints",
          "Configuração centralizada no container"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any implícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes públicas"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dependências externas e controllers"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso baseado em roles"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Tokens JWT, dados pessoais"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["CORS, CSP, HSTS"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["TLS para transporte, criptografia de tokens"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["< 200ms para endpoints críticos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de resposta"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache em memória para status e dados estáticos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via múltiplas instâncias"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com código, mensagem e detalhes opcionais"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis (info, warn, error)"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Prometheus, Grafana"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retries automáticos em falhas transitórias"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "Dependency Injection Container", "LLMController"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.0.0 <5.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["interface/controllers", "config/dependency-injection"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Documentação incompleta das rotas", "Testes unitários parciais"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Latência em rotas OCR sob alta carga"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Registro assíncrono sequencial pode impactar startup"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração para Fastify 4 concluída"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Segurança das rotas", "Clareza e modularidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar todos os endpoints e contratos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de DI para facilitar testes e modularidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via prefixos de rota (não visível neste arquivo)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Implementação externa, não visível no código"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["PORT", "NODE_ENV", "JWT_SECRET"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória para OCR", "Escalabilidade horizontal necessária"]
      }
    ]
  },
  "src/routes/input-events.routes.ts": {
    "summary": "Este arquivo implementa rotas RESTful para streaming e gerenciamento de eventos de input em tempo real via Server-Sent Events (SSE) usando Fastify. Ele oferece endpoints para streaming contínuo, estatísticas do sistema, limpeza e poda do buffer de eventos, integrando um controlador especializado e validando rigorosamente os dados, habilitando sistemas que dependem de eventos em tempo real com alta escalabilidade e manutenção facilitada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Events Streaming Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Real-time event streaming", "User input monitoring", "SSE"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir entrega em tempo real dos eventos via SSE",
          "Manter integridade e consistência do buffer de eventos",
          "Respeitar limites de idade máxima para eventos armazenados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Dependency Injection container (custom or third-party)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "MVC (Controller)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config (configurações e DI)",
          "interface/controllers (lógica de controle)",
          "routes (definição de rotas)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para rotas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controllers e rotas",
          "Uso de container para resolver dependências"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["@typescript-eslint rules", "no-explicit-any", "strict typing"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos controllers e rotas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de dependências via container DI"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código (possível autenticação externa)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não implementado explicitamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não especificado, recomendação para SSE"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para streaming SSE"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e escalabilidade do streaming"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer interno para eventos com limite de tamanho e idade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplos listeners simultâneos via SSE"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Formato padrão com success, message, data e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não detalhado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Recuperação de eventos perdidos via last-event-id"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "Dependency Injection container", "InputEventsController"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../config/dependency-injection.js",
          "../interface/controllers/input-events.controller.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Autenticação e autorização não implementadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falta de controle de rate limiting"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Gerenciamento do buffer e listeners em alta escala"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de schemas", "Tratamento de erros", "Performance do streaming"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para funções públicas e rotas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de SSE para streaming em tempo real",
          "Separação clara entre controller e rotas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com SSE para streaming"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para respostas padrão, text/event-stream para SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado explicitamente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker (provável)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificado no código"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Suporte a conexões SSE persistentes"]
      }
    ]
  },
  "src/test-endpoint.ts": {
    "summary": "Este arquivo de código implementa uma suíte simples de testes automatizados para endpoints de uma API RESTful que controla ações do mouse, como movimentação, clique e consulta de posição. O comportamento central consiste em enviar requisições HTTP POST e GET para endpoints locais, manipulando dados JSON para simular interações de mouse com parâmetros configuráveis, como coordenadas, suavização e duração. O código demonstra um padrão assíncrono com tratamento básico de erros, visando validar a funcionalidade da API NutJS para controle remoto do mouse, facilitando a integração e testes automatizados em ambientes de desenvolvimento local.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Mouse Control API Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de testes", "Controle remoto de dispositivos", "APIs REST"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento local"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que comandos de mouse sejam enviados e recebidos corretamente",
          "Não causar efeitos colaterais inesperados no sistema alvo"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript ES2020+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework explícito"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Nenhum banco de dados utilizado"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS API local (http://localhost:3000)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modularização funcional", "Padrão async/await"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para funções", "snake_case ausente", "const para funções assíncronas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Funções isoladas para cada endpoint",
          "Execução sequencial controlada em função principal"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Padrão JavaScript moderno, sem guia explícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Indentação padrão de 2 espaços"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários mínimos, sem documentação formal"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["JavaScript sem tipagem estática"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Nenhum framework de teste formal, testes manuais via script"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Funções de teste isoladas para cada endpoint"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Execução sequencial com delays para simular uso real"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não utilizado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node nome_do_arquivo.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["node nome_do_arquivo.js"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Não especificado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Nenhum método de autenticação implementado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Nenhuma regra de autorização aplicada"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Headers padrão Content-type: application/json"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável para comunicação local HTTP"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não especificado, mas delays indicam tolerância a latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Simplicidade e confiabilidade sobre otimização"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhuma estratégia de cache implementada"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Projeto focado em ambiente local, sem escalabilidade"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Tratamento básico via try/catch com console.error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs no console para resultados e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não implementado, falhas interrompem execução"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["NutJS API local", "fetch API"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Não especificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de testes automatizados formais e validação de respostas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência da disponibilidade da API local"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Delays fixos podem impactar tempo total de execução"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza no fluxo assíncrono", "Tratamento de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários explicativos mínimos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários em português explicando propósito"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de async/await para simplicidade e legibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL (/api/v1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Localhost (http://localhost:3000)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Dependência de ambiente local com API NutJS rodando"]
      }
    ]
  },
  "src/types/extended-input-event.types.ts": {
    "summary": "Este arquivo define tipos TypeScript para eventos de input estendidos, focando em capturar dados detalhados de interações do usuário via mouse e teclado. Ele estrutura eventos genéricos com propriedades comuns como id, tipo, timestamp e posição do cursor, além de dados específicos para mouse (ações como click, release e move) e teclado (ações down e up). O código habilita um sistema de gravação ou monitoramento de inputs com precisão, facilitando a distinção clara entre eventos de mouse e teclado, e garantindo tipagem rigorosa para manipulação segura e consistente desses eventos em sistemas que dependem de input detalhado do usuário. A abordagem modular e tipada promove integração eficiente com outros módulos que processam ou armazenam eventos de input, suportando funcionalidades como replay, análise ou automação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Event Extended Types", "Sistema de captura e gravação de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "User Interaction Monitoring",
          "Input Event Processing",
          "Terminologia: mouse events, keyboard events, input recording"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade e precisão dos dados de input",
          "Diferenciar corretamente eventos de mouse e teclado",
          "Manter sincronização temporal dos eventos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico declarado"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Não aplicável"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Nenhum serviço externo declarado"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Discriminated Union Types", "Modularização por interfaces"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definição de tipos e interfaces",
          "src/input - lógica relacionada a eventos de input"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I' ou nome descritivo (ex: ExtendedMouseEvent)",
          "CamelCase para tipos e propriedades"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos genéricos e específicos",
          "Dependência unidirecional para tipos externos (MouseButton)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style", "JSDoc para documentação"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Dados de input do usuário (teclas, posição do cursor)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para captura de eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de processamento e baixa latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a alto volume de eventos simultâneos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não especificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Tipo MouseButton do módulo './input-event.types.js'"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./input-event.types.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de validação runtime dos eventos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência externa pode causar inconsistências se alterada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado no código de tipagem"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Estável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Clareza na separação de eventos",
          "Documentação adequada"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as interfaces"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de discriminated unions para eventos",
          "Separação clara entre mouse e keyboard"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Dev, Staging, Prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Não aplicável"]
      }
    ]
  },
  "src/types/input-event.types.ts": {
    "summary": "Este arquivo define tipos TypeScript e interfaces para modelar eventos de input do usuário, especificamente eventos de mouse e teclado, transmitidos via Server-Sent Events (SSE). Ele estrutura eventos com propriedades detalhadas como identificador único, timestamp, origem do evento, e coordenadas do cursor, permitindo a captura precisa de interações do usuário. Além disso, especifica contratos para publicadores e ouvintes de eventos, facilitando a emissão e o recebimento desses eventos em sistemas reativos. O código promove uma arquitetura clara para integração de eventos de input em aplicações web, garantindo interoperabilidade e rastreabilidade dos eventos em tempo real, com foco em precisão e extensibilidade para múltiplas fontes de input.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Event Tracking System"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Interaction Analytics", "Real-time User Input Capture", "SSE"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir unicidade do id do evento",
          "Manter ordem temporal dos eventos",
          "Precisão na captura das coordenadas do cursor"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Server-Sent Events (SSE)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Observer Pattern", "Discriminated Union"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/events - definição de tipos e interfaces de eventos",
          "src/publishers - implementações de IEventPublisher",
          "src/listeners - implementações de IEventListener"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para tipos e interfaces",
          "camelCase para funções e variáveis",
          "constantes em UPPER_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre definição de tipos, publicação e escuta de eventos",
          "Interfaces para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "@typescript-eslint/no-explicit-any",
          "@typescript-eslint/strict-boolean-expressions"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes de tipos e interfaces",
          "tests/integration para fluxos de eventos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para IEventPublisher e IEventListener"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes unitários", "Build", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["SSE API", "TypeScript typings"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de tipos", "Cobertura de testes", "Clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as interfaces e funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de union types para eventos", "Separação clara entre publisher e listener"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Server-Sent Events (SSE)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com payload InputEvent"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "test-prompts.json": {
    "summary": "Este conjunto de instruções detalha uma abordagem sistemática para a criação rápida e eficiente de testes automatizados utilizando Jest em arquivos TypeScript de um projeto web focado em agendamento digital. O objetivo principal é maximizar a cobertura de código (mínimo de 80%) priorizando a velocidade de execução dos testes, com ênfase em testes minimalistas que garantam a execução de todas as funções, classes e componentes exportados. O processo inclui a leitura prévia de um arquivo know-how.txt para aproveitar padrões e soluções já validadas, a aplicação de estratégias específicas para diferentes tipos de módulos (componentes React, funções utilitárias, classes), e a documentação contínua de aprendizados para evolução da base de conhecimento. Além disso, são destacados padrões de nomenclatura, estrutura de testes, mocks comuns e práticas para lidar com dependências externas, hooks, roteamento e contextos, assegurando qualidade, manutenibilidade e integração harmoniosa com o restante do sistema. A metodologia contempla também a verificação iterativa de falhas, aplicação de mocks mínimos e a garantia de que todos os testes passem sem warnings, promovendo um ciclo de desenvolvimento ágil e confiável.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "web-agendamento-digital",
          "Sistema de agendamento digital para gestão automatizada"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Agendamento digital", "Automação", "Testes automatizados", "TypeScript", "Jest"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção com foco em qualidade e cobertura"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Cobertura mínima de testes 80%",
          "Padrões de nomenclatura *.test.tsx",
          "Documentação contínua no know-how.txt"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "ts-jest", "React 18.2", "Testing Library"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "next/router (mocked)",
          "contexts (mocked via jest.spyOn)",
          "localStorage (mock global)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Modularização por domínio e serviços"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/dto - Data Transfer Objects",
          "src/application/services - Serviços de negócio",
          "src/config - Configurações e injeção de dependências",
          "src/domain/entities - Entidades do domínio"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos de teste com sufixo .test.tsx",
          "Classes e funções em PascalCase e camelCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre DTOs, serviços e entidades", "Dependências unidirecionais"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras específicas para TypeScript e React"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão do projeto"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "tsconfig com strict enabled"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "ts-jest"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "describe() envolvendo todos os testes",
          "Arquivos de teste localizados no mesmo diretório do código alvo"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Mínimo 80% de coverage em statements, branches, functions e lines"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Testes minimalistas focados em execução de código",
          "Uso de try/catch para múltiplos parâmetros",
          "Testes de unmount para componentes React"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks mínimos necessários",
          "jest.mock para dependências externas",
          "jest.spyOn para contextos",
          "Mock global para localStorage"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisões obrigatórias", "Checks de testes e lint"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Execução de testes com coverage", "Linting", "Build e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test -- --coverage"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso baseado em roles", "Validação em backend e frontend"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Tokens JWT",
          "Dados pessoais de usuários",
          "Tratamento via criptografia e mascaramento"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["CSP", "X-Frame-Options", "Strict-Transport-Security"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["TLS para comunicação", "Criptografia AES para dados sensíveis"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["< 200ms para operações críticas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de execução dos testes", "Baixa latência em serviços"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache local para dados estáticos", "TTL configurável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Arquitetura modular para escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Formato padronizado JSON com código, mensagem e detalhes"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis (info, warn, error)"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Sentry", "Prometheus"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retry automático em falhas transitórias", "Fallbacks simples"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Jest", "ts-jest", "React", "next/router"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "Jest >=29"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/application", "src/config", "src/domain"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Necessidade de maior detalhamento em testes unitários",
          "Documentação parcial em know-how.txt"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Cobertura inicial baixa em alguns módulos",
          "Mocks insuficientes causam falhas intermitentes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Testes lentos em módulos com dependências externas não mockadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração para TypeScript 5.0 concluída", "Atualização do Jest em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Conformidade com padrões de nomenclatura",
          "Uso correto de mocks"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Atualização do know-how.txt após correção de testes",
          "Comentários claros em testes complexos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Clara e objetiva em PRs e comentários", "Foco em aprendizado coletivo"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso exclusivo de *.test.tsx para testes",
          "Estratégia de cobertura rápida priorizando execução"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL e headers"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padrão com envelope de dados"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Limites configuráveis por endpoint"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD via GitHub Actions"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "API_URL", "JWT_SECRET"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de memória em ambientes serverless"]
      }
    ]
  },
  "test-screen-capture.js": {
    "summary": "Este script Node.js automatiza o processo de captura de tela via uma API local, decodificação da imagem em base64, salvamento em disco como arquivo PNG e validação da integridade do arquivo gerado. Seu comportamento central consiste em realizar uma requisição POST para um endpoint específico, extrair e converter a imagem base64 para um buffer binário, persistir o arquivo no sistema de arquivos e verificar se o arquivo resultante possui um header PNG válido e tamanho adequado. O script inclui tratamento robusto de erros para garantir que falhas na captura, decodificação ou validação sejam reportadas e interrompam a execução, assegurando a confiabilidade do processo. Essa automação é útil para testes automatizados de captura de tela, garantindo que a API e o armazenamento estejam funcionando corretamente, integrando-se a pipelines de CI/CD ou fluxos de validação de qualidade de imagem.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Screen Capture Validation Script"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automated Testing", "Image Processing", "API Integration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Testing Automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "API must return valid base64 image data",
          "Saved file must be a valid PNG",
          "Errors must abort process"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["None (Vanilla Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["None"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Local HTTP API at http://localhost:3000/api/v1/screen/capture"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Procedural Script with Modular Functions"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Single script file, no explicit folder structure"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase for functions and variables", "UpperCamelCase not used"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Single module script, no external module boundaries"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Informal, consistent with common JS style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc style comments"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["None (JavaScript without TypeScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["None (script intended for manual or CI execution)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Not applicable"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Intended for integration in CI/CD pipelines for automated validation"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node script.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["node script.js"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Not applicable"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Not specified"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["None (API call unauthenticated)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["None explicit"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Base64 image data handled transiently, no storage de criptografia"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Type: application/json in request"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["None explicit"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não especificado, mas espera-se resposta rápida da API local"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Confiabilidade e integridade sobre otimização de velocidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhuma"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Script único, não escalável por design"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Mensagens de erro detalhadas via console.error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs sequenciais no console com emojis para status"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Abortar execução em erro crítico"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["API local de captura de tela", "Node.js fs e path"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js versão >=18 para suporte nativo a fetch"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de testes automatizados formais"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de API local disponível e responsiva"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros, clareza de logs, modularidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários JSDoc para funções principais"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Uso de emojis e mensagens claras no console"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de base64 para transporte de imagem", "Validação via assinatura PNG"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL (/v1/)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campo success e data.image em base64"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Local development (localhost:3000)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum usado explicitamente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessita API local rodando na porta 3000"]
      }
    ]
  },
  "tests/setup.ts": {
    "summary": "Este arquivo configura o ambiente global para execução de testes automatizados em um projeto JavaScript/TypeScript, garantindo isolamento e controle sobre variáveis de ambiente e dependências externas. Ele define mocks para bibliotecas que podem causar problemas em ambiente de testes, como pino logger, clipboardy e nanoid, evitando efeitos colaterais e facilitando a execução consistente dos testes. Além disso, ajusta variáveis de ambiente específicas para testes, configura timeout global para testes assíncronos e estabelece hooks globais para setup e teardown, promovendo um ambiente de testes estável e previsível.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto de testes automatizados para aplicação JavaScript/TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Test Automation", "JavaScript/TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Testes automatizados em fase de desenvolvimento"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Isolamento completo dos testes",
          "Consistência dos mocks",
          "Ambiente de testes controlado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["pino logger", "clipboardy", "nanoid"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Test Setup Pattern", "Mocking Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "tests/globalSetup.ts - configuração global de testes",
          "src/ - código fonte principal",
          "tests/ - testes unitários e integrados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "snake_case para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Mocks isolados no setup global",
          "Separação clara entre código de produção e testes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes organizados em diretório tests/", "Setup global em tests/globalSetup.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks globais para pino, clipboardy e nanoid",
          "Isolamento de efeitos colaterais"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de testes e lint"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API_KEY (mockada para testes)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Mock do logger pino para evitar logs reais durante testes"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["pino", "clipboardy", "nanoid", "jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível desatualização dos mocks em relação às bibliotecas externas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência dos mocks", "Cobertura de testes", "Isolamento dos testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para mocks e setup global"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de mocks globais para evitar efeitos colaterais em testes"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "test"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV=test",
          "API_KEY=test-api-key",
          "MOUSE_MIN_DUR=100",
          "MOUSE_MAX_DUR=5000",
          "MOUSE_SAMPLE_RATE=30",
          "MOUSE_STREAM_INTERVAL=100"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto que utiliza TypeScript, especificando diretórios raiz e padrões de inclusão/exclusão de arquivos. Seu comportamento principal é controlar o processo de compilação, garantindo que arquivos TypeScript sejam analisados corretamente sem gerar saída (noEmit: true), facilitando a verificação estática de tipos e a integração com ferramentas de build. Ele atua como um ponto central para padronizar a compilação em um ambiente de desenvolvimento, assegurando consistência e evitando a emissão de artefatos desnecessários, o que é crucial para fluxos de trabalho baseados em análise estática e integração contínua.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript com foco em configuração de compilação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "TypeScript", "Configuração de build"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Configuração inicial", "Setup de ambiente"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não emitir arquivos durante compilação (noEmit: true)",
          "Excluir node_modules da compilação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript (versão conforme tsconfig base)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Inheritance"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "rootDir definido como diretório pai",
          "Inclusão de arquivos .ts no diretório atual e ../src"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Arquivos .ts padrão TypeScript"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Exclusão de node_modules para evitar processamento"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict type checking herdado do tsconfig base"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["tsc --watch"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["tsc"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["../tsconfig.json", "TypeScript Compiler"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto moderno que utiliza recursos avançados do ECMAScript 2022 e módulos ESNext, garantindo interoperabilidade com módulos CommonJS e suporte a decoradores experimentais. Ele configura um ambiente estrito de tipagem com verificações rigorosas para evitar erros comuns, além de habilitar geração de mapas de fonte e declarações de tipos para facilitar o desenvolvimento e manutenção. A estrutura de pastas é claramente delimitada entre código fonte e saída compilada, excluindo testes e dependências externas, o que contribui para um build limpo e eficiente, integrando-se facilmente em pipelines CI/CD e sistemas modulares maiores.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript Moderno"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Configuração de build", "TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir tipagem estrita",
          "Separação clara entre src e dist",
          "Exclusão de testes do build"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "ECMAScript 2022"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular ESNext", "Decorator pattern (experimental)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src (código fonte)",
          "dist (build output)",
          "node_modules (dependências)",
          "exclusão de testes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "extensão .ts para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "src como raiz dos módulos",
          "dist para saída compilada",
          "exclusão de node_modules e testes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["strict", "noImplicitAny", "strictNullChecks"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes excluídos do build (exclusão de **/*.test.ts)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["tsc"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript Compiler", "Node.js", "ESNext modules"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "Node.js compatível com ESNext"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.prod.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto, focando em otimizar a saída do build ao desabilitar source maps e remover comentários, garantindo um código final mais limpo e leve. Ele também especifica exclusões claras para evitar a compilação de arquivos de teste, diretórios de dependências e artefatos de build, o que contribui para um processo de build mais eficiente e organizado. Funcionalmente, o arquivo atua como um ponto central para controlar o comportamento do compilador TypeScript, assegurando que apenas o código relevante seja compilado e que o output seja adequado para ambientes de produção ou distribuição.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript com configuração otimizada para build"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Configuração de compilação TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Build otimizado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Excluir arquivos de teste da compilação",
          "Remover comentários no output",
          "Não gerar source maps em produção"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Inheritance"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src (código fonte)",
          "node_modules (dependências)",
          "dist (build output)",
          "tests (testes)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Arquivos .ts para código", "Arquivos .test.ts e .spec.ts para testes"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte e testes",
          "Exclusão de arquivos de teste no build"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript strict mode herdado do tsconfig base"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Arquivos terminados em .test.ts e .spec.ts excluídos do build"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["tsc -p ."]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Redução do tamanho do bundle", "Remoção de código desnecessário"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["./tsconfig.json", "node_modules"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "test.js": {
    "summary": "Este arquivo de código contém uma única instrução que imprime a string 'test' no console. Seu propósito funcional é realizar uma operação simples de logging para fins de teste ou verificação rápida do ambiente de execução. Não há manipulação de dados, transformações ou integração com outros módulos, sendo um código de baixo impacto e complexidade, utilizado principalmente para validar o funcionamento básico do ambiente de desenvolvimento ou debug inicial.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": []
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": []
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": []
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.test.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) estende uma configuração base localizada em './tsconfig.json' e ajusta a opção 'verbatimModuleSyntax' para false, definindo como o compilador deve interpretar a sintaxe dos módulos ECMAScript. Ele inclui os diretórios 'src' e 'tests', garantindo que o compilador processe todos os arquivos TypeScript presentes nestas pastas, o que é fundamental para o desenvolvimento e testes do projeto. A configuração facilita a integração do código fonte e testes, promovendo um ambiente consistente para build e validação, além de garantir compatibilidade com o sistema de módulos do projeto, impactando diretamente na qualidade e manutenção do código.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript", "versão conforme tsconfig base"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm ou yarn (não especificado no arquivo)"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Configurações herdadas do tsconfig base", "verbatimModuleSyntax: false"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Inclusão da pasta 'tests' para compilação e execução de testes"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src - código fonte", "tests - testes automatizados"]
      }
    ]
  },
  "src/application/dto/llm-request.dto.ts": {
    "summary": "Este arquivo define um schema de validação para requisições relacionadas a Large Language Models (LLM) utilizando a biblioteca zod em TypeScript. Ele especifica os campos obrigatórios e opcionais para a construção de uma requisição, incluindo prompt, modelo, temperatura, limite de tokens, prompt do sistema e formato de saída, garantindo que os dados estejam corretos antes do processamento. A estrutura permite integração segura e consistente com o domínio de modelos LLM, facilitando a validação e inferência de tipos para uso em outras partes do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLM Request Validation Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Natural Language Processing", "Large Language Models"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos parâmetros de entrada para evitar chamadas inválidas ao LLM",
          "Respeito aos limites de tokens e temperatura"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Serviço de LLM externo (não especificado)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modularização", "Schema Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/enums - enums do domínio",
          "dto - Data Transfer Objects e schemas de validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para tipos e enums",
          "camelCase para propriedades e variáveis",
          "suffix Schema para schemas de validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre domínio, DTOs e enums para evitar acoplamento"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos arquivos de código"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dependências externas e enums"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes automatizados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Prompt pode conter dados sensíveis, deve ser tratado com confidencialidade"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Validação rápida para não impactar performance de chamadas LLM"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação eficiente e leve"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade garantida pela simplicidade do schema"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros de validação padronizados pela biblioteca zod"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado neste módulo"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não aplicável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Falha na validação impede processamento subsequente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod", "LlmModel enum", "outputFormatSchema"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod versão compatível com TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../domain/enums/llm-model.enum.js", "./output-format.dto.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado neste módulo"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência de schemas externos pode causar inconsistências se não sincronizados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum relevante"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Estável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação correta dos tipos e limites",
          "Consistência com enums e schemas externos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos campos e regras de validação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de zod para validação e tipagem segura"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST (implícito)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não especificado neste módulo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Nenhuma específica"]
      }
    ]
  },
  "src/application/services/llm.service.ts": {
    "summary": "O arquivo implementa um serviço LLM (Large Language Model) que orquestra a geração de respostas a partir de requisições contendo prompts e formatos de saída opcionais. Ele valida formatos personalizados de output, interage com um adaptador LLM para obter respostas brutas, e processa essas respostas aplicando parsing conforme o formato desejado, com tratamento de erros e logging detalhado. O serviço suporta fallback para saída simples em caso de falhas no parsing, garantindo robustez e flexibilidade na integração com modelos de linguagem, além de monitorar performance e respeitar limites configurados para schemas e tempo de parsing.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLMService", "Serviço de geração de completions para modelos de linguagem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "Modelos de Linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa de formatos de saída",
          "Garantia de resposta consistente e formatada",
          "Fallback seguro em caso de erro no parsing"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LLMAdapter (interface para modelos de linguagem externos)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Factory Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/ - entidades de negócio",
          "dto/ - objetos de transferência de dados",
          "infrastructure/ - adaptadores e integrações externas",
          "service/ - lógica de negócio e serviços",
          "factory/ - criação de estratégias e parsers",
          "config/ - configurações globais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase",
          "Interfaces prefixadas com I",
          "Métodos e variáveis em camelCase",
          "Arquivos com extensão .ts e nomes kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre DTOs, serviços, adaptadores e entidades",
          "Dependências injetadas via container",
          "Módulos isolados para parsing e configuração"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb e customizações para TS"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode habilitado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ paralela aos arquivos de código"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de adaptadores externos e factories"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes automatizados aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente neste serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo de prompts e respostas LLM, tratado com cuidado nos logs"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável diretamente neste serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável diretamente neste serviço"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout de parsing configurado (ex: 2000ms)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de parsing e robustez na validação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não implementado neste serviço"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Serviço assíncrono e desacoplado para suportar múltiplas requisições simultâneas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Resposta padronizada com sucesso booleano, dados ou mensagem de erro e código"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis info, warn, error e debug via pino"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código, presumivelmente integrado externamente"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para saída string simples em caso de falha no parsing customizado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["LLMAdapter", "OutputParserFactory", "outputFormatConfig"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe 4.x", "pino >=7.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["dto", "domain", "infrastructure", "factory", "config", "types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de melhorar fallback e tratamento de erros em parsing complexo"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Parsing pode exceder timeout em schemas muito grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Parsing síncrono pode impactar latência em formatos complexos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tipos, tratamento de erros, cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e informativos, sem excesso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de DI para desacoplamento, fallback em parsing, logging estruturado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável diretamente, serviço interno"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Formato padrão com sucesso booleano, dados ou erro e código"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado neste serviço"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configurações de outputFormatConfig, variáveis para logging e adaptadores"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limites de tempo para parsing, capacidade de escalabilidade assíncrona"]
      }
    ]
  },
  "src/config/langchain.config.ts": {
    "summary": "O arquivo LangChainConfig define uma configuração centralizada para gerenciamento de parâmetros e modelos de linguagem (LLMs) utilizados em uma aplicação que integra múltiplos modelos de AI. Ele especifica valores padrão para temperatura, tokens máximos, timeout e tentativas de requisição, além de detalhar características específicas de cada modelo suportado, como limite de tokens e custo por token. Essa configuração permite controle granular sobre o uso dos modelos, facilitando decisões de custo e performance, e serve como referência única para o sistema ao interagir com diferentes LLMs, garantindo consistência e escalabilidade na orquestração das chamadas de API e no gerenciamento de recursos computacionais.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LangChain AI Integration", "Configuração centralizada para modelos LLM"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Modelos de Linguagem Natural", "Configuração de APIs"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter limites de maxTokens por modelo",
          "Respeitar custo por token para controle financeiro",
          "Timeout e retries configurados para evitar falhas silenciosas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["APIs de modelos LLM (OpenAI GPT-4, DeepSeek)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Object Pattern", "Type-safe Constants"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/enums - enums e definições de domínio",
          "config - configurações centrais do sistema"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para constantes e tipos", "UPPER_SNAKE_CASE para enums"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio (enums) e configuração",
          "Configuração imutável exportada para uso global"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para tipos e constantes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout configurado em 30000ms para chamadas de API"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balanceamento entre custo e capacidade de tokens por modelo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Configuração extensível para múltiplos modelos e ajustes finos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retries configurados em 3 tentativas para falhas temporárias"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["LlmModel enum para identificação dos modelos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../domain/enums/llm-model.enum.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/entities/llm-response.ts": {
    "summary": "Este arquivo define uma interface TypeScript chamada LLMResponse, que modela a estrutura de dados esperada para respostas de um Large Language Model (LLM). A interface especifica propriedades essenciais como o conteúdo textual da resposta, o modelo utilizado, e opcionalmente informações de uso de tokens e o motivo de finalização da geração. Funcionalmente, o código serve para garantir tipagem forte e padronização na manipulação das respostas do LLM, facilitando a integração e o controle de recursos consumidos durante a geração de texto. Não há transformações ou efeitos colaterais diretos, pois trata-se apenas de uma definição de tipo, mas habilita práticas robustas de desenvolvimento e manutenção em sistemas que consomem APIs de modelos de linguagem.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "LLM Response Handler",
          "Interface para padronização de respostas de modelos de linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Natural Language Processing",
          "APIs de modelos de linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade dos dados de resposta",
          "Manter compatibilidade com versões do modelo"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API", "Outros provedores de LLM"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Interface Segregation", "Data Contract"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/interfaces - definição de tipos e contratos de dados"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para interfaces", "camelCase para propriedades"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Interfaces isoladas para desacoplamento e reutilização"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para interfaces e propriedades"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/langchain/langchain-llm.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador para integração com Large Language Models (LLMs) utilizando a biblioteca LangChain, suportando múltiplos provedores como OpenAI e DeepSeek. Seu comportamento central consiste em receber requisições contendo prompts e parâmetros de configuração, selecionar dinamicamente o provedor adequado, construir mensagens de sistema e humano, invocar o modelo para gerar respostas e extrair metadados de uso e finalização. O código também realiza logging detalhado para monitoramento e tratamento robusto de erros, garantindo confiabilidade na geração de completions. Essa funcionalidade habilita aplicações a consumir LLMs de forma abstrata e configurável, facilitando a extensão e manutenção do sistema de geração de texto automatizado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LangChain LLM Adapter", "Interface para integração com modelos de linguagem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "Automação de texto"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir resposta consistente do LLM",
          "Manter segurança das chaves API",
          "Registrar logs de uso e erros"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["LangChain", "tsyringe"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API", "DeepSeek API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Adapter", "Dependency Injection", "Factory Method"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/dto - Data Transfer Objects para requisições",
          "domain/entities - Entidades de domínio",
          "config - Configurações do sistema",
          "domain/enums - Enumerações de domínio"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para variáveis e funções",
          "PascalCase para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre aplicação, domínio e infraestrutura",
          "Dependências unidirecionais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para chamadas externas e APIs"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Chaves API restritas e armazenadas em environment variables"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API Keys, tokens de acesso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Criptografia em trânsito via HTTPS"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout configurável via LangChainConfig.timeout"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balancear latência e confiabilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplos provedores para escalabilidade e fallback"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erro encapsulado com mensagem clara e log detalhado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso do pino para logs estruturados com níveis info e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Propagação de erro para camadas superiores para tratamento"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["LangChain", "pino", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatibilidade com versões específicas do LangChain e TypeScript"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/dto", "domain/entities", "config", "domain/enums"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Tratamento de erros genérico pode ser refinado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de chaves API externas sujeitas a expiração"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Latência nas chamadas assíncronas a provedores externos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza no tratamento de erros",
          "Consistência no uso de async/await",
          "Cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Escolha do padrão Adapter para flexibilidade de provedores"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Abstração para chamadas a APIs REST de LLMs"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Objeto LLMResponse com conteúdo, modelo, motivo de finalização e uso de tokens"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["openaiApiKey", "deepseekApiKey"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/controllers/llm.controller.ts": {
    "summary": "O arquivo implementa um controlador RESTful para integração com um serviço de Large Language Model (LLM) utilizando Fastify, focado em receber requisições autenticadas, validar entradas via Zod e processar prompts para geração de respostas dinâmicas. Ele gerencia múltiplos formatos de saída, incluindo strings, objetos, arrays, números e booleanos, além de tratar erros específicos relacionados à validação, tamanho do schema e parsing do output. O controlador registra rotas protegidas por middleware de autenticação, realiza logging detalhado das requisições e respostas, e responde com formatos padronizados para sucesso e falhas, garantindo robustez e clareza na comunicação com clientes. Essa implementação é parte de uma arquitetura modular que utiliza injeção de dependências para desacoplar a lógica de negócio do serviço LLM, promovendo escalabilidade e manutenção facilitada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLM API Service", "API para geração de texto via Large Language Models"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Processamento de Linguagem Natural", "APIs RESTful"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa do input",
          "Autenticação obrigatória via x-api-key",
          "Limite máximo para tamanho do outputFormat"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Serviço LLM interno via LLMService", "Middleware de autenticação customizado"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Controller Pattern", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/ - lógica de negócio e DTOs",
          "config/ - configurações globais",
          "infrastructure/ - integração com frameworks e serviços externos",
          "presentation/ - controllers e rotas HTTP",
          "middleware/ - middlewares para autenticação e validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre camada de aplicação, infraestrutura e apresentação",
          "Uso de injeção de dependência para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, incluindo regras de segurança e melhores práticas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de classes e métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos módulos correspondentes"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços externos e middlewares"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e checks de CI"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key'"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Validação obrigatória do API Key para acesso à rota /llm"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Prompt e respostas do LLM, tokens usados, dados de autenticação"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["x-api-key obrigatório no header"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Recomenda-se HTTPS para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta rápida para geração de completions, idealmente < 1s"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de resposta priorizada sobre uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não implementado no controlador, possível cache no serviço LLM"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via múltiplas instâncias Fastify"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error e code"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de pino para logs de info e error com contexto detalhado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código, mas compatível com ferramentas externas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros específicos com códigos HTTP adequados e mensagens claras"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "LLMService",
          "authenticationMiddleware",
          "llmRequestSchema",
          "outputFormatConfig"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "TypeScript 5.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "application/services/llm.service.js",
          "middleware/auth.middleware.js",
          "application/dto/llm-request.dto.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível overhead na validação de schemas grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Validação e parsing de outputFormat podem impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação rigorosa, tratamento de erros, segurança e logging"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para APIs e DTOs"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de logs estruturados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de injeção de dependência para desacoplamento",
          "Validação via Zod para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não explícito no código, presumivelmente via versionamento de rota futura"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos success, data (dinâmico), metadata"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no controlador, pode ser aplicado via middleware externo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY_SECRET", "LOG_LEVEL", "LLM_SERVICE_ENDPOINT"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limite de tamanho para outputFormat configurável via outputFormatConfig"]
      }
    ]
  },
  "src/interface/schemas/llm.schemas.ts": {
    "summary": "Este arquivo define um JSON Schema para validação de requisições destinadas a modelos de linguagem (LLM). Seu propósito principal é garantir que os dados enviados para a API estejam estruturados corretamente, incluindo propriedades essenciais como prompt, modelo, temperatura, limite de tokens e formato de saída esperado. O schema impõe restrições de tipo, valores mínimos e máximos, além de enumerar opções válidas para o modelo e o formato de saída, assegurando a integridade e previsibilidade das requisições. Funcionalmente, ele atua como uma camada de validação estática que previne erros de entrada e facilita a interoperabilidade entre componentes do sistema que consomem modelos LLM, promovendo robustez e consistência no fluxo de dados. A estrutura modular e o uso de enums externos indicam integração com um domínio maior, reforçando a governança dos dados e a aderência a regras de negócio específicas do projeto.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLM Request Validation Schema"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Natural Language Processing", "Modelos de Linguagem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos parâmetros de entrada para evitar chamadas inválidas ao LLM",
          "Respeito aos limites de tokens e temperatura para controle de custo e performance"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Modelos LLM integrados via enum LlmModel"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Domain-Driven Design (uso de enums do domínio)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["domain/enums (definição de enums de domínio)", "schemas (validação de dados)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para enums e constantes", "camelCase para propriedades JSON"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre domínio (enums) e validação (schemas)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["../../domain/enums/llm-model.enum.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["domain enums para padronização de modelos LLM"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tipos e enums", "Conformidade com schema JSON"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas e enums"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários técnicos em português com termos técnicos em inglês"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de enums para garantir integridade dos modelos LLM"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["object", "array", "string", "number", "boolean"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/config/dependency-injection.test.ts": {
    "summary": "Este arquivo de teste automatizado em Jest tem como objetivo principal validar a configuração do sistema de dependency injection utilizado no projeto. Ele mocka diversos serviços, adaptadores e controladores para garantir que a função configureDependencies registre corretamente todas as dependências necessárias no container de injeção, incluindo serviços, adaptadores, singletons e controllers. O comportamento testado assegura que a arquitetura modular e desacoplada do sistema seja mantida, facilitando a escalabilidade e a manutenção, além de garantir que a injeção de dependências ocorra sem erros, promovendo a integridade do fluxo de inicialização da aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automated Dependency Injection Configuration for Input Event Handling System"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software Infrastructure", "Dependency Injection", "Input Event Processing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "All dependencies must be registered correctly to avoid runtime failures",
          "Singleton services must be unique and globally accessible"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "tsyringe (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LangChain LLM Adapter", "NutJS Adapters"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Mocking for Unit Testing"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/services - Serviços de negócio",
          "src/infrastructure/adapters - Adaptadores para integração com bibliotecas externas",
          "src/interface/controllers - Controladores para entrada de eventos",
          "src/config - Configurações do sistema, incluindo DI"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para funções e variáveis",
          "Sufixo 'Service' para serviços",
          "Sufixo 'Adapter' para adaptadores"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre application, infrastructure e interface",
          "Dependências injetadas via container para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any explícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes públicas"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode enabled)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pastas __tests__ ou paralelas ao código",
          "Mocks extensivos para isolamento"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80% para módulos críticos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Verificação de chamadas de mocks e efeitos colaterais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocking manual com jest.mock para serviços e adaptadores",
          "Mocks retornando classes vazias para isolamento"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes automatizados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Manter baixo overhead na injeção de dependências",
          "Evitar múltiplas instâncias desnecessárias"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Uso de singletons para serviços globais para escalabilidade"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "reflect-metadata", "jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "Jest >=29"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "infrastructure/adapters", "interface/controllers"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de mocks corretos",
          "Confirmação de registros no container",
          "Manutenção da modularidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar contratos de serviços e adaptadores"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e claros", "Uso de inglês técnico para termos específicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de tsyringe para DI", "Mocks extensivos para testes unitários"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/routes/automation.routes.test.ts": {
    "summary": "Este arquivo de teste automatizado em Jest valida o comportamento do módulo de rotas de automação em um servidor Fastify, assegurando que múltiplos controllers (AutomationController, KeyboardController, LLMController, OcrController) e rotas auxiliares (inputEventsRoutes, statusRoutes) sejam registrados corretamente. O código foca em garantir a correta instanciação dos controllers, a invocação dos métodos de registro de rotas, a ordem e parâmetros de registro dos plugins, além do tratamento adequado de callbacks e erros assíncronos. A abordagem de mocking extensivo permite isolar dependências e verificar interações, garantindo que o sistema de roteamento funcione conforme esperado, suportando múltiplas execuções independentes e integrando-se com um container de injeção de dependências para resolução dinâmica de controllers. Este conjunto de testes assegura a robustez e a integridade do processo de registro das rotas, fundamental para a operação do backend de automação, facilitando manutenção e evolução do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation Backend", "Módulo de gerenciamento de rotas para automação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de processos", "Backend API", "Fastify", "Controllers", "Rotas REST"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Registro correto e ordenado das rotas",
          "Instanciação única por execução",
          "Tratamento de erros assíncronos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Jest 29.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Dependency Injection Container"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Modular Plugin Architecture",
          "Mocking for Test Isolation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/interface/controllers - Controllers",
          "src/routes - Definição de rotas",
          "src/config - Configurações e DI container"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Controllers com sufixo Controller",
          "Rotas com sufixo .routes",
          "Mocks prefixados com jest.mock"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers isolados por responsabilidade",
          "Rotas registradas via plugins Fastify",
          "DI container para resolução de dependências"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pastas próximas ao código",
          "Testes unitários e de integração focados em rotas e controllers"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocking extensivo para isolamento"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["jest.mock para mocks de módulos e funções", "Mock de Fastify server e plugins"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Testes passando", "Checks de lint e build"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Testes automatizados",
          "Lint",
          "Deploy automático em staging e produção"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Robustez na inicialização das rotas",
          "Tratamento eficiente de erros assíncronos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplas instâncias independentes de controllers"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de rejeições em registro de rotas",
          "Callbacks done para sinalizar conclusão"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "Jest", "Dependency Injection Container"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/interface/controllers", "src/routes", "src/config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Isolamento de mocks",
          "Clareza na ordem de registro de rotas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara de controllers e rotas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de DI container para resolução de controllers",
          "Mocking extensivo para testes isolados"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/output-format.dto.ts": {
    "summary": "Este arquivo define schemas de validação para requisições e formatos de saída personalizados utilizando a biblioteca zod, focando em garantir a integridade e segurança dos dados JSON manipulados em interações com modelos LLM (Large Language Models). Ele inclui validações rigorosas para tipos e estruturas, além de funções utilitárias para prevenir problemas comuns como recursão infinita em esquemas complexos, prototype pollution e vazamento de informações sensíveis em logs. O código promove um controle robusto sobre a estrutura das respostas geradas, facilitando a integração segura e confiável com sistemas que dependem de formatos JSON dinâmicos e customizados, assegurando qualidade e segurança na manipulação dos dados. A abordagem modular e o uso de tipagem inferida garantem manutenção e escalabilidade eficientes.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "LLM Output Schema Validator",
          "Validação e sanitização de formatos JSON para LLM"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "Validação de Dados JSON"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação estrita do formato JSON de saída",
          "Prevenção de prototype pollution",
          "Controle de profundidade de esquemas para evitar recursão infinita"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI GPT Models (gpt-3.5-turbo, gpt-4, etc.)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Utility Functions", "Type Inference"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "schemas/ - definição de schemas zod",
          "utils/ - funções utilitárias para validação e sanitização"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para tipos e funções", "snake_case para variáveis locais"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre schemas e funções utilitárias",
          "Exportação explícita de tipos e funções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/ para testes de schemas e utils"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dados JSON e chamadas externas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Testes automatizados", "Build e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Dados de prompt e descrições parcialmente mascarados em logs"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Prevenção de recursão infinita para evitar travamentos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Mensagens de erro claras via zod (ex: prompt obrigatório)"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Mascaramento de dados sensíveis em logs"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Validação preventiva para evitar falhas em runtime"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod", "OpenAI GPT Models"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod 3.x", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível complexidade em esquemas muito aninhados"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tipos e segurança contra prototype pollution"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de zod para validação e tipagem", "Sanitização para segurança"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST-like para requisições LLM"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON customizado validado por schemas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API keys para OpenAI", "Configurações de modelo e temperatura"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/factory/output-parser.factory.ts": {
    "summary": "Este módulo implementa uma estratégia robusta para parsing e validação de dados de saída (output) provenientes de LLMs, utilizando a biblioteca Zod para garantir conformidade com esquemas definidos dinamicamente. Ele oferece um mecanismo de cache para esquemas compilados, otimizando a performance ao evitar recompilações repetidas, e uma fábrica singleton que gerencia múltiplas estratégias de parsing, atualmente suportando apenas a estratégia baseada em Zod. O código valida a profundidade e tipos dos esquemas, sanitiza entradas, e registra logs detalhados para monitoramento e depuração, além de realizar limpeza periódica do cache para manter a eficiência e integridade do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Output Parsing Engine", "Validação e parsing de dados de saída de LLM"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "Validação de Dados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação estrita dos dados conforme esquema",
          "Cache de esquemas deve respeitar TTL para evitar dados obsoletos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Logger customizado", "Configuração externa para outputFormatConfig"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Strategy", "Singleton", "Factory", "Cache"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config: configurações globais",
          "dto: definições de tipos e schemas",
          "parsers: estratégias de parsing e validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes PascalCase",
          "Interfaces prefixadas com I",
          "Funções camelCase",
          "Constantes camelCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre config, dto e parsing",
          "Dependência unidirecional para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ paralela ao código"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dependências externas e funções auxiliares"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e checks de CI"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes", "Build", "Deploy automatizado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Parsing deve ser realizado em milissegundos para manter fluidez"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Prioriza velocidade e reutilização de esquemas via cache"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache de esquemas compilados com TTL configurável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Cache cleanup periódico para evitar crescimento descontrolado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados com mensagens claras e logados via logger"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de info para sucesso e error para falhas, com contexto"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Logger customizado integrado ao sistema de monitoramento"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Falhas de parsing propagadas para tratamento externo"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Zod", "outputFormatConfig", "logger"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Zod versão 3.x compatível"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../config/logger.js",
          "../../config/output-format.config.js",
          "../dto/output-format.dto.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Suporte limitado a uma única estratégia de parsing"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falha em esquemas muito profundos ou complexos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Parsing JSON e compilação de esquemas podem impactar em cargas elevadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza na validação, tratamento de erros e uso correto do cache"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para todas as funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do Zod como engine principal de validação",
          "Uso de cache para performance"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON validado conforme esquema"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["CACHE_TTL", "ENABLE_CACHE", "ENABLE_DEBUG_LOGS"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória para cache", "Necessidade de alta disponibilidade"]
      }
    ]
  },
  "src/config/output-format.config.ts": {
    "summary": "Este arquivo define uma configuração imutável e validada para o sistema de formatação de saída de esquemas JSON, controlando limites de tamanho, profundidade, timeout de parsing, cache e logs de debug. Ele assegura que as configurações estejam dentro de parâmetros seguros para evitar problemas de performance e segurança, como recursão infinita ou parsing excessivamente lento. A configuração é carregada a partir de variáveis de ambiente, permitindo flexibilidade e adaptação ao ambiente de execução, e inclui validação rigorosa para garantir a integridade dos parâmetros antes do uso no sistema.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Immutable Configuration", "Defensive Programming"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["enableCache", "cacheTtl"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["parseTimeout"]
      },
      {
        "property": "security_constraints",
        "subProperty": "validation_rules",
        "value": [
          "maxSchemaSize between 1 and 1MB",
          "maxDepth between 1 and 20",
          "parseTimeout between 100ms and 30s",
          "cacheTtl between 1 and 1440 minutes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "OUTPUT_SCHEMA_MAX_SIZE",
          "OUTPUT_SCHEMA_MAX_DEPTH",
          "OUTPUT_SCHEMA_DEFAULT_MODE",
          "OUTPUT_SCHEMA_PARSE_TIMEOUT",
          "OUTPUT_SCHEMA_ENABLE_CACHE",
          "OUTPUT_SCHEMA_CACHE_TTL",
          "OUTPUT_SCHEMA_DEBUG"
        ]
      }
    ]
  },
  "src/types/output-shape.ts": {
    "summary": "Este arquivo define tipos TypeScript e funções utilitárias para padronizar e facilitar o tratamento de respostas de modelos de linguagem (LLM) em diferentes formatos, suportando tanto respostas legadas quanto dinâmicas. Ele oferece mecanismos para criar respostas de sucesso e erro, além de type guards para identificar o formato da resposta, garantindo compatibilidade e flexibilidade na manipulação dos dados retornados. O código foca em abstrair a estrutura das respostas, permitindo que consumidores do módulo processem dados LLM de forma consistente e segura, promovendo interoperabilidade e manutenção simplificada em sistemas que utilizam APIs de modelos de linguagem.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "LLM Response Handler",
          "Módulo para padronização e manipulação de respostas de modelos de linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "APIs de Modelos de Linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir compatibilidade entre formatos legado e dinâmico",
          "Padronizar respostas de sucesso e erro",
          "Evitar perda de dados em transformações"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["APIs de modelos de linguagem (LLM)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Functions", "Type Guard Pattern", "Union Types para flexibilidade"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definição de tipos",
          "src/utils - funções utilitárias para respostas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para tipos e interfaces", "camelCase para funções e variáveis"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos e funções utilitárias",
          "Isolamento do tratamento de respostas LLM"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de tipos e funções"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de funções utilitárias e type guards"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para simular respostas LLM em diferentes formatos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes automatizados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações síncronas rápidas, sem impacto significativo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Clareza e segurança de tipos sobre micro-otimizações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade não impactada diretamente pelo módulo"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto com success: false, error: string e código opcional"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado neste módulo"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não aplicável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Padronização de erros para facilitar tratamento externo"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=4.9 para suporte a features usadas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Manutenção da retrocompatibilidade pode aumentar complexidade"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível confusão entre formatos dinâmico e legado em uso incorreto"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração gradual do formato legado para dinâmico em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de tipos", "Cobertura de type guards", "Padronização de respostas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para tipos e funções"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Manter suporte a legacy para garantir estabilidade",
          "Uso de type guards para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful API consumindo respostas LLM"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Controle via tipos e formatos de resposta"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Formato legado e formato dinâmico suportados"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não tratado neste módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum específico para este módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Nenhuma restrição específica"]
      }
    ]
  },
  "tests/unit/services/llm.service.test.ts": {
    "summary": "Este arquivo contém testes unitários para o serviço LLMService, que encapsula a interação com um Large Language Model (LLM) via um adapter específico. O código foca em validar o comportamento da geração de completions, incluindo o processamento de formatos de saída customizados, tratamento de erros do adapter e do parser, além da validação de limites de tamanho do schema de saída. Através de mocks, o teste simula respostas do LLM e estratégias de parsing, garantindo que o serviço retorne dados estruturados ou texto simples conforme o contexto, além de assegurar a robustez frente a falhas. O arquivo é fundamental para garantir a confiabilidade e integridade da camada de aplicação que orquestra chamadas ao LLM, valida formatos e gerencia erros, suportando a integração com múltiplos modelos e formatos de resposta.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLMService - Serviço de geração de texto com suporte a parsing customizado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "Modelos de Linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção com testes unitários robustos"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade e formato correto da resposta do LLM",
          "Tratar erros do modelo sem falhas silenciosas",
          "Limitar tamanho e profundidade do schema de saída"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LLM APIs via LLMAdapter", "Logging via pino"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application - lógica de aplicação",
          "src/domain - entidades e enums",
          "src/infrastructure - adapters e integrações",
          "tests - testes unitários"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e enums",
          "camelCase para funções e variáveis",
          "Arquivos com extensão .ts ou .js"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências unidirecionais do domínio para aplicação e infraestrutura"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Regras padrão ESLint para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados próximos ao código fonte em pastas __tests__ ou paralelas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para adapters externos e factories", "Isolamento de unidades testadas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Tokens e prompts devem ser tratados com confidencialidade"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Comunicação com LLM deve ser segura via TLS"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["ParseTimeout configurado para 5000ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de resposta e integridade do parsing"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não implementado neste módulo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplos modelos LLM e formatos de saída"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto com success:boolean, error:string e code:string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso do pino com níveis info, error, warn e debug"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para string simples em caso de falha no parser"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["LLMAdapter", "OutputParserFactory"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript 5.0", "Jest 29"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "src/application/services",
          "src/application/factory",
          "src/infrastructure/adapters"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de testes de integração com LLM real"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Limitação na validação de schemas muito grandes pode impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Parsing de formatos complexos pode ser custoso"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes, tratamento de erros e clareza de código"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Factory para parsing e fallback para string em erro"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Suporte a string e objetos JSON conforme outputFormat"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado neste módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker e Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configurações de outputFormat, credenciais LLM"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limite de memória para parsing e tempo máximo de execução"]
      }
    ]
  },
  "src/domain/enums/llm-model.enum.ts": {
    "summary": "Este arquivo define uma enumeração (enum) que lista os modelos de Large Language Models (LLMs) suportados pela aplicação, incluindo modelos da OpenAI e DeepSeek. Além disso, contém um mapeamento que associa cada modelo ao seu respectivo provedor, facilitando a identificação do backend responsável pelo processamento. A função getProviderForModel encapsula essa lógica, retornando o provedor correspondente para um dado modelo, o que permite uma integração modular e flexível com diferentes serviços de LLM. O código é focado em fornecer uma abstração clara e centralizada para o gerenciamento dos modelos e seus provedores, suportando decisões dinâmicas baseadas no modelo selecionado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLM Model Provider Mapping", "Gerenciamento de modelos de linguagem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Natural Language Processing", "Machine Learning"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Mapeamento correto entre modelo e provedor",
          "Consistência na enumeração de modelos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API", "DeepSeek API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Enum Pattern", "Mapping Dictionary", "Functional Abstraction"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/models - definição de enums e tipos",
          "src/utils - funções utilitárias como getProviderForModel"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Enums em PascalCase", "Constantes em UPPER_SNAKE_CASE", "Funções em camelCase"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre definição de modelos e lógica de mapeamento",
          "Funções puras para lógica de decisão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit - testes para funções utilitárias"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de enums e funções puras"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na resolução do provedor"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["OpenAI API", "DeepSeek API"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Necessidade de manter sincronização entre enum e mapeamento"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de enum e mapeamento", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para funções e enums"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de enum para modelos para garantir tipagem forte"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "test-deepseek-coder.js": {
    "summary": "Este script Node.js é um teste automatizado para verificar a integração com a API do DeepSeek Coder, um modelo de linguagem para geração de código. Ele realiza uma requisição HTTP POST para um endpoint local, enviando um payload com parâmetros para gerar uma função Python que calcula o fatorial. O código captura e exibe o status da resposta, além do conteúdo retornado, tratando erros de rede ou falhas na requisição. Sua funcionalidade principal é validar a comunicação e autenticação via API key, garantindo que o serviço de geração de código esteja operacional e respondendo conforme esperado, facilitando o diagnóstico e monitoramento da integração no ambiente de desenvolvimento local.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["DeepSeek Coder Integration Test Script"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["AI-assisted code generation", "API integration", "Developer tooling"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Development / Integration Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "API key must be valid and kept secret",
          "Service endpoint must respond within acceptable time",
          "Payload format must comply with API specification"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["None (uses native Node.js and node-fetch)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["None"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["DeepSeek Coder API (local instance at http://localhost:3000/api/v1/llm)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Script-based procedural testing"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Single script file for integration test"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase for functions and variables", "UPPER_SNAKE_CASE for constants"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Single module script with external dependency on node-fetch"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Standard JavaScript style, no explicit guide declared"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["No explicit formatter configured"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Inline comments in Portuguese and emojis for clarity"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["None (JavaScript without TypeScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["None (ad-hoc script)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Single script file executed manually or via CLI"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Direct API call and response validation"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["None"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node script.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["node script.js"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Not applicable"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Not specified"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API key via HTTP header 'x-api-key'"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["API key must be valid and authorized for endpoint access"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API key hardcoded in script (security risk)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Type: application/json", "x-api-key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["None (HTTP used, no HTTPS)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Not explicitly definido, mas esperado rápido para testes locais"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Simplicidade e clareza para testes, não otimização de performance"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhuma"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Não aplicável para script de teste local"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs no console com mensagens e JSON da resposta"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Console.log para etapas e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Nenhuma recuperação automática, apenas log de erro"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["node-fetch"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["node-fetch versão compatível com Node.js 18+"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["API key exposta no código", "Falta de tratamento detalhado de erros"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de endpoint local limita testes em outros ambientes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Segurança da API key", "Tratamento de erros e logging"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários claros e explicativos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Uso de emojis e comentários em português para clareza"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de node-fetch para simplicidade e compatibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful JSON API"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL (/api/v1/llm)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Development (http://localhost:3000)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Local Node.js server"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY (não externalizado, hardcoded no script)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de servidor local rodando na porta 3000"]
      }
    ]
  },
  "test-deepseek.js": {
    "summary": "Este script Node.js é uma ferramenta de teste automatizado para validar a integração com a API DeepSeek, que oferece modelos de linguagem para processamento de prompts relacionados a automação desktop e raciocínio complexo. Ele realiza requisições HTTP POST autenticadas via API key para endpoints locais, enviando payloads com prompts e parâmetros de configuração do modelo, e processa as respostas para verificar sucesso ou falha. O código suporta testes individuais para o modelo 'deepseek-chat' e testes combinados para os modelos 'deepseek-chat' e 'deepseek-reasoner', exibindo logs detalhados do processo, status das respostas e dados de tokens usados, facilitando a validação funcional e a detecção de erros na integração com o serviço DeepSeek.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["DeepSeek Integration Test Script"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial, NLP, automação desktop"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP / Testes de integração"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação via API key obrigatória",
          "Resposta válida do modelo deve conter dados no formato esperado",
          "Testes devem validar múltiplos modelos para cobertura funcional"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico, uso de node-fetch para HTTP"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Não aplicável"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["DeepSeek API local em http://localhost:3000"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Script procedural modular com funções assíncronas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Único arquivo script para testes, sem estrutura complexa"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para funções e variáveis", "Constantes em maiúsculas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Isolamento das funções de teste por modelo",
          "Dependência externa apenas para fetch"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Padrão JavaScript moderno, sem guia formal explícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Indentação padrão 2 espaços"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários inline explicativos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["JavaScript sem tipagem estática"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Nenhum framework formal, script de teste manual"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Funções específicas para cada modelo testado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura manual via execução do script"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Execução sequencial e logging para verificação"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não aplicável"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node script.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["node script.js --both"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API key via header 'x-api-key'"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Chave API deve ser válida para acesso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API key hardcoded, risco de exposição"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Type application/json", "x-api-key obrigatório"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado, comunicação HTTP local"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não especificado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Foco em confiabilidade e clareza do teste"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Não aplicável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs de erro no console com mensagens claras"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs detalhados para cada etapa da requisição"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não aplicável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Captura de exceções para evitar crash do script"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["node-fetch", "DeepSeek API local"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["node-fetch compatível com Node.js 18+"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Chave API exposta no código", "Ausência de testes automatizados formais"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de endpoint local ativo"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza nos logs e tratamento de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários explicativos inline"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Uso de emojis e mensagens claras no console"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Separação de testes por modelo para modularidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST API"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL /api/v1/llm"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos data e metadata"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Localhost para desenvolvimento e testes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Execução local via Node.js"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY (não usada diretamente, chave hardcoded)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de API DeepSeek rodando localmente"]
      }
    ]
  },
  "tests/unit/infrastructure/adapters/nutjs/nutjs-keyboard.adapter.test.ts": {
    "summary": "Este arquivo contém testes unitários para o adaptador NutJSKeyboardAdapter, que encapsula funcionalidades do módulo @nut-tree-fork/nut-js para manipulação de teclado em automações. O adaptador oferece métodos para digitar texto, pressionar e liberar teclas individuais, além de executar combinações de teclas com suporte a modificadores comuns como Ctrl, Alt, Shift e Meta. O código foca em garantir o comportamento correto do adaptador, incluindo tratamento robusto de erros, suporte a variações de nomenclatura de teclas (case insensitive) e a ordem correta de pressionamento e liberação em combinações. Também inclui um método de delay para pausas assíncronas. A suíte de testes valida cenários de sucesso, falha e casos extremos, assegurando a integração correta com a biblioteca subjacente e a consistência do comportamento esperado em diferentes condições.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "NutJS Keyboard Adapter",
          "Automação de entrada de teclado para testes e aplicações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de testes", "Automação de UI", "Input simulation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Suporte correto a todas as teclas mapeadas",
          "Tratamento robusto de erros para evitar falhas silenciosas",
          "Execução correta da ordem de pressionar e liberar em combinações"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Adapter Pattern", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/infrastructure/adapters/nutjs - adaptadores para bibliotecas externas",
          "tests/unit - testes unitários isolados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "snake_case para arquivos de teste"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre adaptadores e lógica de negócio",
          "Mocks isolam dependências externas em testes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes unitários localizados em pasta tests/unit",
          "Mocks para dependências externas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Testes parametrizados para múltiplos casos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks manuais com jest.fn()", "Mock de módulos externos via jest.mock()"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes unitários", "Lint", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações assíncronas rápidas, sem bloqueio perceptível"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência em simulação de teclado", "Uso eficiente de promises"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros encapsulados com mensagens claras e prefixos contextuais"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros não-Error com fallback para mensagens genéricas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [""]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatibilidade com versões recentes do NutJS e Jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/infrastructure/adapters/nutjs"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Manutenção do mapeamento de teclas e suporte a novas teclas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Tratamento limitado para erros lançados como tipos não-Error"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [""]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [""]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Consistência de nomenclatura"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para métodos públicos do adaptador"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em inglês e português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do Adapter para desacoplar biblioteca externa",
          "Padronização de erros com mensagens prefixadas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipelines"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [""]
      }
    ]
  },
  "tests/unit/interface/controllers/keyboard.controller.test.ts": {
    "summary": "Este arquivo de teste automatizado em Jest valida o comportamento do KeyboardController, um componente responsável por gerenciar operações relacionadas a teclado e clipboard em uma aplicação backend. Ele assegura que as rotas HTTP para digitação, pressionamento de tecla, combinação de teclas, cópia, colagem e limpeza do clipboard sejam registradas corretamente e que seus handlers respondam adequadamente a cenários de sucesso, falha e exceções. O código utiliza mocks para simular serviços externos (KeyboardService e ClipboardService) e valida a robustez do controller frente a erros internos, garantindo respostas padronizadas e logging apropriado. Além disso, verifica a aplicação de schemas de validação e a configuração do logger, promovendo confiabilidade e manutenção facilitada no contexto de uma API RESTful para automação de entrada e manipulação de dados do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard and Clipboard Automation API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Automation", "Input Control", "Clipboard Management"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Testing and Validation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Reliable input simulation",
          "Consistent clipboard state",
          "Graceful error handling"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify", "Jest 29", "tsyringe"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["KeyboardService", "ClipboardService"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Controller Pattern", "Middleware Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/interface/controllers - Controllers para rotas HTTP",
          "src/interface/middleware - Middlewares para validação",
          "src/config - Configurações de ambiente",
          "tests - Testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para rotas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controllers, serviços e middlewares",
          "Injeção de dependências via tsyringe"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript e JavaScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta tests com mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocking extensivo para isolamento"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de serviços externos via jest.mock",
          "Mock de instâncias Fastify e requests"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes automatizados passando"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy stages"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável no escopo deste controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável no escopo deste controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard tratado com cuidado para evitar vazamento"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Configuração esperada via Fastify, não detalhada no teste"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável no escopo deste controller"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Respostas rápidas para operações de teclado e clipboard, idealmente < 100ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e alta confiabilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável para operações dinâmicas de input"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via instâncias Fastify"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error e data"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de info e error via Fastify logger"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Handlers retornam respostas padronizadas e logam erros"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe para DI", "Fastify para servidor HTTP", "Jest para testes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["tsyringe mockada para compatibilidade com TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/interface/controllers", "src/interface/middleware", "src/config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Necessidade de mocks extensivos para testes isolados"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Clareza e organização do código"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação via JSDoc para controllers e serviços"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de DI para facilitar testes e modularidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos success, data e error"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Development, Staging, Production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Containerized via Docker (presumido)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["KEYBOARD_SPEED"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Não especificado"]
      }
    ]
  },
  "debug-uiohook.js": {
    "summary": "Este arquivo de código implementa um teste funcional para replicar o comportamento do GlobalInputCaptureService, focando na captura de eventos globais de input do usuário, como mouse e teclado, utilizando a biblioteca uiohook-napi. O script importa dinamicamente o módulo, configura listeners para eventos de mouse e teclado, inicia a captura e registra eventos capturados no console, além de implementar um mecanismo de encerramento gracioso para parar a captura ao receber um sinal SIGINT. O código é essencial para validar a configuração dos listeners e garantir que o serviço de captura global de inputs funcione corretamente, facilitando a identificação de problemas relacionados à configuração dos eventos. A abordagem assíncrona e o uso de listeners refletem um padrão reativo, enquanto a integração com o processo Node.js assegura controle adequado do ciclo de vida da captura de eventos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["GlobalInputCaptureService - Captura global de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação, captura de eventos de input, monitoramento de dispositivos de entrada"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Teste funcional / Debug"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Captura precisa e em tempo real dos eventos globais de mouse e teclado",
          "Encerramento gracioso para evitar vazamento de recursos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["uiohook-napi (native input hook library)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Event-driven", "Observer pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte principal",
          "tests/: testes funcionais e unitários",
          "scripts/: scripts auxiliares e testes manuais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "snake_case evitado"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Módulo de captura de input isolado, dependente apenas de uiohook-napi"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para ES2021, sem uso de var"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e módulos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["JavaScript sem tipagem estática, possível uso futuro de TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Nenhum framework explícito, testes manuais via script"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Scripts de teste localizados em scripts/testes manuais"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Testes exploratórios e de integração manual"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes manuais aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build e lint automáticos", "Deploy manual para ambiente de teste"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node scripts/testGlobalInputCapture.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Captura em tempo real, latência mínima"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência, uso moderado de CPU"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade limitada ao ambiente local do cliente"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs no console com mensagens claras"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Console logs para eventos e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tentativa de parada graciosa no SIGINT"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["uiohook-napi"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["uiohook-napi versão compatível com Node.js 18+"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de testes automatizados"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falha na captura se uiohook-napi não inicializar corretamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza nos logs", "Tratamento correto de erros", "Uso adequado de async/await"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos eventos capturados e fluxo de execução"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de emojis para status"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de import dinâmico para evitar carregamento desnecessário"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development (local)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Execução local via Node.js"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Dependência de permissões para captura global de input no SO"]
      }
    ]
  },
  "diagnose-uiohook.cjs": {
    "summary": "Este arquivo de código é um script de diagnóstico e teste para a biblioteca uiohook-napi, focado em capturar eventos de input do usuário no macOS, como mouse e teclado, para verificar problemas relacionados a permissões e funcionamento da captura de eventos nativos. Ele configura listeners para eventos de mouse (mousedown, mouseup, mousemove) e teclado (keydown, keyup), contabilizando e exibindo logs detalhados dos eventos capturados, além de tratar erros e garantir um encerramento gracioso do processo. O script também implementa uma rotina de monitoramento periódico para exibir a quantidade de eventos capturados em intervalos regulares, parando automaticamente após 20 segundos, o que facilita a identificação de falhas de captura ou permissões no sistema operacional. A abordagem permite validar a integração do uiohook-napi com o ambiente Node.js e o macOS, fornecendo feedback em tempo real para desenvolvedores e usuários sobre o comportamento do hook de input.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["uiohook-napi Diagnostic Test Script"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desktop Input Event Capture", "macOS Accessibility Permissions"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Testing", "Debugging"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Captura precisa e confiável de eventos de input",
          "Tratamento correto de erros para evitar crashes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js)", "Node.js version unspecified but compatible"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["uiohook-napi (native input hook)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Event-driven"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Single script file for diagnostic purposes, no complex folder structure"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase for variables and functions", "UpperCamelCase for imported modules"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Single module script, no modularization"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["No explicit style guide enforced"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc style comment header"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["None (JavaScript without TypeScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Not applicable (script for manual testing)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Not applicable"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install uiohook-napi"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node <script_name>.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Manual execution, no automated tests"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Not applicable"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Not specified"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Not applicable"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["macOS Accessibility permissions required for event capture"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Input event data (mouse, keyboard)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Real-time event capture with minimal latency"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Reliability over throughput"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Not applicable"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Not applicable"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Console error logs with descriptive messages"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Verbose console logging for events and errors"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Not integrated"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Graceful shutdown on SIGINT, error event handling"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["uiohook-napi"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js compatible with uiohook-napi"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Script is minimal and for testing only, no modularization"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["macOS Accessibility permissions may block event capture"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Potential event flooding mitigated by selective logging"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Not applicable"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Not applicable"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Minimal inline comments and JSDoc header"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Informal console logs with emojis for clarity"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Use of event-driven pattern for input capture"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["EventEmitter pattern"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Not applicable"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Console logs with JSON-like event objects"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Not applicable"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Local development on macOS"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Node.js script execution"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Requires macOS Accessibility permissions for input capture"]
      }
    ]
  },
  "src/application/services/application-startup.service.ts": {
    "summary": "O código implementa um serviço de inicialização responsável por gerenciar o ciclo de vida do GlobalInputCaptureService, que captura eventos globais de entrada na aplicação. Ele provê métodos assíncronos para iniciar a captura de eventos durante a inicialização da aplicação e métodos síncronos para parar esses serviços durante o desligamento, garantindo logging detalhado para monitoramento e tratamento de erros. Essa estrutura facilita a coordenação centralizada dos serviços essenciais para o funcionamento da aplicação, promovendo robustez e controle sobre o estado dos sistemas de captura de eventos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "ApplicationStartupService - Serviço de inicialização para captura global de eventos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Sistemas de captura de eventos",
          "Event-driven architecture",
          "Input event monitoring"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir inicialização correta do GlobalInputCaptureService",
          "Registrar falhas críticas de inicialização",
          "Parar serviços de captura de eventos de forma segura"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Service Layer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações gerais",
          "services/ - serviços de negócio e infraestrutura",
          "modules/ - agrupamento modular do sistema"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "Arquivos com extensão .service.js para serviços"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Serviços isolados por responsabilidade",
          "Injeção de dependências para desacoplamento",
          "Módulos comunicam-se via interfaces e injeção"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão", "Quebra de linha em 80 caracteres"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/services/ para testes unitários de serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de serviços injetados via tsyringe",
          "Uso de jest.mock para dependências externas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos 2 desenvolvedores",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test, deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na inicialização do serviço", "Minimizar bloqueios síncronos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Serviço deve suportar múltiplas instâncias e inicializações concorrentes"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs estruturados com mensagens e stack traces"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis info, error com mensagens claras e emojis para status"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Propagação de erros para camadas superiores para tratamento"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["GlobalInputCaptureService", "tsyringe", "logger"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../config/logger.js", "./global-input-capture.service.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Melhorar tratamento assíncrono na parada do serviço"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de tratamento de erros",
          "Conformidade com padrões de injeção de dependência"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de emojis para status em logs"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do tsyringe para injeção de dependências",
          "Centralização da inicialização em ApplicationStartupService"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/global-input-capture.service.ts": {
    "summary": "O GlobalInputCaptureService é um serviço especializado para captura global e em tempo real de eventos de mouse e teclado no sistema operacional, com foco em máxima compatibilidade no macOS. Utilizando a biblioteca uiohook-napi, ele intercepta eventos como cliques, movimentos, arrastos e pressionamentos de teclas, aplicando controle de taxa para evitar sobrecarga. O serviço transforma eventos brutos do sistema em eventos estruturados e despacha-os para um EventDispatcher, permitindo integração com outras partes do sistema. Além disso, implementa tratamento de erros, logging detalhado e controle de estado para iniciar, parar e monitorar a captura, garantindo robustez e eficiência na coleta de dados de input global.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "GlobalInputCaptureService",
          "Captura global de eventos de input para monitoramento e integração"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Sistemas operacionais", "Input event monitoring", "macOS compatibility"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não perder eventos de input relevantes",
          "Evitar sobrecarga por excesso de eventos",
          "Garantir compatibilidade multiplataforma, especialmente macOS"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["uiohook-napi (native input event capture)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Observer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config (configurações)",
          "src/services (serviços de captura e lógica)",
          "src/types (tipos e interfaces)",
          "src/utils (utilitários)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "PascalCase para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre captura de eventos, despacho e logging",
          "Dependência unidirecional do serviço para EventDispatcher"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo no-unused-vars, strict typing"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode enabled)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ dentro de src/services"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de uiohook-napi e EventDispatcher para testes unitários"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automáticos"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço local de captura de input)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Eventos de input podem conter dados sensíveis, devem ser tratados com confidencialidade"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Processamento em tempo real com latência mínima"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e eficiência no processamento de eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao ambiente local, foco em estabilidade e baixa latência"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs estruturados com mensagens e stack traces"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis de log: info, warn, debug, error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Logger customizado integrado ao sistema"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros com logs e tentativa de parada segura"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["uiohook-napi", "tsyringe", "EventDispatcher"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["uiohook-napi versão compatível com macOS atual"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["EventDispatcher interno para propagação de eventos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Mapeamento de keycodes pode ser ampliado para maior cobertura"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível perda de eventos em picos de alta frequência"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Limitação do rate limiting para evitar sobrecarga"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza no tratamento de eventos e robustez no controle de estado"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de emojis para facilitar leitura"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do uiohook-napi para compatibilidade multiplataforma"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Event-driven interno, não expõe API REST ou similar"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento interno via controle de pacotes"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Eventos estruturados com timestamp, tipo, posição e dados específicos"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Limite de 1000 eventos por segundo para evitar spam"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker e deployment tradicional em servidores macOS"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["LOG_LEVEL", "UIOHOOK_CONFIG_PATH"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de permissões para captura global de input no SO"]
      }
    ]
  },
  "test-uiohook-direct.cjs": {
    "summary": "Este arquivo de código é um script de teste para a biblioteca uiohook-napi, que captura eventos globais de input do sistema operacional, como movimentos e cliques do mouse, além de pressionamentos e liberações de teclas do teclado. O script configura listeners para esses eventos e imprime informações detalhadas no console, permitindo a verificação direta do funcionamento da captura de eventos. Ele também implementa um mecanismo de encerramento gracioso ao interceptar o sinal SIGINT, garantindo que a captura seja parada corretamente, evitando estados inconsistentes ou recursos não liberados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["uiohook-napi event capture test"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desktop input event monitoring", "System-level event capture"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Testing", "Proof of concept"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Ensure reliable start and stop of event capture",
          "Avoid resource leaks on shutdown"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["uiohook-napi"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Event-driven"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Single script file for testing purposes"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase for variables and functions"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Single module usage with external dependency uiohook-napi"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["No explicit style guide detected"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc style comment at file header"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["None (JavaScript without TypeScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Not applicable (manual test script)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Single script for manual testing"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Manual event triggering and console verification"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["None"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node <script_name>.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Manual execution and observation"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Not applicable"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Not specified"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["None"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["None"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["None"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["None"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["None"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Real-time event capture expected"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Low latency event processing"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["None"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Not applicable"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Console error logging"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Console logs for events and errors"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["None"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Try-catch blocks on start and stop"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["uiohook-napi"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Not specified"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["No formal error handling or test automation"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Potential platform compatibility issues with uiohook-napi"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Not identified"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Not applicable"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Not specified"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Minimal inline comments and JSDoc header"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Informal console logs with emojis"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Choice of uiohook-napi for global input capture"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Event emitter pattern"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Not applicable"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Event objects logged to console"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Not applicable"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Local development environment"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Node.js runtime execution"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["None"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Requires OS support for global input hooks"]
      }
    ]
  },
  "tests/unit/services/event-dispatcher.service.test.ts": {
    "summary": "Este arquivo contém testes unitários para o serviço EventDispatcher, que é responsável por gerenciar eventos de entrada como mouse clicks e key presses em uma aplicação. O código valida o comportamento do dispatcher, incluindo a gestão de listeners, o despacho de eventos com adição automática de IDs, e a aplicação de rate limiting configurável via variável de ambiente. Além disso, cobre casos de borda como ausência de listeners e remoção de listeners inexistentes, garantindo robustez. O serviço implementa um padrão singleton para garantir uma única instância, e oferece estatísticas em tempo real sobre o processamento de eventos, como contagem de listeners, tamanho da fila e eventos por segundo. A abordagem de testes utiliza mocks para dependências externas e simula execuções síncronas para garantir cobertura e confiabilidade do sistema de eventos, fundamental para aplicações que dependem de input event handling eficiente e controlado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["EventDispatcher Service", "Gerenciamento e despacho de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Input Event Handling", "Event-driven architecture", "User Interaction"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Testes automatizados implementados"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir rate limiting configurável para evitar sobrecarga",
          "Manter singleton para consistência do dispatcher",
          "Listeners devem ser gerenciados corretamente para evitar leaks"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29.x (testing)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["nanoid (ID generation)", "Custom logger module"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton", "Observer (Listener pattern)", "Event-driven"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/services - serviços de negócio",
          "src/config - configurações e logger",
          "tests - testes unitários"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Serviços isolados em módulos",
          "Dependências externas mockadas em testes",
          "Separação clara entre lógica de negócio e infraestrutura"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ou parallel a src",
          "Testes unitários focados em serviços"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Jest mocks para módulos externos e funções", "Mock de logger e nanoid"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de CI passados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço interno de eventos)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Listeners devem ser autorizados externamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Processamento síncrono para eventos",
          "Rate limiting configurável para evitar sobrecarga"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de processamento de eventos", "Baixa latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Singleton limita instância, mas pode ser escalado horizontalmente com cuidado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros capturados em listeners não interrompem fluxo"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logger customizado com níveis debug, info, warn, error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Listeners com erro são tratados para não impactar dispatcher"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["nanoid para geração de IDs", "Logger customizado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Jest 29.x", "TypeScript 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/config/logger.js", "src/application/services/event-dispatcher.service"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Melhorar tratamento de eventos não-printable", "Documentação mais detalhada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Rate limiting depende de variável de ambiente, pode ser inválida"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Processamento síncrono pode impactar em alta carga"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Tratamento de erros em listeners",
          "Conformidade com padrões de design"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para funções públicas", "Comentários explicativos em lógica complexa"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e claros", "Uso de inglês técnico para termos específicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do padrão Singleton para garantir instância única",
          "Rate limiting configurável via env var"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Event-driven internal API"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Configuração via variável de ambiente INPUT_EVENT_RATE",
          "Limita eventos processados por segundo"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipelines"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["INPUT_EVENT_RATE"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de processamento síncrono pode impactar escalabilidade"]
      }
    ]
  },
  "web/public/index.html": {
    "summary": "Este arquivo HTML configura a estrutura básica de uma página web destinada a servir como interface para a API NutJS Desktop Automation. Ele incorpora recursos visuais e funcionais por meio da inclusão de bibliotecas externas como Bootstrap para estilização responsiva e Font Awesome para ícones, garantindo uma experiência de usuário moderna e acessível. O código não contém lógica de negócio ou manipulação de dados, atuando como um container estático que prepara o ambiente para a injeção dinâmica de conteúdo via JavaScript, facilitando a integração com sistemas maiores que utilizam NutJS para automação desktop.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Desktop Automation Interface"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desktop Automation", "API Integration", "User Interface"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Disponibilidade da interface para interação com API",
          "Carregamento correto dos recursos externos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["HTML5"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Bootstrap 5.3.2"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["CDN Bootstrap", "CDN Font Awesome"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["SPA container"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Não aplicável no arquivo isolado"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["IDs e classes CSS padrão Bootstrap"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre estrutura HTML e scripts externos"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["HTML5 sem guia específico declarado"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Bootstrap CSS and JS", "Font Awesome CSS"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Bootstrap 5.3.2", "Font Awesome 6.4.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/App.tsx": {
    "summary": "Este arquivo define o componente principal de uma aplicação React que utiliza React Router para gerenciar a navegação entre páginas. Seu comportamento central é prover roteamento client-side, permitindo que o usuário navegue entre a HomePage e a AutomationPage sem recarregar a página, garantindo uma experiência SPA (Single Page Application). A estrutura é simples e focada em definir rotas estáticas, integrando componentes de página e estilos CSS, habilitando a organização modular e escalável da interface do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["React SPA com roteamento para páginas Home e Automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Application", "User Interface", "Client-side Routing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Navegação correta entre rotas definidas",
          "Manter estado da SPA sem recarregamento"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x", "React Router DOM 6.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["SPA", "Component-Based Architecture", "Declarative Routing"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "pages/: componentes de páginas",
          "styles/: arquivos CSS globais",
          "App.tsx: componente raiz com roteamento"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para variáveis e funções",
          "kebab-case para arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre componentes de página e roteamento",
          "Estilos isolados em pasta própria"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e componentes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "React Testing Library"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/ com testes unitários e de integração para componentes e rotas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dependências externas e componentes filhos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automáticos"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de navegação e carregamento"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via componentes desacoplados"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["react", "react-router-dom"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["react >=18.0.0", "react-router-dom >=6.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./pages/HomePage", "./pages/AutomationPage"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Falta de tratamento para rotas não definidas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de rotas", "Uso correto de React Router", "Qualidade do JSX"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara de componentes e rotas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e claros", "PRs detalhados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do React Router v6 para roteamento declarativo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipeline"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/components/Header.tsx": {
    "summary": "Este componente React chamado Header implementa uma barra de navegação responsiva utilizando React-Bootstrap, focada em fornecer acesso rápido ao status do sistema e à documentação da API NutJS. Ele gerencia o estado local para exibir um modal de status, que reflete o estado atual do sistema obtido via hook customizado useStatus, permitindo ao usuário verificar o status em tempo real. A interação principal envolve a exibição do modal e a atualização assíncrona do status, integrando-se com outros módulos para oferecer uma interface intuitiva e funcional para monitoramento e navegação, facilitando a experiência do usuário e a manutenção do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS API - Interface de monitoramento e navegação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de APIs", "Monitoramento de status", "Interface web React"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Exibição correta do status do sistema",
          "Atualização assíncrona confiável do status",
          "Navegação segura para documentação externa"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.2", "React-Bootstrap 2.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["GitHub (para documentação externa)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture", "Hooks Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "components/ - componentes React reutilizáveis",
          "hooks/ - hooks customizados para lógica de negócio",
          "modals/ - componentes modais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "prefixo use para hooks customizados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre UI (Header, StatusModal) e lógica (useStatus)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para React/TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e componentes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/components/", "tests/hooks/"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para hooks e chamadas assíncronas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável no componente Header"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável no componente Header"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não gerenciado diretamente pelo componente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Atualização do status deve ser rápida (< 1s)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de resposta e experiência do usuário"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não implementado no componente Header"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Componentes desacoplados facilitam escalabilidade"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não implementado explicitamente no componente"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado no componente Header"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Modal pode ser fechado para recuperação manual"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["useStatus hook", "StatusModal component"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["React >=18.0", "React-Bootstrap >=2.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["hooks/useStatus", "components/StatusModal"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Falta tratamento explícito de erros na chamada assíncrona"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falta de feedback visual durante loading do status"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado no componente Header"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Uso correto de hooks",
          "Tratamento de estados assíncronos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para hooks e componentes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de React-Bootstrap para UI consistente",
          "Separação do modal em componente próprio"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST (documentação externa)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável no componente Header"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON (esperado do hook useStatus)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no componente Header"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipeline via GitHub Actions"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["REACT_APP_API_URL", "REACT_APP_GITHUB_DOCS_URL"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de chamadas assíncronas simultâneas para status"]
      }
    ]
  },
  "web/src/index.tsx": {
    "summary": "Este arquivo é o ponto de entrada principal de uma aplicação React, responsável por inicializar e renderizar o componente raiz <App /> dentro do DOM. Utiliza ReactDOM.createRoot para criar uma raiz de renderização moderna e segura, garantindo que o aplicativo seja renderizado dentro do elemento HTML com id 'root'. O uso de React.StrictMode habilita verificações adicionais durante o desenvolvimento para identificar problemas potenciais, promovendo melhores práticas e maior robustez. O arquivo também importa estilos globais, integrando a camada visual ao processo de inicialização. Funcionalmente, este código orquestra a montagem inicial da interface do usuário, conectando a lógica da aplicação com o ambiente do navegador, habilitando a experiência interativa do usuário final.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["React Application", "Single Page Application for UI rendering"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Development", "Frontend", "React ecosystem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Stable deployment"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Render root component only once", "Ensure DOM element with id 'root' exists"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.2"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture", "Single Page Application (SPA)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte",
          "src/components/: componentes React",
          "src/styles/: arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes",
          "camelCase para variáveis e funções",
          "kebab-case para arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre componentes UI e estilos",
          "Importação explícita de dependências"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e componentes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript settings"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "React Testing Library"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["__tests__ folders próximos aos componentes"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% coverage"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para APIs e componentes filhos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["react", "react-dom"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["react@18.x", "react-dom@18.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./App", "./styles/index.css"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Qualidade do código", "Conformidade com padrões", "Testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para novos componentes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e educados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de React 18 com StrictMode para segurança"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Static hosting", "CI/CD pipeline"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/styles/App.css": {
    "summary": "Este arquivo CSS define estilos visuais para uma aplicação web, focando na estrutura e aparência de componentes como containers, cards, botões e elementos de navegação. O código aplica propriedades de layout responsivo, utilizando media queries para ajustar espaçamentos, tamanhos de fonte e padding em dispositivos móveis. Além disso, incorpora efeitos visuais modernos como sombras (box-shadow), bordas arredondadas (border-radius) e filtros de desfoque (backdrop-filter), garantindo uma interface limpa, elegante e acessível. O uso de classes utilitárias e especificações de transições melhora a experiência do usuário ao interagir com botões e elementos clicáveis, promovendo uma navegação fluida e visualmente consistente em diferentes resoluções de tela.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Aplicação Web com Interface Responsiva e Estilização Moderna"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Application", "UI/UX Design", "Frontend Styling"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Desenvolvimento", "Estilização e Ajustes Visuais"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual",
          "Responsividade em múltiplos dispositivos",
          "Interatividade fluida em botões"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["CSS3"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Possível integração com Bootstrap 4/5 (baseado em classes como .container, .btn-outline-secondary)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-based CSS", "Responsive Web Design"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Estilos organizados por componentes e utilitários, presumivelmente em pastas como /styles/components e /styles/utilities"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Classes CSS em kebab-case, uso de prefixos para componentes (.app, .card, .btn)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre estilos globais (.app) e específicos de componentes (.card, .btn-outline-secondary)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Padrão CSS convencional, sem uso explícito de pré-processadores"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Responsividade e fluidez visual em múltiplos dispositivos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Uso de !important pode dificultar manutenção futura"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Uso de backdrop-filter pode impactar performance em dispositivos menos potentes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência visual", "Responsividade", "Uso adequado de !important"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários explicativos para efeitos visuais e responsividade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Clareza e objetividade em comentários e PRs"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de design responsivo e uso de classes utilitárias para modularidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/styles/index.css": {
    "summary": "Este arquivo CSS tem como objetivo principal estabelecer um reset básico de estilos para garantir consistência visual e comportamental em diferentes navegadores, eliminando margens e paddings padrão e aplicando box-sizing border-box para facilitar o controle de layouts. Além disso, define estilos globais para o corpo da página, incluindo uma stack de fontes modernas e otimizadas para diferentes sistemas operacionais, além de suavização de fontes para melhor legibilidade. O seletor #root assegura que o contêiner principal ocupe no mínimo a altura total da viewport, suportando layouts responsivos e garantindo que o conteúdo preencha a tela adequadamente, facilitando a integração com frameworks front-end modernos como React.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto Frontend Web - Estilização Base"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Development", "Frontend", "UI/UX"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Consistência visual entre navegadores", "Suporte a layouts responsivos"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["CSS3"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x (implícito pelo uso de #root)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture (frontend)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Estilos globais em pasta styles ou assets/css"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["IDs para contêiner raiz (#root)", "Seletores universais para reset"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre estilos globais e componentes específicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["CSS Standard Practices"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript define as opções do compilador para um projeto moderno que utiliza recursos avançados do ECMAScript 2020 e bibliotecas DOM, garantindo compatibilidade com React via JSX. Ele habilita verificações estritas de tipo e consistência, além de permitir interoperabilidade entre módulos ES e CommonJS, suportando importação de arquivos JSON e JavaScript. A configuração exclui diretórios de build e dependências externas, focando na pasta fonte, o que otimiza o processo de compilação e mantém a integridade do código. Funcionalmente, o arquivo orienta o comportamento do compilador para garantir qualidade, segurança e compatibilidade do código durante o desenvolvimento e build do projeto.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript React Moderno"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento Frontend", "React", "TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Desenvolvimento"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter tipagem estrita",
          "Garantir compatibilidade JSX",
          "Excluir node_modules e dist do build"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "ECMAScript 2020"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular", "Component-Based"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ para código fonte",
          "node_modules/ para dependências",
          "dist/ para build output"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para componentes React e classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Isolamento via ES Modules", "Resolução via Node.js moduleResolution"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide (implícito)"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["skipLibCheck para ignorar checagem de libs externas"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["React JSX com react-jsx pragma"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["strict true", "forceConsistentCasingInFileNames true"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["tsc --build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript", "React"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["target ES2020", "module ESNext"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/webpack.config.cjs": {
    "summary": "Este arquivo configura o Webpack para um projeto front-end desenvolvido em TypeScript com React, focado em facilitar o desenvolvimento local e a geração de bundles otimizados para a aplicação web. Ele define o ponto de entrada da aplicação, regras para transpilar arquivos TypeScript e CSS, além de integrar o HtmlWebpackPlugin para gerar o arquivo HTML base. O devServer configurado permite hot-reloading, compressão e abertura automática no navegador, otimizando o fluxo de desenvolvimento. A configuração mantém a estrutura modular e extensível, suportando a resolução de múltiplas extensões e limpeza automática do diretório de saída, garantindo builds consistentes e atualizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["React TypeScript Web Application"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Development", "Frontend", "React", "TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Development"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Build consistency",
          "Hot-reloading enabled for dev",
          "Output directory cleaned before build"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Webpack Configuration", "Plugin Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "web/src - source code",
          "web/public - static assets and HTML template",
          "dist/web - build output"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase for components",
          "kebab-case for files",
          "PascalCase for React components"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separation between source code and public assets",
          "Exclusion of node_modules from transpilation"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript enabled via tsconfig.json"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["webpack serve --config webpack.config.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["webpack --config webpack.config.js"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Development build prioritizes speed over size"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["webpack", "ts-loader", "html-webpack-plugin"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development (localhost:3001)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/package.json": {
    "summary": "Este projeto consiste em uma interface web para a API NutJS Desktop Automation, permitindo a interação e controle de automação desktop via navegador. Ele utiliza React 18.2 com React Router para navegação, Bootstrap para estilização e Webpack para bundling e desenvolvimento local. O comportamento central envolve a construção de uma SPA (Single Page Application) que consome a API de automação, facilitando a criação, execução e monitoramento de scripts de automação desktop. O sistema integra-se com a API backend NutJS, gerenciando estados de UI e roteamento, além de garantir qualidade de código via ESLint e suporte a TypeScript para tipagem estática. A arquitetura modular e o uso de ferramentas modernas garantem escalabilidade e manutenção facilitada, habilitando usuários a controlar automações desktop de forma intuitiva e eficiente.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-desktop-automation-web", "Web interface para NutJS Desktop Automation API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação Desktop", "Desktop Automation", "Web Interface"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade da comunicação com API NutJS",
          "Manter responsividade da UI",
          "Garantir compatibilidade com múltiplas versões do backend"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.3.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2.0",
          "React Router DOM 7.6.3",
          "Bootstrap 5.3.2",
          "React Bootstrap 2.9.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS Desktop Automation API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["SPA (Single Page Application)", "Component-based Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - UI components",
          "src/pages - Views/Pages",
          "public - assets estáticos",
          "config - configurações do Webpack e ESLint"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para componentes React",
          "kebab-case para arquivos estáticos",
          "PascalCase para classes e tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI components e lógica de roteamento",
          "Dependência unidirecional de componentes para serviços"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com plugins @typescript-eslint, react, react-hooks",
          "Regras para correção automática e prevenção de erros comuns"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e componentes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["react", "react-router-dom", "webpack", "typescript"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["React ^18.2.0", "TypeScript ^5.3.0", "Webpack ^5.89.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["dotenv-webpack para variáveis de ambiente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/components/StatusModal.tsx": {
    "summary": "O componente StatusModal é um modal React funcional que exibe o status atual de uma API, incluindo indicadores visuais para online/offline, latência, mensagem e timestamp da última verificação. Ele gerencia estados de loading e exibe feedbacks dinâmicos para o usuário, permitindo a verificação manual do status via botão. O modal utiliza componentes do React-Bootstrap para UI consistente e mantém a lógica de formatação de dados como latência e datas localizadas em português, facilitando a compreensão do estado da API em tempo real. A interação principal envolve disparar uma checagem de status e apresentar resultados atualizados, suportando uma experiência responsiva e informativa para monitoramento de saúde da API.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Status API Monitor", "Interface para monitoramento de saúde de APIs"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Monitoramento de APIs", "DevOps", "Health Check", "Status Monitoring"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Exibir status correto da API",
          "Não permitir múltiplas checagens simultâneas",
          "Atualizar status em tempo real"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.2", "React-Bootstrap 2.7"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["API externa para status da aplicação"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture", "Presentational and Container Components"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - componentes UI",
          "src/types - definições de tipos TypeScript",
          "src/services - chamadas API"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes",
          "camelCase para funções e variáveis",
          "Interfaces prefixadas com I ou sufixadas com Props"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Componentes isolados com props para comunicação",
          "Tipos importados de pasta types",
          "Separação clara entre UI e lógica de negócio"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para React/TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para componentes e funções"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript settings", "Uso de interfaces para props"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "React Testing Library"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ dentro de cada pasta de componente"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80% para componentes UI"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Snapshot testing para UI"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de chamadas API com MSW (Mock Service Worker)"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy stages"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável no componente UI"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável no componente UI"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Gerenciados pelo backend"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Gerenciados pelo backend"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Atualização do status em menos de 2 segundos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Responsividade e baixo consumo de recursos UI"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Sem cache local, status sempre atualizado sob demanda"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Componente isolado, escalável via React"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não implementado explicitamente no componente"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado no componente UI"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Monitoramento externo esperado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Permite nova tentativa de checagem via botão"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["react", "react-bootstrap", "status.types"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["React >=18.0", "TypeScript >=4.9"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../types/status.types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Falta tratamento explícito de erros na UI"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum conhecido"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Chamadas repetidas sem debounce podem impactar"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na renderização condicional",
          "Uso correto de tipos",
          "Acessibilidade e usabilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para componentes e funções"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de React-Bootstrap para UI consistente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST API para status"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Sem versionamento explícito no componente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos ok, latency, message, checkedAt"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não tratado no componente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipeline"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_URL", "REACT_APP_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de rede para chamadas API"]
      }
    ]
  },
  "web/src/hooks/useStatus.ts": {
    "summary": "Este arquivo implementa um React hook customizado chamado useStatus, que gerencia a verificação do status de uma API RESTful. Ele realiza requisições assíncronas para o endpoint '/api/v1/status', controlando estados de loading, sucesso e erro, além de medir a latência da resposta. O hook utiliza cache local via localStorage para armazenar o último status verificado, com um TTL de 60 segundos, otimizando chamadas repetidas e melhorando a experiência do usuário. Em caso de falhas, como timeout ou erros HTTP, o hook captura e expõe mensagens de erro apropriadas, permitindo tratamento e feedback na interface. Essa funcionalidade é essencial para monitoramento em tempo real da disponibilidade da API, suportando decisões de interface e lógica de negócio baseadas na saúde do serviço.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS API Status Monitor"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["monitoramento de APIs", "status de serviços", "health check", "frontend React"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "cache TTL de 60 segundos para status",
          "timeout de requisição em 5 segundos",
          "manter integridade do cache localStorage"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.2"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["/api/v1/status (API REST interna)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Hook Pattern", "Cache Aside Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/hooks: hooks customizados para lógica de estado",
          "src/types: definições de tipos TypeScript"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para funções e variáveis", "PascalCase para tipos e componentes React"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre hooks, tipos e componentes",
          "Uso de imports relativos para modularização"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc com regras para React, TypeScript e hooks"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para 2 espaços"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e hooks"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/hooks para testes unitários de hooks"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de fetch com jest-fetch-mock"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável no hook (assume autenticação externa)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível armazenado no cache local"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Accept: application/json na requisição"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Comunicação presumida via HTTPS"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout de 5 segundos para requisição de status"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Minimizar chamadas repetidas via cache local"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache localStorage com TTL de 60 segundos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade do hook depende da API externa"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto StatusResult com campos ok, latency, message, checkedAt"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado no hook, erros expostos via estado error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Limpeza de cache em caso de dados corrompidos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["React 18.2", "TypeScript 5.0", "localStorage API"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["React >=18.0", "TypeScript >=4.9"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../types/status.types (StatusResult)"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Tratamento limitado de erros de localStorage cheio"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Cache pode ser limpo se JSON inválido for detectado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado no hook"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros, uso correto de hooks, performance"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de cache localStorage para otimização de chamadas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL: /api/v1/status"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["application/json"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev, staging, production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker e CI/CD automatizado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_BASE_URL (não exposto diretamente no hook)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de localStorage do navegador"]
      }
    ]
  },
  "web/src/types/status.types.ts": {
    "summary": "Este arquivo define uma interface TypeScript chamada StatusResult, que representa o resultado da verificação do status de uma API. A interface contém propriedades que indicam se a API está operacional (ok), o tempo de latência da resposta (latency), uma mensagem descritiva do status (message) e o timestamp da verificação (checkedAt). Essa estrutura é fundamental para monitoramento e diagnóstico, permitindo que sistemas consumidores interpretem rapidamente o estado atual da API e tomem decisões baseadas na disponibilidade e desempenho reportados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["API Status Monitoring Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["API Monitoring", "Observability", "DevOps"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Status accuracy must never be compromised",
          "Latency measurement must be precise"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Interface Segregation", "Type Safety"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/interfaces - para definições de tipos e contratos de dados"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para interfaces", "camelCase para propriedades"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Interfaces isoladas para garantir baixo acoplamento"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/webpack.config.js": {
    "summary": "Este arquivo configura o ambiente de build e desenvolvimento para uma aplicação web front-end escrita em TypeScript com React. Ele utiliza Webpack para empacotamento, incluindo suporte para transpilar arquivos TypeScript, carregar estilos CSS e gerenciar assets de imagem. O código também integra plugins para injetar variáveis de ambiente, gerar o HTML base e definir variáveis globais, além de configurar um servidor de desenvolvimento com hot reload e proxy para backend. O comportamento central é preparar e otimizar o bundle para diferentes ambientes, facilitando o desenvolvimento local e a entrega de builds otimizados para produção, garantindo integração fluida com APIs externas e controle de ambiente.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["React TypeScript Web Application", "Front-end SPA"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Development", "Front-end", "SPA", "API Integration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Development", "MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Environment variables must be loaded safely",
          "API proxy must route correctly",
          "Build output must be clean and cache-busted"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x", "Webpack 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Backend API at http://localhost:3000"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Configuration", "Plugin Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src - source code",
          "public - static assets and HTML template",
          "dist - build output"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase for classes and components",
          "kebab-case for files",
          "PascalCase for React components"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separation between source code and public assets",
          "Clear distinction between build config and app code"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint with TypeScript plugin"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier with default config"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["__tests__ folders alongside source files"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Minimum 80% coverage"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Jest mocks and fixtures"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "CI checks required"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run start (webpack-dev-server)"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Environment variables loaded via dotenv-webpack with safe mode"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Build caching and content hashing for cache busting"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Contenthash in filenames for cache invalidation"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["webpack", "ts-loader", "dotenv-webpack", "html-webpack-plugin"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Segurança das variáveis de ambiente",
          "Qualidade da configuração Webpack",
          "Consistência de estilo"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar configurações e scripts npm"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos", "Uso de PRs para discussões"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Webpack para build",
          "Dotenv para variáveis de ambiente",
          "Proxy para backend local"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development (localhost:3001)", "production (build output em ../dist/web)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Static hosting para build", "Webpack Dev Server para desenvolvimento"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "Variáveis definidas em .env"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/routes/status.routes.ts": {
    "summary": "Este arquivo implementa um conjunto de rotas para monitoramento do status da API utilizando o framework Fastify em TypeScript. A principal funcionalidade é expor um endpoint GET /status que permite ao frontend verificar a saúde operacional da aplicação, retornando um objeto JSON com informações sobre a latência da requisição, status de operação e timestamp da verificação. O código foca em fornecer uma resposta rápida e confiável para monitoramento, capturando possíveis falhas e reportando um status de erro com código HTTP 503 quando necessário. Essa funcionalidade é essencial para garantir a observabilidade e a manutenção da disponibilidade do sistema, integrando-se como um componente de health check dentro da arquitetura da aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["API de Monitoramento de Status"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend", "API Monitoring", "Health Check"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Endpoint de status deve estar sempre disponível",
          "Resposta deve conter latência e timestamp atual"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify latest"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Plugin Pattern", "REST API"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/routes - rotas da API", "src/plugins - plugins Fastify"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para funções e variáveis", "PascalCase para tipos e classes"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre rotas e lógica de negócio",
          "Plugins isolados para funcionalidades específicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dependências externas e plugins"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Nenhum (endpoint público)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Nenhuma restrição para /status"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível exposto"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável neste endpoint"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["HTTPS recomendado para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta idealmente abaixo de 100ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e alta disponibilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável para status dinâmico"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Endpoint leve para suportar alta concorrência"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos ok, latency, message, checkedAt"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado no código atual"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Integrável com ferramentas externas via endpoint"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retorna HTTP 503 para falhas, sem retry automático"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatível com Fastify v4+ e TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/routes/statusRoutes.ts"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Falta de logging detalhado para erros"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Latência medida não inclui tempo real de rede"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado devido à simplicidade"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza, simplicidade e tratamento de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do Fastify plugin pattern para modularidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Nenhuma versão explícita no endpoint"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["application/json"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no código atual"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["PORT", "NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Baixa latência e alta disponibilidade exigidas"]
      }
    ]
  },
  "tests/controllers/automation.controller.test.ts": {
    "summary": "Este arquivo de teste automatizado em TypeScript valida o comportamento do AutomationController, focado na funcionalidade de captura de tela via endpoint GET /screen/print. Utilizando Jest para mocks e injeção de dependências com tsyringe, o código assegura que a captura da tela retorne uma imagem em base64 no formato PNG, com tratamento de erros para falhas na captura e tamanho excessivo da imagem (acima de 1MB). Além disso, verifica a correta configuração da rota e seu schema de resposta, garantindo conformidade com o contrato da API. O teste simula interações HTTP e valida respostas, assegurando robustez e confiabilidade na funcionalidade de screen print dentro de um contexto de automação de interface gráfica.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation API - captura e manipulação de tela para automação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de interface gráfica", "Testes automatizados", "Fastify API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Testes unitários e integração para funcionalidade específica"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Captura de tela deve retornar imagem válida em base64",
          "Imagem não pode exceder 1MB",
          "Erros devem ser tratados e comunicados corretamente"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify (API framework)", "Jest 29 (testes)", "tsyringe (DI container)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Controller Pattern",
          "Clean Architecture (separação entre interface, aplicação e infraestrutura)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/interface/controllers - controllers da API",
          "src/application/services - lógica de negócio e serviços",
          "test - testes unitários e integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e funções",
          "kebab-case para rotas",
          "PascalCase para controllers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controllers e serviços",
          "Uso de container DI para injeção de dependências"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode ativado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pastas próximas ao código fonte",
          "Uso de describe e it para organização"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80% para funcionalidades críticas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)", "Given-When-Then para clareza"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks com jest.mock para serviços externos",
          "Injeção via container DI para facilitar mocks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagens base64 não devem exceder 1MB para evitar DoS"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta rápida para captura de tela, idealmente < 500ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balancear velocidade de captura e tamanho da imagem"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success:boolean e error:string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções na captura e retorno de erro padronizado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe para DI", "Fastify para API", "Jest para testes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/application/services", "src/interface/controllers"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Limitação no tamanho da imagem para evitar sobrecarga"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Conformidade com schema"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e claros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de DI para facilitar testes e modularidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com dados base64 e metadados"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/interface/controllers/automation.controller.test.ts": {
    "summary": "Este arquivo de teste automatizado valida o comportamento do AutomationController, um componente responsável por expor endpoints REST para controle de mouse e captura/análise de tela. O controller integra serviços de mouse e tela para executar ações como mover, clicar, arrastar, rolar o mouse, capturar a tela e encontrar templates visuais, além de fornecer streaming em tempo real da posição do mouse via Server-Sent Events (SSE). O código foca em garantir que as rotas HTTP sejam registradas corretamente, que as chamadas aos serviços subjacentes sejam feitas com os parâmetros esperados e que as respostas HTTP contenham os dados apropriados. Também cobre o gerenciamento de conexões SSE, incluindo tratamento de eventos de fechamento e erro, além de logging periódico para monitoramento. A abordagem de testes utiliza mocks para dependências externas, assegurando isolamento e controle sobre o comportamento dos serviços e do ambiente. Assim, o arquivo garante a robustez e a confiabilidade do controller na orquestração das operações de automação de interface, habilitando funcionalidades críticas para automação de UI e testes end-to-end.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Interface Controller",
          "Controle e automação de mouse e tela via API REST"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Interface",
          "UI Automation",
          "Testes End-to-End",
          "Controle remoto de dispositivos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Testes automatizados implementados"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução correta e segura das ações de mouse",
          "Resposta consistente das APIs",
          "Manutenção da conexão SSE estável"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify (HTTP server)",
          "Jest 29 (test framework)",
          "tsyringe (DI container)",
          "pino (logging)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["MouseService", "ScreenService"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Controller Pattern", "Observer (SSE streaming)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/interface/controllers - controllers REST",
          "src/services - serviços de domínio",
          "tests - testes unitários e integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "rotas REST com verbos HTTP e recursos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers dependem de serviços via DI",
          "Serviços isolados da camada HTTP",
          "Mocks usados para testes isolados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta tests",
          "Testes unitários e de integração para controllers"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Jest mocks para serviços e funções globais", "Mock de container DI"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes passando", "Checks CI"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes automatizados", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Dados de posição do mouse e imagens de tela tratados com cuidado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy: default-src 'none'",
          "X-Content-type-Options: nosniff",
          "Cache-Control: no-cache",
          "Connection: keep-alive"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações assíncronas com respostas rápidas para endpoints REST"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência para streaming SSE", "Minimizar overhead de chamadas de serviço"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Gerenciamento eficiente de conexões SSE para múltiplos clientes"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Resposta JSON com campo success e dados ou erro"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de pino para níveis info, debug e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de erros em streaming com encerramento da conexão e limpeza de intervalos"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe para DI", "pino para logging", "Fastify para servidor HTTP"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Jest 29", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "src/interface/controllers/automation.controller",
          "src/services/MouseService",
          "src/services/ScreenService"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível complexidade no gerenciamento de conexões SSE"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Sobrecarga potencial em streaming contínuo de posição do mouse"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Uso correto de mocks", "Tratamento de erros e logging"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para APIs REST e contratos de serviço"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de DI para desacoplamento", "Streaming SSE para atualizações em tempo real"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful API"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não explícito no código fornecido"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos success e data"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no código fornecido"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Desenvolvimento, Staging, Produção (URLs não especificadas)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Provavelmente Docker ou ambiente Node.js padrão"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificadas no código fornecido"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Gerenciamento de conexões SSE pode impactar recursos"]
      }
    ]
  },
  "web/.env.example": {
    "summary": "Este arquivo de configuração define variáveis de ambiente essenciais para a aplicação React, incluindo a chave da API (REACT_APP_API_KEY) e a URL base da API (REACT_APP_API_URL), além do ambiente de execução (NODE_ENV). Seu propósito principal é fornecer parâmetros configuráveis para integração com serviços externos e controle do comportamento da aplicação em diferentes fases de desenvolvimento, facilitando a separação entre ambientes e garantindo flexibilidade na comunicação com APIs. A configuração permite que a aplicação adapte seu comportamento conforme o ambiente, suportando desenvolvimento local e potencialmente produção, sem alterar o código-fonte diretamente.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["React API Integration Project"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Application", "API Integration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Development"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "API key must remain confidential",
          "Environment variables must be correctly set for each environment"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (ES6+)", "React 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Custom API at REACT_APP_API_URL"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Environment-based Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [".env file at root for environment variables"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Uppercase with underscores for environment variables"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separation of configuration from application logic"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API key must be kept secret"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Node.js environment", "React environment variables"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development (http://localhost:3000)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["REACT_APP_API_KEY", "REACT_APP_API_URL", "NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/.env.safe": {
    "summary": "Este arquivo contém variáveis de ambiente essenciais para a configuração de uma aplicação React, definindo chaves e URLs para integração com APIs externas e o ambiente de execução (NODE_ENV). Seu propósito funcional é permitir a parametrização segura e flexível da aplicação, facilitando a troca de endpoints e credenciais sem alterar o código-fonte. Embora não contenha lógica executável, essas variáveis impactam diretamente o comportamento da aplicação em diferentes ambientes, como desenvolvimento, teste e produção, garantindo a correta comunicação com serviços externos e controle do fluxo de execução conforme o ambiente configurado.",
    "properties": [
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["REACT_APP_API_KEY", "REACT_APP_API_URL", "NODE_ENV"]
      }
    ]
  },
  "web/.eslintignore": {
    "summary": "Este arquivo é um conjunto de regras de exclusão para controle de versionamento e build em projetos JavaScript/TypeScript, definindo quais arquivos e pastas devem ser ignorados pelo sistema de controle de versão (como Git) e ferramentas de build. Ele previne a inclusão de diretórios de dependências (node_modules), artefatos de build (dist, build), arquivos de configuração específicos (webpack.config.*), arquivos de cobertura de testes (coverage) e múltiplas variações de arquivos de ambiente (.env e suas variantes). O comportamento principal é garantir que apenas arquivos relevantes e fontes sejam versionados e processados, evitando poluição do repositório e conflitos, além de otimizar processos de build e deploy. Essa configuração é fundamental para manter a integridade do código, acelerar pipelines CI/CD e garantir consistência entre ambientes de desenvolvimento e produção.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto Node.js para aplicação web com build e testes"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento web", "JavaScript/TypeScript", "Node.js ecosystem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não versionar dependências externas",
          "Manter arquivos de ambiente fora do repositório"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript ES6+", "TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Webpack 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular architecture com separação clara entre source e build"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules (dependências)",
          "dist/build (artefatos compilados)",
          "coverage (relatórios de teste)",
          "configurações de ambiente (.env)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Arquivos de configuração webpack.config.*", "Arquivos de ambiente .env*"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação entre código fonte e artefatos gerados"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [".env files"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["node_modules"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          ".env",
          ".env.local",
          ".env.development.local",
          ".env.test.local",
          ".env.production.local"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/.eslintrc.js": {
    "summary": "Este arquivo configura o ESLint para um projeto que utiliza TypeScript e React, definindo regras de linting específicas para garantir a qualidade e consistência do código. Ele habilita ambientes para browser, Node.js e ES2021, utiliza o parser do TypeScript para análise sintática e integra plugins para React e React Hooks, aplicando regras que previnem erros comuns, como uso incorreto de hooks e variáveis não utilizadas. Além disso, o arquivo ignora diretórios e arquivos específicos para otimizar a análise e possui uma configuração de override para arquivos de tipos, desabilitando a regra de variáveis não utilizadas nesses casos. Essa configuração promove boas práticas de desenvolvimento, melhora a manutenção do código e reduz bugs relacionados a padrões React e TypeScript.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Configuração ESLint para projeto React com TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento Frontend", "React", "TypeScript", "Linting"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir qualidade e consistência do código",
          "Prevenir erros em React Hooks",
          "Evitar variáveis não utilizadas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "JavaScript ES2021"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Plugin-based linting configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules/ (dependências)",
          "dist/ (build output)",
          "src/ (código fonte)",
          "overrides para arquivos .types.ts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos .ts e .tsx para código e componentes",
          "Arquivos .types.ts para definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação entre código fonte e build/output",
          "Regras específicas para arquivos de tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "eslint:recommended",
          "plugin:react/recommended",
          "plugin:react-hooks/recommended"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "'react/react-in-jsx-scope': off",
          "'react/prop-types': off",
          "'react-hooks/rules-of-hooks': error",
          "'react-hooks/exhaustive-deps': warn",
          "'no-console': warn",
          "'prefer-const': error",
          "'no-var': error",
          "'no-unused-vars': error com exceção para args iniciados com _"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript parser com regras estritas para variáveis não utilizadas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["eslint ."]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@typescript-eslint/parser", "eslint-plugin-react", "eslint-plugin-react-hooks"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatibilidade com ESLint e React versões recentes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Conformidade com regras React Hooks",
          "Evitar variáveis não utilizadas",
          "Uso preferencial de const"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Desabilitar prop-types em favor de TypeScript",
          "Ignorar arquivos de tipos para regra no-unused-vars"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/components/PrintScreenButton.tsx": {
    "summary": "O componente React PrintScreenButton é responsável por permitir que o usuário capture a tela atual via uma chamada assíncrona a uma API RESTful. Ele gerencia estados internos para controlar o processo de captura, exibindo feedback visual durante a operação, como um spinner de carregamento, mensagens de erro e a imagem capturada em base64. O componente previne múltiplos cliques simultâneos, trata erros de rede e resposta da API, e integra-se com o ambiente React Bootstrap para UI, garantindo uma experiência fluida e responsiva. Essa funcionalidade habilita usuários a obter capturas de tela diretamente na interface, facilitando fluxos que dependem de evidências visuais ou documentação rápida, com tratamento robusto de falhas e feedback claro.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["PrintScreen Capture UI", "Captura de tela via API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Application", "User Interface", "Screen Capture", "API Integration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não permitir múltiplas requisições simultâneas",
          "Exibir feedback claro de erro",
          "Garantir segurança da chave API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x", "React Bootstrap 2.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["API REST /api/v1/screen/print"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture", "Hooks Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - UI components",
          "src/types - TypeScript types",
          "src/api - API integration"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para componentes e funções",
          "PascalCase para componentes React",
          "snake_case para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI components e API types",
          "Isolamento do componente PrintScreenButton"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e componentes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "React Testing Library"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["__tests__ folders próximos aos componentes"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de fetch API com jest-fetch-mock"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key'"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Chave API deve ser mantida secreta e não exposta publicamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagem base64 tratada apenas em memória, não armazenada localmente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["x-api-key header obrigatório"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Comunicação via HTTPS para proteger dados em trânsito"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta da API esperada em menos de 2 segundos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de resposta e experiência do usuário"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Sem cache local da imagem capturada"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Componente isolado, escalável via React"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Mensagens de erro exibidas via Alert com dismissible"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Console.error para erros capturados"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Permite nova tentativa após erro, resetando estado de erro"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["React", "React Bootstrap", "API externa de captura de tela"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["React 18.x", "React Bootstrap 2.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../types/api.types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Melhorar tratamento de erros e feedback", "Gerenciamento seguro da chave API"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível exposição da chave API no front-end"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado no componente isolado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Clareza na UI", "Segurança da chave API"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação via JSDoc para novos componentes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de React Hooks para estado local", "API Key via header para autenticação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL (/api/v1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campo base64 para imagem"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipeline"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["REACT_APP_API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/types/api.types.ts": {
    "summary": "Este arquivo define interfaces TypeScript para padronizar as respostas da API de automação relacionadas à captura de tela. Ele especifica a estrutura dos dados retornados em casos de sucesso, incluindo a imagem capturada e o timestamp, além de um formato unificado para erros, com mensagens e detalhes opcionais. O código facilita o tratamento consistente das respostas da API, permitindo que consumidores do serviço interpretem facilmente o sucesso ou falha das operações, promovendo robustez e clareza na comunicação entre front-end e back-end.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["API de automação para captura de tela"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "API", "Screen Capture"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Respostas da API devem seguir o formato definido para garantir interoperabilidade"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Type-safe API Response Modeling"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/types - definição de tipos e interfaces para API"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para interfaces e tipos", "camelCase para propriedades"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Módulo isolado para tipagem, sem dependências externas"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["success: boolean", "message: string", "error?: string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/install-action-builder-deps.sh": {
    "summary": "Este script Bash automatiza a instalação das dependências essenciais para o projeto ActionBuilder, focado em garantir que os pacotes necessários estejam disponíveis para o desenvolvimento e execução da aplicação. Ele instala bibliotecas de produção como 'nanoid' para geração de IDs únicos e 'react-bootstrap-icons' para ícones na interface, além de tipos TypeScript para suporte ao desenvolvimento tipado. O script promove uma configuração rápida e padronizada do ambiente, reduzindo erros manuais e facilitando a integração contínua, ao mesmo tempo que orienta o usuário sobre os próximos passos para iniciar o servidor de desenvolvimento.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["ActionBuilder - ferramenta para criação e gerenciamento de ações interativas"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Interface de usuário", "Gerenciamento de ações"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Setup inicial / desenvolvimento"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir IDs únicos para ações",
          "Manter integridade visual com ícones consistentes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript (versão não especificada)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React (implícito pelo uso de react-bootstrap-icons)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Não aplicável (script de setup)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Não especificado no script"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Não especificado no script"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Não aplicável"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários inline simples"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript com tipos instalados para nanoid"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["./install_dependencies.sh"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Não especificado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Não aplicável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não implementado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Mensagens simples no console"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não aplicável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não implementado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["nanoid", "react-bootstrap-icons"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Não especificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Não aplicável"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de controle de versões explícito"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum identificado no script"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Não aplicável"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Não especificado"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários simples inline"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Informativo e direto no console"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de npm para gerenciamento de pacotes"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Não especificado"]
      }
    ]
  },
  "web/src/components/ActionBuilder.tsx": {
    "summary": "O componente ActionBuilder é uma ferramenta React para construção dinâmica de sequências de automação, permitindo que usuários adicionem, atualizem e removam ações de mouse e teclado. Utiliza um reducer para gerenciar o estado das ações, garantindo controle eficiente e previsível das operações, além de notificar componentes pais sobre mudanças via callback. O componente também impõe um limite máximo configurável de ações, exibindo alertas quando esse limite é atingido, e integra formulários e tabelas para facilitar a interação do usuário com a lista de ações, promovendo uma experiência fluida e controlada na criação de fluxos automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation Action Builder", "Construtor de sequências de automação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de interface",
          "Automação de testes",
          "Automação de tarefas repetitivas"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Limite máximo de ações não pode ser ultrapassado",
          "IDs das ações devem ser únicos",
          "Notificação de mudanças deve ocorrer sempre que o estado mudar"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x", "React-Bootstrap 2.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["nanoid (ID generation)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Reducer pattern", "Component-based architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "components/: UI components",
          "types/: TypeScript type definitions",
          "utils/: utility functions"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "UPPER_SNAKE_CASE para constantes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre UI (ActionForm, ActionTable) e lógica de estado (reducer)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e componentes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "React Testing Library"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit", "tests/integration"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% coverage"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de funções callback e hooks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Performance para manipulação de listas de ações",
          "Memória otimizada para até 100 ações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Limitação de número máximo de ações para evitar degradação"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["react", "nanoid", "react-bootstrap"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./ActionForm", "./ActionTable", "../types/automation-builder.types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na manipulação do estado",
          "Uso correto de hooks",
          "Manutenção da imutabilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para funções e componentes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e em português", "PRs com descrição clara"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do reducer para estado complexo",
          "Limite máximo de ações para controle de performance"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/components/ActionTable.tsx": {
    "summary": "Este componente React denominado ActionTable é responsável por exibir e gerenciar uma lista de ações de automação, especificamente ações de mouse e teclado, permitindo ao usuário visualizar, formatar e remover essas ações de forma interativa. Ele transforma dados complexos de ações em descrições legíveis, exibindo detalhes relevantes e possibilitando a remoção individual ou a limpeza total da lista. A tabela utiliza componentes do React-Bootstrap para renderização responsiva e estilizada, integrando-se a um sistema maior de automação que manipula eventos de input para controle programático de dispositivos de entrada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Builder",
          "Gerenciamento de ações de automação para dispositivos de entrada"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de interface", "Input device automation", "Mouse e Keyboard actions"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade das ações de automação",
          "Remoção correta e segura das ações",
          "Exibição precisa das ações configuradas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x", "React-Bootstrap 2.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture", "Presentational and Container Components"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - componentes React",
          "src/types - definições de tipos TypeScript",
          "src/utils - funções auxiliares"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para componentes e funções",
          "PascalCase para tipos e interfaces",
          "snake_case para arquivos não React"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, componentes e utilitários",
          "Dependência unidirecional de tipos para componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para React/TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e componentes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "React Testing Library"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/components", "tests/integration"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de props e funções callback"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Responsividade UI", "Baixa latência na renderização"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Renderização eficiente para listas médias de ações"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["react", "react-bootstrap", "typescript"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["React >=18.0.0", "TypeScript >=4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../types/automation-builder.types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de tratamento de erros explícito",
          "Possível complexidade crescente na formatação de ações"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza na formatação de ações", "Manutenção da separação de responsabilidades"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para funções e componentes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de React-Bootstrap para UI", "Separação de formatação em funções auxiliares"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/components/AutomationPanel.tsx": {
    "summary": "O componente AutomationPanel é um painel React que integra funcionalidades de captura de tela e construção de ações automatizadas, permitindo ao usuário alternar entre uma visualização compacta e uma expandida com um construtor de ações. Ele gerencia o estado local para exibir ou ocultar o ActionBuilder, facilitando a criação e modificação de uma lista de ações automatizadas, com suporte para notificar mudanças via callback. Essa combinação modular permite substituir diretamente o PrintScreenButton, agregando valor ao fluxo de automação com uma interface intuitiva e responsiva, adequada para aplicações que demandam captura e manipulação de ações automatizadas em um ambiente web.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["AutomationPanel", "Painel de automação para captura e construção de ações"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "UI Web", "Captura de tela", "Construção de ações"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter integridade das ações automatizadas",
          "Garantir responsividade do painel",
          "Notificar corretamente alterações via callback"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "React 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.x", "React-Bootstrap 2.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture", "Callback Pattern", "Conditional Rendering"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "components/: componentes React reutilizáveis",
          "types/: definições de tipos TypeScript",
          "styles/: arquivos CSS/SCSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes",
          "camelCase para funções e variáveis",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI (PrintScreenButton, ActionBuilder) e lógica de estado (AutomationPanel)",
          "Tipos centralizados em pasta types"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript",
          "Proibição de any explícito",
          "Regras para hooks"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão", "Quebra de linha em 80-100 caracteres"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para componentes e funções públicas"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Interfaces para props e tipos de dados"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "React Testing Library"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/components", "tests/integration"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura de componentes"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert", "Snapshot Testing para UI"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de callbacks", "Mock de componentes filhos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Responsividade UI", "Renderização condicional para otimização"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["react", "react-bootstrap", "PrintScreenButton", "ActionBuilder"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["React >=18.0.0", "React-Bootstrap >=2.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./PrintScreenButton", "./ActionBuilder", "../types/automation-builder.types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza na gestão de estado", "Uso correto de hooks", "Consistência na UI"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para componentes e props"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e em português", "PRs pequenos e focados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de React Functional Components com hooks",
          "Separação clara entre captura de tela e construção de ações"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipelines"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/components/index.ts": {
    "summary": "Este arquivo atua como um ponto central de exportação para componentes React relacionados a funcionalidades de automação e captura de tela. Ele organiza e disponibiliza componentes modulares como PrintScreenButton, ActionBuilder, ActionForm, ActionTable e AutomationPanel, facilitando a reutilização e integração desses elementos em outras partes do sistema. O comportamento principal é estruturar a interface de automação, permitindo que usuários construam, visualizem e gerenciem ações automatizadas, promovendo maior eficiência operacional e padronização na manipulação de fluxos automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation UI Components Library"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de processos", "Interface de usuário", "React Components"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Integridade dos dados de ações automatizadas", "Consistência na captura de tela"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.2"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture", "Module Index Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Cada componente reside em sua própria pasta com arquivos de implementação e testes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para componentes React", "camelCase para funções e variáveis"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulos isolados por funcionalidade, exportados via arquivo index para centralização"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados na pasta __tests__ dentro de cada componente"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks com Jest e fixtures para dados de entrada"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["React 18.2", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Componentes locais importados via paths relativos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de nomenclatura", "Cobertura de testes", "Clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para todos os componentes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e claros, foco em comportamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do padrão de indexação para centralizar exports"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/pages/AutomationPage.tsx": {
    "summary": "Este arquivo implementa uma página React para automação de interface, combinando captura de tela e construção de sequências de ações automatizadas. O componente principal gerencia um estado local de ações que podem ser criadas, salvas, exportadas e executadas sequencialmente, simulando a interação com uma API para execução. A interface é dividida em seções para captura de tela, construção de ações e controle da execução, oferecendo feedback visual e controle de estado para evitar execuções concorrentes. A funcionalidade permite ao usuário montar fluxos de automação com ações de mouse e teclado, salvar rascunhos localmente, exportar para JSON e executar as ações em ordem, facilitando testes e automações de interface de forma interativa e modular.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation Interface Builder"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de Interface", "UI Automation", "Automação de Testes"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento Inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução sequencial das ações",
          "Persistência segura dos rascunhos",
          "Prevenção de execução concorrente"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "React 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.2", "React-Bootstrap 2.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Nenhum banco de dados persistente (uso localStorage)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["API de execução de ações (a implementar)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture", "Hooks Pattern", "Separation of Concerns"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "components/ - componentes reutilizáveis",
          "types/ - definições de tipos TypeScript",
          "pages/ - páginas da aplicação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "UpperCamelCase para tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI (components) e tipos (types)",
          "Página principal orquestra componentes e estado"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para React/TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e componentes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com tipagem explícita para estados e props"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "React Testing Library"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos componentes"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80% para componentes críticos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de APIs e timers com Jest"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não implementado no código atual"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável no escopo atual"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Dados de ações armazenados localmente sem criptografia"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não especificado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não implementado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Execução das ações simulada com delay de 500ms por ação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Responsividade da UI e prevenção de execuções concorrentes"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Uso de localStorage para persistência local"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Limite máximo de 50 ações para evitar sobrecarga"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Uso de alert e console.error para feedback de erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs no console para execução e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reset do estado isExecuting após erro"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "React-Bootstrap",
          "Componentes internos PrintScreenButton e ActionBuilder"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["React 18.x", "React-Bootstrap 2.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../components", "../types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Execução de ações via API ainda não implementada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Uso de alert para notificações pode ser melhorado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Execução sequencial com delay pode impactar performance em grandes listas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza na gestão de estado e tratamento de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para novos componentes e funções"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Separação clara entre UI e lógica de execução",
          "Uso de localStorage para persistência temporária"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST (planejado)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não implementado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para exportação de ações"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker (provável) ou deployment estático via CDN"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum utilizado no código atual"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Aplicação client-side com dependência mínima de backend"]
      }
    ]
  },
  "web/src/pages/HomePage.tsx": {
    "summary": "Este arquivo React implementa a HomePage de uma aplicação web focada em automação desktop utilizando a biblioteca NutJS. A página apresenta uma interface visual clara e responsiva, exibindo funcionalidades principais como controle do mouse, controle do teclado e captura de tela, além de permitir navegação para uma seção de automação. O componente integra elementos visuais do React-Bootstrap para layout e estilização, e utiliza React Router para navegação interna, promovendo uma experiência de usuário fluida e intuitiva. A presença de componentes reutilizáveis como Header e PrintScreenButton indica uma arquitetura modular, facilitando manutenção e extensibilidade do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automação Desktop NutJS", "Interface Web para controle e captura"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação Desktop", "Automação de UI", "Controle de Mouse e Teclado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Interface inicial funcional"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Navegação segura entre páginas",
          "Apresentação clara das funcionalidades",
          "Modularidade para extensibilidade"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x", "React 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.2", "React-Bootstrap 2.x", "React Router 6.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Component-Based Architecture", "Hook Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "components: UI reutilizáveis",
          "styles: arquivos CSS",
          "pages: telas da aplicação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "kebab-case para arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre componentes UI e lógica de navegação",
          "Importação explícita de componentes e estilos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para React e TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para componentes e funções"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "React Testing Library"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ ou junto aos componentes"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para navegação e componentes externos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm start"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Responsividade UI", "Baixa latência na navegação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["react", "react-bootstrap", "react-router-dom"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["React 18.x", "React Router 6.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../components/Header", "../components/PrintScreenButton"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza e modularidade", "Uso correto de hooks", "Consistência visual"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara em JSDoc para componentes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e informativos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de React-Bootstrap para UI", "Uso de React Router para navegação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "web/src/types/automation-builder.types.ts": {
    "summary": "Este arquivo define tipos TypeScript e estruturas para o componente ActionBuilder, que permite a construção e manipulação de sequências de automação de ações de mouse e teclado. Ele especifica enums para diferentes tipos de ações (como mover, clicar, arrastar, rolar para mouse e digitar, pressionar, combinação para teclado), além de payloads detalhados para cada ação, incluindo parâmetros como coordenadas, botões, modos de digitação e duração. O código também estabelece restrições e constantes para validação, como limites de texto, duração e quantidade de teclas em combinações, garantindo robustez e controle sobre as ações automatizadas. Além disso, define interfaces para o estado do formulário e ações do reducer, facilitando a gestão do estado e atualização das sequências de automação. Essa estrutura modular e tipada habilita a criação de fluxos complexos de interação com dispositivos de entrada, suportando integração com componentes React e possibilitando extensibilidade e manutenção eficiente.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["ActionBuilder - Automação de ações de mouse e teclado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de interface",
          "Automação de testes",
          "Interação com dispositivos de entrada"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Respeitar limites de duração e quantidade de teclas em combinações",
          "Garantir que ações de digitação não excedam 10.000 caracteres",
          "Manter integridade das coordenadas e parâmetros de movimento"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["React 18.2"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Reducer Pattern", "Discriminated Union Types"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "types/ - definições de tipos e enums",
          "components/ - componentes React como ActionBuilder",
          "reducers/ - lógica de estado para ações"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Enums em PascalCase",
          "Interfaces prefixadas com I ou nome descritivo",
          "Constantes em UPPER_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, constantes e lógica de estado",
          "Interfaces e tipos exportados para uso em componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript e React"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de tipos e reducers"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para payloads e ações"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre performance e precisão na execução das ações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Validação de restrições",
          "Clareza na modelagem de ações"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para tipos e interfaces"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de enums para garantir valores válidos",
          "Separação clara entre payloads de mouse e teclado"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "scripts/download-tessdata.js": {
    "summary": "Este script Node.js automatiza o download dos arquivos de linguagem treinados do Tesseract OCR, especificamente para os idiomas inglês (eng) e português (por). Ele verifica a existência prévia dos arquivos no diretório local 'tessdata' e, caso não existam, realiza o download via HTTPS, exibindo progresso em tempo real e garantindo a integridade dos arquivos baixados. O script lida com erros de rede e falhas de escrita, removendo arquivos parciais para evitar inconsistências. Sua funcionalidade principal é garantir que os dados de treinamento necessários para o OCR estejam disponíveis localmente, facilitando a integração do Tesseract em aplicações que dependem de reconhecimento óptico de caracteres. A abordagem assíncrona e o controle de fluxo sequencial asseguram que todos os arquivos sejam baixados com sucesso antes da conclusão do processo.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Tesseract Language Data Downloader",
          "Automatiza download de arquivos de linguagem para OCR"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["OCR", "Reconhecimento óptico de caracteres", "Processamento de imagens"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Automação de setup"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Arquivos de linguagem devem estar presentes antes da execução do OCR",
          "Downloads incompletos devem ser removidos para evitar corrupção"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 16+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework externo"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["CDN jsDelivr para hospedagem dos arquivos treinados do Tesseract"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Script utilitário com padrão procedural assíncrono"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Diretório raiz contendo script",
          "Subdiretório 'tessdata' para armazenar arquivos de linguagem"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Constantes em maiúsculas com underscore",
          "Funções camelCase",
          "Arquivos com extensão .js"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Módulo único script de utilitário, sem divisão modular explícita"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["JavaScript padrão, sem guia explícito declarado"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários JSDoc para funções principais"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Nenhum type checking estático (JavaScript puro)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node download-languages.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Robustez do download e integridade dos arquivos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Evita downloads redundantes verificando existência local"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Mensagens de erro simples no console"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de progresso e erros via console"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Remoção de arquivos parciais em caso de falha"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Node.js core modules https, fs, path"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js versão 16 ou superior recomendada"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Erro de digitação em 'new promise' que deve ser corrigido para 'new Promise'"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Ausência de retry automático em falhas de download"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento correto de erros",
          "Verificação de existência de arquivos antes do download"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários JSDoc para funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários em português com termos técnicos em inglês"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de download sequencial para controle de fluxo e simplicidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/ocr-request.dto.ts": {
    "summary": "Este arquivo implementa Data Transfer Objects (DTOs) e schemas de validação para requisições OCR (Optical Character Recognition) utilizando a biblioteca Zod para garantir a integridade dos dados de entrada. Ele suporta tanto requisições individuais quanto em lote, validando imagens em base64 com restrições de formato e tamanho, além de configurações opcionais para processamento, como idiomas, modo de OCR, segmentação de página e timeout. As classes fornecem métodos para extrair buffers de imagem e tipos MIME, além de facilitar a criação de instâncias validadas a partir de dados brutos. O código encapsula a lógica de validação e transformação, promovendo segurança e consistência na manipulação de dados OCR, e inclui helpers para validação auxiliar, como verificação de formato e cálculo de tamanho da imagem. Essa estrutura modular e fortemente tipada habilita integrações confiáveis com serviços OCR, garantindo conformidade com regras de negócio e limites técnicos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "OCR Service",
          "Data validation and processing for Optical Character Recognition requests"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "OCR", "Image Processing", "Machine Learning"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Stable validation and DTO layer"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Images must be base64 encoded with valid data URI prefix",
          "Image size must not exceed 14MB encoded (approx. 10MB raw)",
          "Batch requests limited to max 10 images",
          "Config parameters must respect defined enums and ranges"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x (validation library)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OCR processing backend (implied integration)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "DTO (Data Transfer Object)",
          "Schema Validation",
          "Factory Method (static fromRawData)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "types/ - Type definitions",
          "dto/ - Data Transfer Objects and validation schemas",
          "helpers/ - Validation helpers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase for classes (OcrRequest, OcrBatchRequest)",
          "camelCase for methods and variables",
          "snake_case avoided",
          "Constants in UPPER_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "DTOs encapsulate validation and data transformation",
          "Helpers provide utility functions",
          "Types imported from centralized type definitions"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint recommended rules"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint with strict type checking and no unused vars"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier with default settings"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript typing with zod schema inference"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/dto/ - unit tests for DTOs and validation"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">90% coverage on validation and DTO logic"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock base64 image strings and config objects"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory, CI checks required"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting, Testing, Build, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Base64 encoded images treated as sensitive data, validated for size and format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balance between validation strictness and processing speed"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Batch processing limited to 10 images to control load"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Zod validation errors with descriptive messages"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod 3.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../types/ocr.types.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validation correctness", "Type safety", "Error message clarity"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc comments for all public methods and classes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Concise, technical, objective"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Use of Zod for runtime validation", "Separation of DTOs and helpers"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST (implied)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/image-preprocessor.service.ts": {
    "summary": "O código implementa um serviço especializado em pré-processamento de imagens para OCR, utilizando a biblioteca Sharp para otimização e melhoria da qualidade das imagens antes do reconhecimento de texto. Ele oferece métodos para redimensionamento, conversão para escala de cinza, ajuste de contraste, redução de ruído, aguçamento e binarização, além de um pré-processamento adaptativo que analisa características da imagem para aplicar correções específicas como gamma correction e CLAHE. Também inclui funcionalidades para validação de imagens, extração de metadados e divisão de imagens grandes em chunks para processamento paralelo, garantindo maior eficiência e precisão no pipeline de OCR. O serviço é projetado para ser injetável e integrado em sistemas maiores, com logging detalhado para monitoramento e tratamento robusto de erros.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Image OCR Preprocessing Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Document Processing", "OCR", "Image Processing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir qualidade da imagem para OCR",
          "Manter integridade dos dados de imagem",
          "Não perder dados durante pré-processamento"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x", "Sharp 0.32.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Logging service (custom logger)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Service Layer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - configurações gerais",
          "src/services - serviços de negócio",
          "src/types - definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "Arquivos em kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre serviços, tipos e configuração",
          "Dependências injetadas via tsyringe"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript estrito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Tests localizados em __tests__ ao lado dos serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de buffers e dependências externas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Buffers de imagem devem ser tratados com cuidado para evitar vazamento"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Processamento otimizado para imagens até 1000px de largura"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade e qualidade da imagem"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Divisão de imagens em chunks para processamento paralelo"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados com mensagens claras e logados"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs em níveis debug e error para monitoramento"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Logger customizado integrado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções com mensagens específicas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Sharp", "tsyringe", "logger"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Sharp 0.32.x", "tsyringe 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../types/ocr.types.js", "../../config/logger.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na manipulação de buffers",
          "Tratamento de erros",
          "Uso correto de async/await"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação via JSDoc para todos os métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Sharp para processamento de imagem",
          "Injeção de dependência via tsyringe"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/ocr-worker-pool.service.ts": {
    "summary": "O código implementa um pool de workers para processamento OCR paralelo utilizando a biblioteca Tesseract.js, com foco em otimização de performance e escalabilidade. Ele gerencia a criação, reciclagem e configuração dinâmica dos workers, além de coletar métricas detalhadas de desempenho e sucesso dos jobs. A solução suporta processamento em lote, controle de modos operacionais (fast, balanced, accurate) e garante a integridade dos dados de linguagem, promovendo alta disponibilidade e resiliência no reconhecimento de texto em imagens.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["OCR Worker Pool", "Processamento paralelo de OCR com Tesseract.js"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Processamento de Imagens",
          "Reconhecimento Óptico de Caracteres",
          "OCR",
          "Automação de Documentos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Reciclagem periódica dos workers para evitar vazamento de memória",
          "Garantir disponibilidade dos dados de linguagem para OCR",
          "Manter alta taxa de sucesso no reconhecimento"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tesseract.js 4.x", "tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Tessdata CDN (https://tessdata.projectnaptha.com)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Resource Pooling", "Scheduler Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do sistema",
          "types/ - definições de tipos TypeScript",
          "services/ - lógica de negócio e workers",
          "utils/ - utilitários e helpers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "snake_case para arquivos de configuração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração, tipos, e lógica de negócio",
          "Dependência unidirecional para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão", "Quebra de linha em 80-100 caracteres"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e privados"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Tipos explícitos para funções assíncronas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pasta tests",
          "Testes unitários para métodos públicos e privados"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de workers e scheduler", "Fixtures para imagens de teste"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes", "Lint", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (módulo OCR interno)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagens processadas devem ser tratadas com confidencialidade"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Dados em trânsito devem usar TLS", "Cache local pode ser criptografado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Processamento OCR em milissegundos a segundos, dependendo do tamanho da imagem"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Balancear velocidade e precisão via modos configuráveis",
          "Reciclagem para evitar degradação de performance"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache local para dados de linguagem com método readOnly"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Número configurável de workers para escalar processamento paralelo"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados com mensagens claras",
          "Retorno de erros em batch com objeto { error: mensagem }"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs estruturados com níveis info, warn, debug e error",
          "Logs de progresso detalhados para OCR"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Logger customizado integrado ao sistema"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Reciclagem automática dos workers após limite de jobs",
          "Tratamento de falhas na inicialização com fallback"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tesseract.js", "tsyringe", "ocrConfig", "logger"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatibilidade com tesseract.js 4.x", "Node.js 18 ou superior"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../config/logger.js",
          "../../config/ocr.config.js",
          "../../types/ocr.types.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de testes mais abrangentes para reciclagem de workers"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falha se dados de linguagem não estiverem disponíveis no cache"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Limite de jobs por worker pode impactar throughput se mal configurado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de tratamento de erros",
          "Consistência na configuração dos workers",
          "Cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos e privados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos, sem redundância"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do tesseract.js para OCR",
          "Uso de pool e scheduler para paralelismo",
          "Reciclagem preventiva para estabilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (módulo interno)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com dados OCR ou objeto de erro"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["OCR_WORKER_COUNT", "OCR_JOBS_PER_WORKER", "OCR_LANG_PATH", "OCR_CACHE_PATH"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação de memória para múltiplos workers",
          "Necessidade de acesso à internet para download de dados de linguagem"
        ]
      }
    ]
  },
  "src/application/services/ocr.service.ts": {
    "summary": "O código implementa um serviço OCR (Optical Character Recognition) robusto e escalável, responsável por orquestrar o pré-processamento de imagens e o reconhecimento de texto utilizando uma pool de workers. Ele gerencia o cache de resultados para otimizar desempenho, valida imagens, aplica pré-processamento adaptativo e executa o OCR com controle de timeout, garantindo respostas rápidas e confiáveis. Além disso, suporta processamento em lote, coleta métricas operacionais e oferece métodos para inicialização, verificação de prontidão e finalização do serviço, integrando-se de forma modular com outros componentes do sistema para fornecer extração de texto precisa e eficiente em aplicações que demandam reconhecimento óptico de caracteres.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "OCR Service",
          "Serviço de Reconhecimento Óptico de Caracteres para extração de texto em imagens"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "OCR", "Processamento de Imagem", "Reconhecimento de Texto"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não processar imagens acima do limite de tamanho configurado",
          "Garantir resposta dentro do timeout configurado",
          "Manter integridade e validade dos dados de texto extraído"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Tesseract OCR via OcrWorkerPool", "Logger interno customizado"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Service Layer", "LRU Cache"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - Configurações do sistema",
          "services/ - Serviços de negócio (OCR, pré-processamento)",
          "types/ - Definições de tipos e interfaces",
          "utils/ - Utilitários e helpers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para funções e variáveis",
          "Sufixo Service para classes de serviço"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre pré-processamento, reconhecimento OCR e cache",
          "Dependências injetadas via DI para facilitar testes e manutenção"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo regras de segurança e performance"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com tipagem explícita para respostas e erros"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ dentro de cada módulo de serviço"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80% para serviços críticos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then para testes unitários e integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de dependências via tsyringe e jest.mock para simular workers e pré-processador"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um desenvolvedor",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente no serviço OCR"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso deve ser aplicado em camada superior"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagens base64 e resultados OCR devem ser tratados com confidencialidade"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável diretamente no serviço OCR"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Hash SHA-256 para chave de cache",
          "Recomenda-se criptografia em trânsito e repouso em camadas superiores"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout configurável por modo, padrão entre 5 a 30 segundos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de processamento e uso de memória via cache LRU"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache LRU com TTL configurável para evitar reprocessamento de imagens idênticas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Pool de workers para paralelismo e processamento em lote"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto com código, mensagem e statusCode para erros específicos"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logger customizado com níveis info, warn, debug e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código, presumivelmente integrado externamente"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reinicialização da pool e limpeza de cache em falhas críticas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["OcrWorkerPool", "ImagePreprocessor", "ocrConfig", "logger"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "Node.js >=18"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../config/logger.js",
          "../../config/ocr.config.js",
          "./image-preprocessor.service.js",
          "./ocr-worker-pool.service.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Gerenciamento manual do cache pode ser melhorado com bibliotecas especializadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Timeouts podem causar falhas em imagens complexas",
          "Dependência de formatos válidos de imagem"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Processamento OCR é custoso e depende da capacidade da pool de workers"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento detectada"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Performance do cache",
          "Clareza na tipagem e documentação"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para todos os métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e em português para contexto, termos técnicos em inglês"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de cache LRU para otimização",
          "Injeção de dependência para facilitar testes e modularidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não exposto diretamente, presumivelmente REST ou RPC no nível superior"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não especificado no código"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos success, text, confidence, words, lines, processingTime"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado diretamente no serviço OCR"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containerizado, orquestrado externamente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["ocrConfig.cacheTtl", "ocrConfig.maxImageSizeMb", "ocrConfig.defaultMode"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limite de memória e CPU para pool de workers",
          "Limite de tamanho máximo para imagens processadas"
        ]
      }
    ]
  },
  "src/config/ocr.config.ts": {
    "summary": "Este arquivo de configuração define parâmetros essenciais para o serviço OCR (Optical Character Recognition), carregando valores a partir de variáveis de ambiente com fallback para padrões seguros. Ele estrutura as configurações de processamento, incluindo limites de tamanho de imagem, timeout, número de workers para processamento paralelo, cache, linguagens suportadas e parâmetros de pré-processamento de imagem. Além disso, implementa validações rigorosas para garantir que as configurações estejam dentro de limites aceitáveis, prevenindo falhas em produção. O módulo também oferece uma função utilitária para obter configurações específicas de modo (fast, balanced, accurate), facilitando ajustes dinâmicos do comportamento do OCR conforme necessidades de desempenho e precisão. A integração com o ambiente de execução e a validação em tempo de inicialização reforçam a robustez e confiabilidade do sistema OCR dentro de um contexto maior de processamento de imagens e reconhecimento de texto.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["OCR Service Configuration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "OCR", "Image Processing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "maxImageSizeMb between 1 and 50",
          "maxProcessingMs between 1000 and 300000",
          "workerCount between 1 and 8",
          "cacheTtl non-negative",
          "at least one supported language configured",
          "preprocessing.targetWidth between 100 and 4000",
          "preprocessing.threshold between 0 and 255"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Function", "Configuration Validation Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte principal",
          "src/config/: configurações do sistema",
          "src/utils/: funções utilitárias",
          "src/environment.js: configuração de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para interfaces e tipos",
          "const para constantes",
          "snake_case para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada em módulo próprio",
          "Dependência apenas de módulos Node.js e ambiente local",
          "Exportação clara de configuração e validação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint config padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["maxProcessingMs between 1000 and 300000 ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["balance between speed and accuracy via defaultMode"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["cacheTtl configurable, 0 disables cache"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["workerCount limited by CPU cores and max 8"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Throws Error com mensagens claras para configuração inválida"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["console.error para erros críticos na inicialização"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["process.exit(1) em caso de configuração inválida em produção"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["environment.js", "Node.js core modules (path, os)"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./environment.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "OCR_MAX_IMAGE_SIZE_MB",
          "OCR_TIMEOUT_MS",
          "OCR_WORKERS",
          "OCR_CACHE_TTL",
          "OCR_LANGUAGES",
          "OCR_LANG_PATH",
          "OCR_CACHE_PATH",
          "OCR_JOBS_PER_WORKER",
          "OCR_PREPROCESSING",
          "OCR_DEFAULT_MODE",
          "OCR_ENABLE_METRICS"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/controllers/ocr.controller.ts": {
    "summary": "Este arquivo implementa um controller REST para operações de OCR (Optical Character Recognition) utilizando o framework Fastify e injeção de dependências via tsyringe. Ele expõe endpoints para processar imagens em base64 individualmente ou em lote, além de fornecer métricas do serviço, limpeza de cache e health check. O controller gerencia autenticação, validação de dados via schemas, tratamento detalhado de erros específicos do domínio OCR e logging estruturado, garantindo robustez e observabilidade no processamento de reconhecimento de texto em imagens. A arquitetura segue princípios de Clean Architecture, separando responsabilidades entre controller, serviços e DTOs, facilitando manutenção e escalabilidade do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "OCR Service",
          "Serviço de reconhecimento óptico de caracteres para extração de texto em imagens"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "OCR", "Reconhecimento de texto", "Fastify", "API REST"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação obrigatória para acesso aos endpoints",
          "Limite máximo de tamanho para imagens processadas",
          "Processamento em lote limitado a 10 imagens simultâneas",
          "Tratamento e resposta adequada para erros específicos do OCR",
          "Manutenção da integridade e disponibilidade do cache"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "OCR processing service (interno)",
          "Logging service",
          "Authentication middleware"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Dependency Injection", "MVC (Controller)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/ - lógica de negócio e serviços",
          "application/dto/ - objetos de transferência de dados",
          "config/ - configurações gerais e logger",
          "types/ - definições de tipos e enums",
          "middleware/ - middlewares para autenticação e tratamento de erros",
          "schemas/ - validação de dados via Zod ou similar",
          "controllers/ - definição dos endpoints REST"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase (ex: OcrController, OcrService)",
          "Métodos em camelCase",
          "Arquivos com extensão .ts e nomes kebab-case",
          "DTOs com sufixo Request ou Response"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controller, serviço e DTO",
          "Dependência injetada via tsyringe para facilitar testes e desacoplamento",
          "Middleware isolado para autenticação e tratamento de erros"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo regras para async/await e imports"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de classes e métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com uso de tipos explícitos e DTOs para validação"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ ou pasta tests, organizados por módulo"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80% para lógica crítica"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Given-When-Then para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços externos e injeção de dependências para isolamento"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Token-based Authentication (middleware customizado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Acesso restrito a usuários autenticados para todos endpoints OCR"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagens base64 e resultados OCR tratados com confidencialidade"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Headers padrão de segurança HTTP configurados no servidor Fastify"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Transporte via HTTPS obrigatório para proteger dados em trânsito"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Processamento OCR deve ser rápido, com timeout configurado para evitar bloqueios"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de processamento e uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache de resultados OCR com endpoint para limpeza manual"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Processamento em lote com limite de 10 imagens para evitar sobrecarga"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error, code e detalhes opcionais"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis info, debug e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Logger customizado, possível integração com sistemas externos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento específico para erros conhecidos e fallback para erro genérico"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "tsyringe", "OCR Service interno", "Zod para validação"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "Fastify 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "application/dto", "middleware", "schemas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de melhorar tratamento de erros para casos extremos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Limite rígido de tamanho de imagem pode causar rejeição frequente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Processamento OCR pode ser custoso em imagens grandes ou lotes extensos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Projeto está em produção, sem migrações ativas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tratamento de erros, cobertura de testes e padrões de injeção"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para APIs e serviços"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e PRs com descrição clara do propósito"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Clean Architecture e injeção de dependências para modularidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful API"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito no path, versionamento via headers ou futura implementação"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com estrutura padronizada para sucesso e erro"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não implementado diretamente neste controller, pode ser aplicado via middleware externo"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containerizado, orquestração via Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["OCR_SERVICE_API_KEY", "LOG_LEVEL", "NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória para evitar out of memory no processamento OCR"]
      }
    ]
  },
  "src/interface/schemas/ocr.schemas.ts": {
    "summary": "Este arquivo define schemas JSON compatíveis com o Draft 7 para validação de requisições e respostas relacionadas a um serviço OCR (Optical Character Recognition) implementado com Fastify. Ele cobre múltiplos cenários, incluindo requisições individuais e em lote com imagens em base64, configurações detalhadas para controle de idiomas, modos de processamento e segmentação de página, além de schemas para respostas de sucesso, erro, métricas do serviço e limpeza de cache. O comportamento central do código é garantir a integridade e conformidade dos dados trocados entre cliente e servidor, facilitando a interoperabilidade e robustez do sistema OCR. A estrutura modular e detalhada dos schemas permite validação rigorosa, controle de erros e monitoramento do desempenho, habilitando um serviço confiável e configurável para extração de texto de imagens em múltiplos idiomas e formatos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["OCR Service with Fastify JSON Schema Validation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "OCR", "Document Processing", "Fastify API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Input images must be base64 encoded with valid data URI prefix",
          "OCR processing must respect configured languages and modes",
          "Timeouts must be enforced to avoid resource exhaustion",
          "Error responses must follow defined schema with specific error codes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Tesseract OCR Engine", "Base64 Image Encoding"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Modular API Design"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "schemas/ - JSON Schema definitions",
          "routes/ - API route handlers",
          "services/ - OCR processing logic"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase for variables and properties",
          "PascalCase for types and constants",
          "prefix 'ocr' for OCR related schemas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separation between validation schemas and business logic",
          "Clear API contract via JSON Schema"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint with TypeScript plugin"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier with default settings"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/schemas/ - unit tests for schema validation"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">90% coverage on validation schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock base64 images and OCR responses"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review and passing CI checks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Testing", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Role-based access control for OCR endpoints"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Base64 images treated as sensitive, encrypted in transit"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Security-Policy", "X-Content-Type-Options", "Strict-Transport-Security"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["TLS for all network communication"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout configurable between 1000ms and 60000ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balance between speed and accuracy configurable"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache size tracked, cache clearing endpoint available"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Batch processing up to 10 images per request"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Standardized error response with success=false, error message and code"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Error codes logged with details for diagnostics"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Integration with metrics endpoint for uptime and job stats"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Timeouts and aborts handled gracefully with specific error codes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Tesseract OCR", "Fastify", "JSON Schema Draft 7"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["JSON Schema Draft 7 compliance required"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Schemas isolated in dedicated module"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Expand support for additional image formats and languages"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Large base64 images may impact memory usage"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["OCR processing time varies with image complexity and mode"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Stable in production, ongoing improvements planned"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Schema correctness", "Type safety", "Error handling"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc comments for all schemas and properties"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Clear, concise comments in Portuguese with technical terms in English"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoption of JSON Schema Draft 7 for validation consistency"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Implicit versioning via endpoint paths"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON with defined schema"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Not defined in schema, assumed external"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containerized deployment"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["OCR_TIMEOUT_DEFAULT", "OCR_CACHE_SIZE_LIMIT"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Memory limits due to large base64 image processing"]
      }
    ]
  },
  "src/types/ocr.types.ts": {
    "summary": "Este arquivo define um conjunto abrangente de tipos TypeScript para suportar funcionalidades de OCR (Optical Character Recognition), estruturando dados desde a detecção de palavras até blocos de texto completos em imagens. Ele modela caixas delimitadoras, níveis hierárquicos de texto (palavras, linhas, parágrafos, blocos) e respostas detalhadas do serviço OCR, incluindo métricas de performance e tratamento de erros específicos. Além disso, contempla configurações de pré-processamento de imagens e parâmetros de processamento OCR, permitindo flexibilidade na adaptação a diferentes idiomas, modos e condições de execução. O código é focado em garantir precisão na extração textual, organização clara dos dados reconhecidos e robustez na gestão de falhas, facilitando a integração com sistemas maiores que demandam análise e manipulação de texto extraído de imagens.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["OCR Processing Module - Reconhecimento e estruturação de texto em imagens"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "OCR", "Image Processing", "Text Recognition"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão mínima de reconhecimento",
          "Tratamento robusto de erros",
          "Suporte multilíngue configurável"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OCR Engines (ex: Tesseract, Google Vision API)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Composite Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definições de tipos",
          "src/config - configurações OCR",
          "src/errors - definições de erros"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para interfaces e enums", "camelCase para propriedades e variáveis"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre tipos, configurações, respostas e erros"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["@typescript-eslint/no-explicit-any", "strict typing enforced"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de tipos e validações"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para respostas OCR e erros"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint, Test, Build, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Processamento em milissegundos, idealmente abaixo de 500ms por imagem"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade e precisão"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a processamento paralelo e escalonamento horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto com código, mensagem e statusCode"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados para erros e métricas"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retry e fallback para erros de processamento"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["OCR engine externo", "TypeScript"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=4.9"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de tipos", "Cobertura de testes", "Clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as interfaces e funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de enums para erros", "Separação clara entre dados e configuração"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com estruturas tipadas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["OCR_API_KEY", "OCR_TIMEOUT"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória para processamento OCR"]
      }
    ]
  },
  "know-how.txt": {
    "summary": "Este conjunto detalhado de anotações e correções técnicas documenta práticas avançadas de testes unitários e integração para um projeto TypeScript que utiliza Zod para validação de schemas, Fastify para servidores HTTP, e Jest para testes. O foco principal está em garantir cobertura completa e robusta para validações complexas, mocks de dependências externas (incluindo módulos ESM puros), e controle preciso de temporizadores e eventos assíncronos. Além disso, aborda estratégias para lidar com limitações do TypeScript strict, problemas de injeção de dependências, e testes de padrões comportamentais como Strategy e buffer circular. O material também cobre aspectos de sanitização de dados, tratamento de erros, e integração com middlewares e controllers, garantindo que o sistema mantenha alta confiabilidade, segurança e manutenibilidade durante o desenvolvimento e testes automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation Testing Suite for TypeScript Application"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Software Testing",
          "TypeScript Backend",
          "Validation Schemas",
          "Event Processing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production with ongoing refactoring and test coverage improvements"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Complete validation coverage of Zod schemas including edge cases",
          "Correct mocking of ESM modules to avoid test failures",
          "Accurate handling of environment variables and configuration parsing",
          "Reliable event buffering with circular buffer semantics",
          "Secure and authenticated SSE endpoints"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Jest 29.x", "Zod 3.x", "tsyringe (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "clipboardy (ESM module)",
          "@nut-tree-fork/nut-js (keyboard/mouse control)",
          "pino (logging)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Strategy Pattern", "Dependency Injection", "Factory Pattern", "Singleton"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/dto - Data Transfer Objects and validation schemas",
          "src/interface/controllers - Fastify controllers and route registration",
          "tests/unit - Unit tests following project testMatch configuration",
          "tests/integration - Integration tests with mocks and DI container"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase for classes and interfaces",
          "kebab-case for files and folders",
          "Prefix 'I' for interfaces (e.g., IAutomationService)",
          "Suffix 'Adapter' for adapter classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Clear separation between application logic, interface/controllers, and infrastructure",
          "Use of DI container to resolve dependencies",
          "Avoid direct imports of ESM modules in CommonJS contexts"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint with TypeScript plugin, strict rules enabled"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier with default settings"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc style comments"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript mode enabled"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit and tests/integration folders with mirrored source structure"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["100% coverage on validation branches, including edge cases and error paths"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)",
          "test.each for parameterized tests",
          "Type guards for union types"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Manual mocks for ESM modules (clipboardy, nut-js)",
          "jest.fn() and jest.spyOn for global functions (setTimeout, setImmediate)",
          "Mocks for DI container dependencies",
          "Use of require() instead of import in tests with verbatimModuleSyntax"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review with focus on test coverage and type safety"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting, testing, and build steps with coverage enforcement"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install && npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key header authentication for SSE endpoints"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Pre-handler middleware enforcing API key validation"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Base64 images, clipboard data, user input sanitized"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Standard HTTP security headers managed by Fastify"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["No explicit encryption in code; relies on transport layer security"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Fastify endpoints optimized for low latency streaming and REST calls"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balance between CPU usage (event processing) and memory (buffer caching)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["LRU cache with TTL for OCR service", "Circular buffer for event storage"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Stateless controllers, DI for extensibility, modular design"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Standardized error objects with code, message, and HTTP status"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Pino logger with conditional transports based on environment"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Graceful fallback in tests, retries not explicit in code"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Zod", "Fastify", "Jest", "@nut-tree-fork/nut-js", "clipboardy", "pino"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Strict TypeScript 5.0 compatibility", "Jest 29.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Custom DI container", "Application-specific adapters and services"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Mocks with any type reduce type safety",
          "Complexity in testing ESM modules in CommonJS context"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Timeouts in tests using jest.useFakeTimers() with async code",
          "NaN values passing numeric validations unintentionally",
          "Arrays converted to objects during recursive sanitization"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Potential overhead in event buffering and timer mocks"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Ongoing migration to strict TypeScript and improved test coverage"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Test coverage completeness", "Type safety", "Mock correctness", "Error handling"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc comments for public APIs and complex logic"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Clear, concise comments with rationale for workarounds and mocks"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Use require() in tests to bypass verbatimModuleSyntax issues",
          "Mock ESM modules globally to avoid import errors",
          "Use type guards for union types in tests"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST with Fastify, including Server-Sent Events (SSE)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Not explicitly detailed"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON for REST endpoints, event streams for SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Not explicitly detailed"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Development, Staging, Production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Containerized deployment (Docker) implied"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API keys, buffer sizes, mouse speed, logging levels"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Support for ESM and CommonJS interop", "Strict TypeScript compilation"]
      }
    ]
  },
  "tests/unit/application/dto/llm-request.dto.test.ts": {
    "summary": "Este arquivo de testes automatizados em Jest valida o schema de entrada para requisições a um modelo de linguagem (LLMRequest), garantindo que os dados enviados para a API estejam corretos e completos. Ele verifica a presença e os tipos corretos dos campos obrigatórios, como prompt e model, além de validar limites e valores padrão para parâmetros opcionais como temperature, maxTokens, systemPrompt e outputFormat. O código assegura que o schema rejeite entradas inválidas, como valores fora do intervalo permitido, tipos incorretos ou ausência de campos essenciais, promovendo robustez e confiabilidade na validação dos dados antes do processamento pelo sistema. Essa abordagem previne erros em runtime e mantém a integridade das requisições ao modelo de linguagem, facilitando a integração segura e consistente com o domínio de NLP.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["DeepSeek LLM Request Validation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Natural Language Processing", "AI", "Machine Learning", "LLM Integration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Prompt must be non-empty string",
          "Model must be a valid enum value",
          "Temperature must be between 0 and 2 inclusive",
          "maxTokens must be an integer between 1 and 4096 inclusive"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "Zod (validation library)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI or custom LLM APIs"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "DTO (Data Transfer Object) pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/dto - Data Transfer Objects and validation schemas",
          "src/domain/enums - Domain enums like LlmModel",
          "tests - Unit and integration tests"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase for types and classes",
          "camelCase for variables and functions",
          "kebab-case for file names"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "DTOs isolated in application layer",
          "Enums in domain layer",
          "Tests separated from source code"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint with recommended rules"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier with default config"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Zod runtime validation, no static TypeScript enforcement"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Unit tests colocados próximos aos DTOs, organizados por describe blocks"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90% para DTOs e validações"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Jest mocks para dependências externas, como schemas importados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório, testes passando e lint sem erros"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test stages automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável no escopo do DTO"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável no escopo do DTO"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Prompt e systemPrompt podem conter dados sensíveis, devem ser tratados com confidencialidade"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável no escopo do DTO"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável no escopo do DTO"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Validação deve ser rápida para não impactar a experiência do usuário"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação eficiente e clara, sem overhead desnecessário"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Validação deve suportar alto volume de requisições simultâneas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados pelo Zod com mensagens detalhadas de validação"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não tratado diretamente neste módulo"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não tratado diretamente neste módulo"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Falhas de validação interrompem o fluxo, exigindo correção do input"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod", "jest", "domain enums (LlmModel)"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod versão compatível com Node.js 18+", "jest 29"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../../../src/domain/enums/llm-model.enum",
          "../../../../src/application/dto/llm-request.dto"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de tipagem estática forte, dependência exclusiva de validação runtime"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum problema crítico identificado nos testes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum gargalo aparente na validação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes, clareza das mensagens de erro, aderência ao padrão DTO"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas e regras de validação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e explicativos, uso de inglês técnico para termos específicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do Zod para validação runtime, Jest para testes unitários"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST API para requisições LLM"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento semântico externo, não tratado neste módulo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não tratado neste módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "API_KEYS (externos)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de memória e CPU para validação em alta escala"]
      }
    ]
  },
  "tests/unit/application/dto/ocr-request.dto.test.ts": {
    "summary": "Este arquivo contém um conjunto abrangente de testes automatizados para os DTOs (Data Transfer Objects) relacionados a requisições OCR (Optical Character Recognition) no sistema. O foco principal é validar a correta estrutura, formatos e limites dos dados de entrada, incluindo imagens codificadas em base64 e configurações opcionais como idiomas, modos de operação, segmentação de página e timeout. Além disso, são testadas as classes OcrRequest e OcrBatchRequest, garantindo a correta construção, transformação e extração de informações das imagens, como buffer e MIME type. O arquivo também verifica helpers de validação para formatos, tamanhos e validade das imagens, assegurando robustez e cobertura completa para evitar falhas em produção. A abordagem prioriza a maximização rápida da cobertura de código, com atenção a edge cases e limites críticos, garantindo que as regras de negócio e restrições técnicas sejam rigorosamente respeitadas, o que é essencial para a confiabilidade do processamento OCR em lote e individual.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["OCR Service - Image Recognition and Text Extraction"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "OCR", "Image Processing", "Text Recognition"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Images must be valid base64 encoded with supported MIME types",
          "Image size must not exceed 14MB",
          "Batch requests must contain between 1 and 10 images",
          "Config parameters must respect defined limits (e.g., timeout, pageSegmentationMode)",
          "Invalid inputs must be rejected to prevent processing errors"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "Node.js 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29.x (testing)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OCR Engine API (internal or third-party integration)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "DTO Pattern", "Factory Method (fromRawData)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/dto - Contém DTOs para requisições OCR",
          "tests - Contém testes unitários e de integração para validação de DTOs"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes (OcrRequest, OcrBatchRequest)",
          "camelCase para variáveis e funções",
          "snake-case para arquivos (ocr-request.dto.ts)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "DTOs isolam validação e transformação de dados de entrada",
          "Testes importam DTOs via require para evitar problemas de sintaxe ESModules"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript typings"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes organizados por describe blocks por schema e classe"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura máxima focada em validação de inputs e edge cases"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Testes unitários e de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Uso mínimo de mocks, foco em dados reais e limites"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório, testes passando"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test stages com cobertura mínima"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente no DTO"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente no DTO"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagens base64 devem ser validadas para evitar injeção e ataques"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável diretamente no DTO"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Validação de tamanho e formato para evitar DoS por payloads grandes"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout configurável entre 1000ms e 60000ms para OCR"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balancear velocidade e precisão via modo (fast, balanced, accurate)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável diretamente no DTO"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Batch processa até 10 imagens para evitar sobrecarga"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Exceções lançadas em validações inválidas"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não tratado diretamente nos DTOs"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não tratado diretamente nos DTOs"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Rejeição imediata de dados inválidos para evitar processamento incorreto"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod (validação de schemas)", "Node.js Buffer API"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js >=18 para suporte a Buffer e ESModules"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/application/dto/ocr-request.dto"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Uso de require() para contornar sintaxe ESModules pode ser revisado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Limites rígidos podem causar rejeição de imagens legítimas muito grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Processamento de imagens base64 muito grandes pode impactar memória"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração para import ESModules pendente"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes, validação de limites, clareza de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas e regras de validação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de zod para validação, preferir require() para evitar erros de sintaxe"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST API (implícito pelo uso de DTOs)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Sem versão explícita no DTO"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com dados validados e erros padronizados"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não tratado diretamente no DTO"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev, staging, production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker, Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não aplicável diretamente no DTO"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limite de memória para processamento de imagens grandes"]
      }
    ]
  },
  "tests/unit/application/dto/output-format.dto.test.ts": {
    "summary": "Este arquivo de testes automatizados valida o comportamento e a robustez dos schemas de validação de dados definidos no módulo output-format.dto, utilizando a biblioteca Zod para garantir a conformidade dos objetos com formatos esperados. Ele cobre a validação de formatos de saída (outputFormatSchema) e requisições para modelos de linguagem (llmRequestWithOutputSchema), incluindo testes para valores válidos, limites, e falhas esperadas. Além disso, verifica funções utilitárias para sanitização de schemas, mascaramento de logs e validação da profundidade de schemas, assegurando segurança contra propriedades perigosas e controle de complexidade estrutural. O conjunto de testes garante a integridade dos dados de entrada e saída, prevenindo erros em runtime e facilitando a manutenção e evolução do sistema, que provavelmente integra-se a um serviço de processamento de linguagem natural com requisitos rigorosos de validação e segurança.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLM Request and Output Format Validation Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Natural Language Processing", "AI Model Integration", "Data Validation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validar formatos de entrada para evitar falhas em runtime",
          "Sanitizar dados para prevenir vulnerabilidades de segurança",
          "Garantir limites de profundidade para evitar sobrecarga"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29.x", "Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI GPT Models (gpt-3.5-turbo, gpt-4, etc.)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Modularização por domínio"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/dto - Contém schemas e DTOs para validação e transferência de dados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para tipos e classes",
          "camelCase para variáveis e funções",
          "sufixo Schema para validações"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre validação de dados e lógica de negócio",
          "Módulos isolados para testes unitários"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, incluindo restrição de any e uso de tipos explícitos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos principais"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode habilitado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pastas próximas aos módulos",
          "Organização por describe blocks para cada schema e função"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90% para schemas e funções utilitárias"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Testes de limites, valores válidos e inválidos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Reset e limpeza de mocks entre testes para isolamento"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes passando"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Execução de testes automatizados",
          "Linting e formatação",
          "Build e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Sanitização de propriedades perigosas (__proto__, constructor, prototype)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação eficiente para evitar overhead em runtime"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados via exceções do Zod com mensagens claras"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Mascaramento de descrições longas para evitar log bloat"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod", "jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["output-format.dto"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Validação de limites e enums", "Sanitização de dados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas e funções utilitárias"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Zod para validação",
          "Sanitização para segurança",
          "Limitação de profundidade para controle de complexidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/application/factory/output-parser.factory.test.ts": {
    "summary": "Este arquivo de testes automatizados em Jest valida o comportamento do módulo OutputParserFactory e sua estratégia principal, ZodParserStrategy, que são responsáveis por interpretar e transformar conteúdos JSON baseados em schemas JSON Schema simplificados. O código assegura que diferentes tipos de dados (string, number, boolean, array, object) sejam corretamente parseados, que o cache de parsing funcione com TTL configurável, e que erros de parsing e validação sejam tratados e logados adequadamente. Além disso, verifica o padrão singleton da factory, a possibilidade de registro de estratégias customizadas, e a limpeza periódica do cache, garantindo robustez, performance e extensibilidade na transformação de dados de saída em um sistema maior. O foco está em garantir a integridade dos dados parseados, a eficiência via caching e a observabilidade por meio de logs configuráveis.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Output Parsing System", "Fábrica e estratégias para parsing de saída JSON"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software de backend", "Data parsing", "JSON Schema validation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção e cobertura de testes"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação correta dos dados conforme schema",
          "Cache TTL respeitado para evitar dados obsoletos",
          "Erros de parsing devem ser logados e tratados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton", "Strategy", "Factory"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - configurações gerais",
          "src/application/factory - fábricas e estratégias",
          "src/application/dto - validação e sanitização de DTOs"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração, lógica de parsing e DTOs",
          "Dependências unidirecionais para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados próximos ao código fonte", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura completa para parsing, cache e factory"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Uso de mocks e spies"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de módulos externos com jest.mock", "Uso de jest.fn para funções mockadas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de testes e lint"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes automatizados", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Parsing deve ser rápido para evitar latência perceptível"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade e uso de memória via cache"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache com TTL configurável (default 10 minutos)", "Limpeza periódica automática"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Cache local, pode ser adaptado para cache distribuído se necessário"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados com mensagens claras",
          "Tratamento de erros JSON inválidos e de validação"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs de info e error via módulo logger configurável",
          "Logs de debug ativados via flag"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Falhas de parsing lançam exceções para tratamento externo"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod", "logger.js", "output-format.config.js", "output-format.dto.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/config", "src/application/factory", "src/application/dto"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Tratamento de erros não-Error pode ser melhorado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Uso correto de mocks"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para estratégias e factory"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de singleton para factory", "Cache com TTL para performance"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/application/services/application-startup.service.test.ts": {
    "summary": "O código testado é um conjunto de testes unitários para o serviço ApplicationStartupService, que gerencia o ciclo de vida da aplicação, especificamente a inicialização e finalização do serviço GlobalInputCapture. Ele assegura que o serviço de captura global de entrada seja iniciado e parado corretamente, com logs informativos e tratamento robusto de erros, incluindo exceções não convencionais. O serviço suporta injeção de dependência para facilitar testes e modularidade, e lida com múltiplas chamadas consecutivas aos métodos de inicialização e finalização, garantindo resiliência e previsibilidade no comportamento. A abordagem de logging detalhado e o uso de mocks indicam foco em observabilidade e testabilidade, essenciais para ambientes de produção e desenvolvimento controlado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["ApplicationStartupService", "Gerenciamento do ciclo de vida da aplicação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Aplicações desktop",
          "Serviços de captura de entrada global",
          "Automação e monitoramento"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Testes automatizados integrados"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir inicialização e finalização corretas do serviço de captura",
          "Registrar logs de sucesso e falha",
          "Tratar exceções para evitar falhas silenciosas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "tsyringe"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["GlobalInputCaptureService (interno)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Service Layer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - Configurações e logger",
          "src/application/services - Serviços de negócio",
          "tests - Testes unitários e mocks"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e métodos",
          "snake-case para arquivos",
          "prefixos claros para mocks e testes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração, serviços e testes",
          "Dependências injetadas para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any sem justificativa"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão", "Quebra de linha em 80 caracteres"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Uso limitado de any apenas em mocks"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em diretórios paralelos aos serviços",
          "Mocks para dependências externas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90% para serviços críticos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Testes de sucesso e falha",
          "Testes de casos extremos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks manuais com jest.fn()", "Mock de serviços externos para isolamento"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes unitários", "Lint", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Inicialização e finalização devem ser rápidas para não impactar UX"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Estabilidade e confiabilidade sobre otimização extrema"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplas chamadas consecutivas sem falhas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs estruturados com mensagens claras e objetos Error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Níveis info para eventos normais, error para falhas",
          "Logs detalhados para debugging"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Rethrow de erros para tratamento em camadas superiores"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["GlobalInputCaptureService", "logger.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Jest 29", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/config/logger.js", "src/application/services/application-startup.service.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Tratamento de exceções não-Error pode ser melhorado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível estado inconsistente em múltiplas inicializações simultâneas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Cobertura de testes", "Uso correto de mocks"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para métodos públicos e fluxos de erro"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos", "Uso de emojis em logs para clareza"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de DI para testabilidade", "Uso de Jest para testes unitários"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["LOG_LEVEL", "NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de recursos para serviços de captura em ambientes restritos"]
      }
    ]
  },
  "tests/unit/application/services/event-buffer.service.test.ts": {
    "summary": "O código testado implementa um serviço chamado EventBuffer, que funciona como um buffer circular para armazenar eventos temporais com capacidade configurável via variável de ambiente. Ele permite adicionar eventos, recuperar eventos em ordem cronológica, filtrar eventos por ID ou timestamp, e realizar manutenção como limpeza total e remoção de eventos antigos. O buffer gerencia o overflow sobrescrevendo os eventos mais antigos, garantindo eficiência e controle de memória, além de suportar casos extremos como buffers de tamanho 1 e grandes volumes de dados. A implementação é robusta, com tratamento de erros para configurações inválidas e testes que cobrem desde operações básicas até cenários de stress e corrupção de dados, assegurando confiabilidade e integridade do estado interno do buffer.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["EventBuffer Service", "Buffer circular para eventos temporais"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Event Processing", "Real-time data buffering", "Mouse event tracking"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável com cobertura de testes completa"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Buffer size configurável via env",
          "Sobrescrição circular de eventos",
          "Integridade temporal dos eventos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript", "Node.js 18+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Custom logger module"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Circular Buffer", "Service Layer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - configurações gerais",
          "src/application/services - lógica de negócio",
          "tests - testes unitários"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "snake-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre serviços e configuração",
          "Dependência unidirecional para logger"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript strict mode"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Tests organizados em describe/test", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura próxima de 100% para EventBuffer"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "Behavior Driven Development (BDD)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["jest.mock para logger", "Mocks para variáveis de ambiente e tempo"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes passando"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações de buffer devem ser O(1) para adição e acesso"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e uso eficiente de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a buffers grandes (ex: 10.000 eventos) com comportamento consistente"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Exceções lançadas para configurações inválidas"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de logger mockado para info, debug, error, warn"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros via exceções, testes garantem robustez"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Logger module", "NodeJS environment variables"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Jest >= 29", "NodeJS >= 18"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/config/logger.js", "src/application/services/event-buffer.service.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de testes para concorrência e multi-threading"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Exceção ao inicializar com buffer size inválido"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Clareza e robustez do buffer"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de buffer circular para controle eficiente de memória"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["INPUT_EVENT_BUFFER"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/application/services/llm.service.test.ts": {
    "summary": "O arquivo contém um conjunto abrangente de testes unitários para a classe LLMService, que encapsula a lógica de interação com um Large Language Model (LLM) adapter para geração de completions baseadas em prompts. O serviço gerencia a solicitação ao LLM, valida e processa formatos de saída customizados, aplicando estratégias de parsing via uma factory, além de implementar robustos mecanismos de tratamento de erros e logging detalhado. O código assegura que respostas sejam formatadas conforme especificações, com fallback para saída em string quando parsing falha, e monitora tempos de processamento para alertar sobre possíveis gargalos. A integração com mocks de dependências externas permite isolar o comportamento do serviço, garantindo confiabilidade e cobertura em cenários de sucesso, erro, timeout e formatos não suportados. Essa abordagem facilita a manutenção, extensibilidade e a garantia de qualidade do componente central de geração e formatação de respostas LLM em um sistema maior.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLMService", "Serviço de geração e parsing de respostas para LLM"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "Serviços de Backend"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Cobertura de testes robusta"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação de tamanho máximo do output format",
          "Fallback para string em parsing falho",
          "Tratamento padronizado de erros"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29 (testes)", "pino (logging)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LLM Adapter (ex: OpenAI API ou similar)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Pattern", "Service Layer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/services (serviços de negócio)",
          "src/application/factory (fábricas de estratégias)",
          "src/config (configurações)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para classes e funções", "snake_case para arquivos JS/TS"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre serviços, factories e configurações",
          "Dependências injetadas via construtor"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript strict mode"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pastas paralelas a src",
          "Testes unitários focados em serviços"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Jest mocks para isolação de dependências",
          "Mock factories para estratégias de parsing"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de testes e lint"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes unitários", "Lint", "Deploy automatizado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["parseTimeout configurável (default 5000ms)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de parsing e robustez"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Formato padrão com success boolean, data ou error e código"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Níveis info, warn, error e debug via pino",
          "Logs detalhados de processamento e erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallback para string output em parsing falho",
          "Tratamento de erros genéricos e específicos"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["OutputParserFactory", "LLM Adapter", "pino logger"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/application/services", "src/application/factory", "src/config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Parsing errors podem levar a fallback inesperado",
          "Limite de tamanho de schema pode impactar uso"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Parsing de schemas complexos pode exceder timeout configurado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Clareza nos logs"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara de métodos públicos e contratos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e explicativos",
          "Uso de inglês técnico para termos específicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de fallback para string output",
          "Configuração centralizada para debug e timeout"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Formato padrão com success, data ou error e código"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/config/ocr.config.test.ts": {
    "summary": "Este arquivo de testes automatizados em Jest valida a configuração do módulo OCR (Optical Character Recognition) de um sistema, assegurando que as variáveis de ambiente sejam corretamente interpretadas e que os valores padrão e customizados sejam aplicados conforme esperado. Ele verifica a robustez da configuração, incluindo a validação de limites para parâmetros críticos como tamanho máximo da imagem, tempo máximo de processamento, número de workers, idiomas suportados e parâmetros de pré-processamento de imagem. Além disso, o código simula diferentes ambientes (test e production) para garantir que configurações inválidas causem falhas controladas em produção, protegendo a estabilidade do sistema. O comportamento do módulo é testado em cenários variados, incluindo parsing de JSON, limites de hardware (CPU), e modos operacionais (fast, balanced, accurate), garantindo que a configuração OCR seja segura, consistente e adaptável às necessidades do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "OCR Configuration Module",
          "Configuração e validação do OCR para processamento de imagens"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Reconhecimento Óptico de Caracteres",
          "Processamento de Imagens",
          "Machine Learning",
          "Automação de Documentos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Testes automatizados para estabilidade e validação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "OCR_MAX_IMAGE_SIZE_MB deve estar entre 1 e 50",
          "OCR_TIMEOUT_MS deve estar entre 1000 e 300000",
          "OCR_WORKERS deve estar entre 1 e 8 e não ultrapassar CPUs disponíveis",
          "Pelo menos uma linguagem OCR válida deve ser configurada",
          "Parâmetros de pré-processamento devem respeitar limites definidos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29 (Testing Framework)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Node.js environment", "OS and Path native modules"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Configuration", "Environment-based Configuration", "Validation Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - Configurações centrais do sistema",
          "tests - Testes unitários e de integração",
          "src/config/ocr.config - Configuração específica do OCR"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para tipos e classes",
          "Constantes em UPPER_SNAKE_CASE para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configurações isoladas em módulos específicos",
          "Dependência clara entre environment.js e ocr.config",
          "Testes isolados para cada comportamento e validação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, sem warnings em testes"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para JS/TS"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos principais"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com checagem completa"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pastas próximas ao código",
          "Testes unitários e de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima não explicitada, mas testes abrangentes para configuração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)", "Testes parametrizados para validação de regras"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de módulos nativos (os, path)",
          "Mock de environment.js para simular ambientes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test", "jest --coverage"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["OCR_TIMEOUT_MS entre 1000 e 300000 ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balanceamento entre velocidade e qualidade do OCR via defaultMode"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache TTL configurável via OCR_CACHE_TTL", "Cache path configurável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Número de workers limitado ao número de CPUs disponíveis",
          "Configuração dinâmica de jobs por worker"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados com mensagens claras e específicas",
          "Falha no processo com exit code 1 em produção"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de console.error para reportar erros de configuração"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para valores padrão em caso de JSON inválido no preprocessing"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Node.js core modules (os, path)", "environment.js para variáveis de ambiente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../../src/config/environment.js", "../../../src/config/ocr.config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Parsing JSON de OCR_PREPROCESSING pode falhar e requer fallback"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Limitação do número de workers para CPUs disponíveis para evitar sobrecarga"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação rigorosa de limites de configuração",
          "Cobertura de testes para todos os cenários de configuração"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para variáveis de ambiente e seus limites"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de mensagens de erro claras"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Validação em ambiente de produção causa exit do processo para evitar configuração inválida"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["test", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "OCR_MAX_IMAGE_SIZE_MB",
          "OCR_TIMEOUT_MS",
          "OCR_WORKERS",
          "OCR_CACHE_TTL",
          "OCR_LANGUAGES",
          "OCR_LANG_PATH",
          "OCR_CACHE_PATH",
          "OCR_JOBS_PER_WORKER",
          "OCR_PREPROCESSING",
          "OCR_DEFAULT_MODE",
          "OCR_ENABLE_METRICS"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Número de workers limitado ao número de CPUs disponíveis"]
      }
    ]
  },
  "tests/unit/config/output-format.config.test.ts": {
    "summary": "Este arquivo de testes automatizados em Jest valida o comportamento do módulo de configuração output-format.config, que gerencia parâmetros críticos para o processamento e formatação de schemas de saída. O código assegura que as variáveis de ambiente relacionadas a limites de tamanho, profundidade, timeout, cache e modo padrão sejam corretamente interpretadas, aplicando valores default ou lançando erros para valores inválidos. Além disso, verifica a imutabilidade da configuração, a influência do ambiente de desenvolvimento no debug e a conformidade da interface OutputFormatConfig, garantindo robustez e previsibilidade na configuração do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Output Format Configuration Module",
          "Gerenciamento de configurações para formatação de schemas de saída"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Configuração de software",
          "Validação de schemas",
          "Processamento de dados estruturados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "maxSchemaSize entre 1 e 1MB",
          "maxDepth entre 1 e 20",
          "parseTimeout entre 100ms e 30s",
          "cacheTtl entre 1 e 1440 minutos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "JavaScript ES2021"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton", "Defensive Programming"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/config para configurações centrais", "tests para testes unitários"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para tipos e interfaces",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Config separado do código de negócio",
          "Dependência unidirecional para environment.js"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/output-format.config.test.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90% para config"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Mocking de módulos e variáveis de ambiente"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["jest.mock para dependências", "Manipulação direta de process.env"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes passando"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes unitários", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["parseTimeout entre 100ms e 30s"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade e uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache habilitado por padrão", "TTL configurável entre 1 e 1440 minutos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Exceções lançadas para valores inválidos com mensagens claras"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de debug ativados em ambiente de desenvolvimento ou via variável"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Uso de valores default quando parseInt retorna NaN"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["environment.js", "process.env"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Jest 29", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../../src/config/environment.js", "../../../src/config/output-format.config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Interpretação de valores booleanos em strings pode causar confusão"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de limites", "Imutabilidade da configuração", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para variáveis de ambiente e defaults"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de frozen objects para garantir imutabilidade",
          "Validação rigorosa de inputs"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "OUTPUT_SCHEMA_MAX_SIZE",
          "OUTPUT_SCHEMA_MAX_DEPTH",
          "OUTPUT_SCHEMA_DEFAULT_MODE",
          "OUTPUT_SCHEMA_PARSE_TIMEOUT",
          "OUTPUT_SCHEMA_ENABLE_CACHE",
          "OUTPUT_SCHEMA_CACHE_TTL",
          "OUTPUT_SCHEMA_DEBUG"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/domain/enums/llm-model.enum.test.ts": {
    "summary": "Este arquivo de teste automatizado em JavaScript valida o comportamento do enum LlmModel e seus mapeamentos associados, garantindo a integridade e consistência dos valores que representam diferentes modelos de linguagem (LLM) e seus provedores correspondentes. O código verifica que todos os valores esperados do enum estão presentes, são do tipo string e que o mapeamento LLM_PROVIDER_MAP associa corretamente cada modelo ao seu provedor, seja 'openai' ou 'deepseek'. Além disso, testa a função getProviderForModel para assegurar que retorna o provedor correto para cada modelo, incluindo o tratamento de valores não mapeados. A suíte de testes também realiza testes de integração para garantir a coerência entre o enum, o mapa e a função, promovendo robustez e confiabilidade na camada de abstração dos modelos de linguagem dentro do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Deepseek LLM Model Management"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Modelos de Linguagem", "Machine Learning", "NLP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade dos enums de modelos",
          "Mapeamento correto entre modelos e provedores",
          "Tratamento seguro de valores não mapeados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API", "Deepseek API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Enum Pattern", "Mapping Pattern", "Modularization"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/domain/enums - Contém definições de enums e mapeamentos relacionados a modelos LLM"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Enums em PascalCase", "Constantes em UPPER_SNAKE_CASE", "Funções em camelCase"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre enums, mapeamentos e funções utilitárias",
          "Testes localizados em pastas paralelas ao código fonte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários inline e JSDoc para funções públicas"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript strict mode (parcial, pois o teste usa require)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes unitários organizados por arquivo e funcionalidade",
          "Localizados em pastas __tests__ ou paralelas ao código"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura completa dos enums e mapeamentos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "test.each para parametrização"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Uso mínimo de mocks, foco em testes de valores estáticos e funções puras"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes passando"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Execução de testes automatizados", "Linting", "Build e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Jest", "Node.js", "OpenAI SDK", "Deepseek SDK"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/domain/enums/llm-model.enum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Consistência de enums e mapeamentos",
          "Tratamento de casos de erro"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para enums e funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e em português para contexto"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de require() para compatibilidade com verbatimModuleSyntax"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/infrastructure/adapters/langchain/langchain-llm.adapter.test.ts": {
    "summary": "O arquivo test suite implementa uma bateria de testes unitários para o adapter LangChainLLMAdapter, que atua como uma camada de integração entre a aplicação e provedores de modelos de linguagem (LLMs) como OpenAI e DeepSeek. Seu comportamento principal é gerar completions de texto a partir de prompts, configurando dinamicamente o provedor correto com base no modelo solicitado, e tratando respostas e erros de forma robusta. O código valida a correta instanciação do adapter, a geração de respostas com diferentes provedores, o tratamento de prompts com ou sem system prompt, e a gestão de exceções, garantindo que o adapter funcione como um componente confiável e flexível na arquitetura de LLMs da aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LangChain LLM Integration", "Adapter para integração com provedores de LLM"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Natural Language Processing", "Modelos de Linguagem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Uso correto das chaves API",
          "Fallback seguro para provedores desconhecidos",
          "Tratamento robusto de erros"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "JavaScript ES2022"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API", "DeepSeek API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Adapter Pattern", "Mocking for Testing"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/infrastructure/adapters/langchain - implementação do adapter",
          "src/config - configurações de ambiente e LangChain",
          "src/domain/enums - enums e mapeamentos de modelos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, infraestrutura e configuração",
          "Dependências unidirecionais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados próximos ao código fonte em pastas __tests__ ou arquivos *.spec.ts"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocking extensivo de dependências externas com jest.mock"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes automatizados passando"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Chaves API restritas e não expostas em logs"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Chaves API OpenAI e DeepSeek"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Transmissão via HTTPS obrigatória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout de 30 segundos para chamadas LLM"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Confiabilidade e robustez sobre latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplos provedores e modelos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Exceções com mensagens claras e específicas"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de logger pino com níveis info, error, warn, debug"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para OpenAI em caso de provedor desconhecido"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@langchain/openai", "@langchain/deepseek", "jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Timeout 30000ms", "Retries 3"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/config", "src/domain/enums", "src/infrastructure/adapters"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Melhorar tratamento de erros não-Error", "Cobertura de testes de integração"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Fallback pode gerar custos inesperados"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Uso correto de mocks"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do Adapter Pattern para integração LLM", "Fallback para OpenAI como padrão"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST-like para chamadas LLM"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com content, finishReason e usage"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["OPENAI_API_KEY", "DEEPSEEK_API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limite de timeout 30s para chamadas externas"]
      }
    ]
  },
  "tests/unit/interface/controllers/llm.controller.test.ts": {
    "summary": "Este arquivo de teste automatizado em Jest valida o comportamento do LLMController, um componente responsável por gerenciar requisições HTTP POST para geração de completions via um serviço de linguagem natural (LLMService). O controller realiza validação de entrada usando schemas Zod, verifica limites de tamanho para o outputFormat, e trata múltiplos cenários de erro, incluindo erros de validação, formatos não suportados e falhas internas, garantindo respostas HTTP apropriadas. A arquitetura segue princípios de injeção de dependência via tsyringe, com mocks extensivos para isolar o comportamento do controller, assegurando robustez e conformidade com regras de negócio críticas como autenticação via header x-api-key e validação rigorosa do payload. O teste cobre desde a criação da instância, registro de rotas, até o fluxo completo de geração de completions, incluindo tratamento de exceções e erros específicos, promovendo alta confiabilidade e manutenção facilitada do módulo dentro de um sistema maior de APIs RESTful para processamento de linguagem natural.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLM API Service", "API para geração de completions via modelos de linguagem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Natural Language Processing", "APIs REST", "Machine Learning", "Model Inference"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa do payload via Zod",
          "Autenticação obrigatória via x-api-key",
          "Limite máximo para outputFormat schema",
          "Tratamento detalhado de erros para garantir respostas HTTP corretas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify (servidor HTTP)", "tsyringe (Dependency Injection)", "Jest 29 (testes)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LLMService (serviço interno para geração de completions)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Controller Pattern",
          "Clean Architecture (separação entre interface, aplicação e infraestrutura)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/interface (controllers, middlewares, schemas)",
          "src/application (DTOs, serviços)",
          "src/config (configurações)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes (LLMController)",
          "camelCase para funções e variáveis",
          "kebab-case para rotas HTTP"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Interface desacoplada da aplicação via injeção de dependência",
          "Schemas e DTOs isolados para validação",
          "Controller apenas orquestra chamadas e respostas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript e JavaScript",
          "Regras para evitar any implícito e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para indentação e aspas simples"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções públicas e controllers"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Uso de Zod para validação de runtime"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados próximos ao código fonte",
          "Uso de describe e test para organização"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura completa dos métodos públicos do controller"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)", "Mocking extensivo para isolamento"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para dependências externas (tsyringe, pino, middlewares)",
          "Mocks para serviços internos (LLMService)"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header x-api-key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Validação obrigatória do header x-api-key para acesso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Chaves de API e tokens devem ser protegidos e não expostos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["x-api-key obrigatório", "Possível uso de headers padrão de segurança HTTP"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Comunicação via HTTPS obrigatória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Respostas rápidas para chamadas POST /llm, idealmente < 500ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balancear velocidade de resposta com validação rigorosa"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável diretamente no controller, possível cache downstream"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Design stateless para fácil escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, code, error e metadata opcional"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de pino para logs info e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código, presumivelmente integrável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento detalhado de erros para respostas HTTP específicas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "tsyringe para DI",
          "pino para logging",
          "Zod para validação",
          "Fastify para servidor HTTP"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatibilidade com Node.js 18+", "TypeScript 5.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/application/dto", "src/interface/controllers", "src/interface/middleware"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Limite de tamanho do outputFormat pode impactar requests complexos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Validação e parsing podem impactar latência em schemas muito grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Conformidade com padrões de DI"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para controllers e DTOs"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de tsyringe para injeção de dependência",
          "Validação via Zod",
          "Tratamento detalhado de erros HTTP"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não explícito no código, presumivelmente via URL ou headers"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com estrutura padronizada para sucesso e erro"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no controller, possível camada externa"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API keys, configurações de logging e endpoints"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de alta disponibilidade e escalabilidade"]
      }
    ]
  },
  "tests/unit/interface/schemas/llm.schemas.test.ts": {
    "summary": "Este arquivo de testes automatizados em Jest valida o schema JSON para requisições relacionadas a modelos de linguagem (LLM) no sistema. Ele assegura que o schema llmRequestJsonSchema está corretamente estruturado como um objeto com propriedades obrigatórias como prompt e model, além de validar restrições específicas para propriedades como temperature, maxTokens e outputFormat. O código também verifica a correta enumeração dos modelos LLM suportados, garantindo que o schema reflita dinamicamente as definições importadas, e testa a robustez do schema frente a diferentes valores de enum. A abordagem foca em garantir a integridade e conformidade do schema para uso em validações de entrada, suportando a interoperabilidade e segurança na manipulação de dados de requisição para APIs de LLM.",
    "properties": [
      {
        "property": "prompt",
        "subProperty": "type",
        "value": ["string"]
      },
      {
        "property": "prompt",
        "subProperty": "minLength",
        "value": [1]
      },
      {
        "property": "model",
        "subProperty": "type",
        "value": ["string"]
      },
      {
        "property": "model",
        "subProperty": "enum",
        "value": [
          "o3",
          "gpt-4.1",
          "gpt-4.1-mini",
          "deepseek-chat",
          "deepseek-reasoner",
          "deepseek-coder"
        ]
      },
      {
        "property": "temperature",
        "subProperty": "type",
        "value": ["number"]
      },
      {
        "property": "temperature",
        "subProperty": "minimum",
        "value": [0]
      },
      {
        "property": "temperature",
        "subProperty": "maximum",
        "value": [2]
      },
      {
        "property": "temperature",
        "subProperty": "default",
        "value": [0.7]
      },
      {
        "property": "maxTokens",
        "subProperty": "type",
        "value": ["integer"]
      },
      {
        "property": "maxTokens",
        "subProperty": "minimum",
        "value": [1]
      },
      {
        "property": "maxTokens",
        "subProperty": "maximum",
        "value": [4096]
      },
      {
        "property": "maxTokens",
        "subProperty": "default",
        "value": [1000]
      },
      {
        "property": "systemPrompt",
        "subProperty": "type",
        "value": ["string"]
      },
      {
        "property": "outputFormat",
        "subProperty": "type",
        "value": ["object"]
      },
      {
        "property": "outputFormat",
        "subProperty": "required",
        "value": ["type"]
      },
      {
        "property": "outputFormat",
        "subProperty": "additionalProperties",
        "value": [false]
      },
      {
        "property": "outputFormat.type",
        "subProperty": "type",
        "value": ["string"]
      },
      {
        "property": "outputFormat.type",
        "subProperty": "enum",
        "value": ["object", "array", "string", "number", "boolean"]
      },
      {
        "property": "outputFormat.properties",
        "subProperty": "type",
        "value": ["object"]
      },
      {
        "property": "outputFormat.properties",
        "subProperty": "additionalProperties",
        "value": [true]
      },
      {
        "property": "outputFormat.items",
        "subProperty": "type",
        "value": ["object"]
      },
      {
        "property": "outputFormat.items",
        "subProperty": "additionalProperties",
        "value": [true]
      },
      {
        "property": "outputFormat.required",
        "subProperty": "type",
        "value": ["array"]
      },
      {
        "property": "outputFormat.required",
        "subProperty": "items",
        "value": ["string"]
      },
      {
        "property": "outputFormat.additionalProperties",
        "subProperty": "type",
        "value": ["boolean"]
      },
      {
        "property": "outputFormat.description",
        "subProperty": "type",
        "value": ["string"]
      }
    ]
  },
  "tests/unit/routes/input-events.routes.test.ts": {
    "summary": "Este arquivo de testes automatizados valida o comportamento das rotas relacionadas a eventos de entrada (input events) em uma aplicação backend construída com Fastify e Jest. Ele assegura que as rotas GET e POST sejam registradas corretamente, que os handlers associados invoquem os métodos apropriados do controller, e que os schemas de validação estejam presentes para garantir a integridade dos dados. Além disso, o código verifica o tratamento de erros e a integração com o container de injeção de dependências, garantindo que o sistema responda adequadamente a falhas e que o fluxo de registro das rotas seja consistente. O conjunto de testes cobre aspectos funcionais essenciais para a manutenção da robustez e confiabilidade das APIs de input events, facilitando a evolução segura do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Input Events API",
          "Gestão e monitoramento de eventos de entrada em sistema backend"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Event Streaming", "Observability", "Input Events"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir registro correto das rotas",
          "Validação rigorosa dos schemas de entrada e resposta",
          "Tratamento adequado de erros para evitar falhas silenciosas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Jest 29.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Dependency Injection Container interno"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Modular Routing", "Controller Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - configurações e injeção de dependências",
          "src/routes - definição das rotas HTTP",
          "src/controllers - lógica de negócio e manipulação de eventos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e controllers",
          "kebab-case para arquivos de rotas",
          "verbos para métodos HTTP (get, post)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre rotas, controllers e configuração de DI",
          "Uso de container para resolver dependências"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com checagem completa"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pastas __tests__ ou próximas aos módulos testados"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80% para rotas e controllers"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocking de dependências com jest.mock"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock do container de DI", "Mock dos controllers para isolar testes de rotas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente nas rotas testadas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não especificado no código analisado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Não manipula dados sensíveis diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não configurado neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não explicitado, mas espera-se baixa latência para rotas GET e POST"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Confiabilidade e robustez priorizadas sobre otimizações agressivas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não implementado neste módulo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Uso de container para facilitar escalabilidade e modularidade"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Propagação de erros via exceções para middleware de tratamento"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado diretamente neste código"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Propagação de erros para camada superior para tratamento centralizado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "Jest", "Dependency Injection Container"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "Jest 29.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/config/dependency-injection.js", "src/routes/input-events.routes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum relatado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Validação de schemas", "Tratamento de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas e rotas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de DI para desacoplamento", "Testes isolados para rotas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não explícito no código"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado neste módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Variáveis para configuração do container e endpoints"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Nenhuma restrição explícita"]
      }
    ]
  },
  "tests/unit/routes/status.routes.test.ts": {
    "summary": "O arquivo de teste implementa uma suíte de testes unitários para a rota GET /status de uma API construída com Fastify. Seu objetivo principal é validar o comportamento do endpoint de status, que verifica a operacionalidade da API, calculando a latência da resposta e retornando um objeto JSON com informações de saúde do sistema. O código simula cenários de sucesso e falha, incluindo tratamento de exceções, garantindo que a rota responda corretamente com status HTTP e payloads apropriados. Além disso, verifica a correta integração da função statusRoutes com o framework Fastify, assegurando que o callback done seja chamado e que o handler seja assíncrono. O teste utiliza mocks para controlar o tempo e as respostas, permitindo medir latência e validar mensagens de status, reforçando a confiabilidade e robustez do endpoint de monitoramento da API.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["API de Monitoramento de Status"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Health Check", "Monitoring"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Endpoint /status deve sempre responder com status HTTP correto",
          "Latência deve ser calculada e reportada com precisão",
          "Falhas devem retornar código 503 com mensagem clara"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Routing", "Callback Pattern", "Async Handler"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/routes - Contém definições de rotas da API",
          "tests - Contém testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para funções e variáveis", "kebab-case para arquivos e rotas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "status.routes exporta função statusRoutes isolada",
          "Dependência mínima entre módulos para facilitar testes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para async/await, no-unused-vars, consistent-return"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções públicas"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Arquivos de teste localizados em tests/routes",
          "Testes unitários focados em comportamento da rota"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80% para rotas críticas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocking de dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para Fastify e reply", "Spies para Date.now e toISOString"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável para endpoint /status"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Endpoint público, sem restrição"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não especificado no escopo do teste"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta rápida com latência medida em milissegundos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de resposta priorizada"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável para endpoint de status dinâmico"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Endpoint leve, escalável com o servidor Fastify"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos ok:false, latency, message, checkedAt"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não especificado no teste"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no teste"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Resposta 503 para falhas, sem retry automático"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "Jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.0.0", "Jest >=29.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/routes/status.routes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Cobertura de testes de integração ausente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de mocks para tempo pode causar falsos positivos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado no escopo do teste"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Clareza nas mensagens de status"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Fastify para alta performance",
          "Endpoints de health check simples e robustos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável para endpoint /status"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos ok, latency, message, checkedAt"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "PORT"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Baixa latência requerida", "Alta disponibilidade"]
      }
    ]
  },
  "tests/unit/types/output-shape.test.ts": {
    "summary": "Este arquivo de teste automatizado em JavaScript, utilizando Jest, tem como objetivo principal validar o comportamento e a cobertura de um módulo TypeScript chamado 'output-shape'. Ele assegura que as funções utilitárias para criação de respostas de sucesso e erro, bem como os type guards para identificar respostas legadas e dinâmicas, funcionem corretamente em diversos cenários, incluindo casos de borda e valores especiais. O código foca em garantir a integridade das estruturas de dados retornadas, a correta distinção entre tipos de resposta e a robustez das validações, contribuindo para a confiabilidade do sistema que manipula respostas de modelos de linguagem. Além disso, o teste cobre padrões de uso típicos e integrações entre funções, promovendo alta cobertura e qualidade do código.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "output-shape",
          "Módulo para padronização e validação de formatos de resposta em LLMs"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Modelos de Linguagem (LLM)", "API Responses"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção com foco em cobertura de testes"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Respostas devem seguir formato padrão success/error",
          "Type guards devem distinguir corretamente legacy e dynamic responses"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modularização por responsabilidades", "Type Guards para validação de tipos"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definição de tipos e utilitários",
          "tests/ - testes unitários e de cobertura"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para funções e variáveis", "PascalCase para tipos e interfaces"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, utilitários e testes",
          "Dependência unidirecional do módulo output-shape para testes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados próximos ao código fonte em pasta tests/",
          "Testes unitários focados em funções e type guards"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura próxima a 100% para funções utilitárias e type guards"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Cobertura de branches e edge cases"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks mínimos, foco em testes de integração funcional"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes automatizados passando"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Execução de testes unitários", "Verificação de coverage", "Lint e formatação"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run test -- --watch"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Alta confiabilidade e robustez sobre otimização extrema"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Formato padrão com success: false, error string e código opcional"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["../../../src/types/output-shape"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["output-shape (módulo interno de tipos e utilitários)"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Clareza e robustez dos type guards",
          "Consistência no formato de respostas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara de funções utilitárias e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de type guards para distinguir legacy e dynamic responses",
          "Padronização de respostas com metadata opcional"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos success, data, error, code e metadata"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  }
}

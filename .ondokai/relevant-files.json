{
  ".env.example": {
    "summary": "Este arquivo de configuração define variáveis de ambiente essenciais para a execução de uma aplicação em modo development, incluindo parâmetros de rede, níveis de log, e configurações específicas para captura de tela e gravação de eventos. Ele integra autenticação via API_KEY e configurações para uso da API OpenAI, além de controlar aspectos de performance e qualidade da captura de tela, como intervalo de movimentação e tamanho máximo de screenshots. O comportamento central do arquivo é fornecer um ambiente configurável e seguro para o funcionamento de um sistema que depende de captura visual e interação automatizada, facilitando a integração com serviços externos e garantindo flexibilidade operacional.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Configuração de ambiente para aplicação de captura e integração OpenAI"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação, captura de tela, integração com IA, API management"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Development"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Proteção das chaves API",
          "Configuração correta do ambiente para evitar falhas na captura"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["Node.js (versão não especificada)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Twelve-Factor App"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API_KEY", "OPENAI_API_KEY"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Performance da captura de tela", "Uso eficiente de recursos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Log level configurável via LOG_LEVEL"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["OpenAI API", "API_KEY"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "PORT",
          "HOST",
          "LOG_LEVEL",
          "MOUSE_SPEED",
          "SCREEN_CONFIDENCE",
          "API_KEY",
          "OPENAI_API_KEY",
          "RECORDER_INCLUDE_SCREENSHOT",
          "RECORDER_MOVE_INTERVAL_MS",
          "RECORDER_MAX_SCREENSHOT_SIZE"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".eslintignore": {
    "summary": "Este arquivo de configuração define padrões e exclusões essenciais para o ambiente de desenvolvimento e build de um projeto Node.js, incluindo diretórios como node_modules, dist, coverage e arquivos de log. Ele especifica quais pastas e arquivos devem ser ignorados por ferramentas de linting, testes, cobertura e controle de versão, garantindo um fluxo de trabalho eficiente e limpo. A configuração suporta a integração com ferramentas como Jest para testes, ESLint para qualidade de código e PM2 para gerenciamento de processos, facilitando a manutenção e escalabilidade do projeto.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto Node.js para backend com foco em testes, linting e deploy"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Node.js", "Backend"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter ambiente limpo de arquivos temporários",
          "Garantir qualidade de código via linting",
          "Executar testes automatizados corretamente"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest", "ESLint", "PM2"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules (dependências)",
          "dist (build output)",
          "coverage (relatórios de teste)",
          "logs (arquivos de log)",
          ".nyc_output (cobertura de testes)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos de configuração com extensão .js",
          "Arquivos de log com extensão .log",
          "Pastas padrão para outputs e dependências"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre código fonte, testes, logs e builds"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb (implícito pelo uso de ESLint)"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Configuração via .eslintrc.js"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Cobertura armazenada em coverage/", "Configuração via jest.config.js"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["jest"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["eslint ."]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs armazenados em logs/ e arquivos *.log"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Jest", "ESLint", "PM2"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".eslintrc.cjs": {
    "summary": "Este arquivo configura o ESLint para um projeto TypeScript moderno, definindo regras rigorosas de linting que garantem a qualidade e a consistência do código. Ele utiliza o parser '@typescript-eslint/parser' para interpretar sintaxe TypeScript avançada e integra plugins recomendados para TypeScript e Prettier, assegurando conformidade com boas práticas e formatação automática. As regras aplicadas previnem erros comuns em async/await, uso indevido de tipos 'any', variáveis não utilizadas e promessas não tratadas, promovendo um código mais seguro, legível e robusto. Essa configuração é fundamental para manter a integridade do código durante o desenvolvimento e facilitar a manutenção em projetos escaláveis.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Configuração ESLint para projeto TypeScript com foco em qualidade e segurança"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "TypeScript", "Linting", "Qualidade de código"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Evitar uso de 'any' explícito",
          "Garantir tratamento correto de promessas",
          "Não permitir variáveis não utilizadas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuração declarativa", "Plugin-based architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Configuração centralizada em arquivo .eslintrc.js ou equivalente"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Uso de camelCase para variáveis e funções",
          "Prefixo '_' para argumentos ignorados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre regras de linting e código de aplicação"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["ESLint Recommended", "Prettier"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "no-async-promise-executor: error",
          "no-await-in-loop: warn",
          "@typescript-eslint/no-explicit-any: error",
          "@typescript-eslint/no-floating-promises: error",
          "@typescript-eslint/await-thenable: error",
          "@typescript-eslint/no-unused-vars: error with argsIgnorePattern '^_'"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier integration via plugin:prettier/recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript strict mode via parserOptions.project"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["eslint . --ext .ts,.tsx"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["prettier --write ."]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@typescript-eslint/parser",
          "@typescript-eslint/eslint-plugin",
          "eslint",
          "prettier",
          "eslint-plugin-prettier"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatibilidade com TypeScript 4.x e ESLint 8.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Análise de type-checking pode impactar performance do lint"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Conformidade com regras de lint",
          "Evitar uso de any",
          "Tratamento correto de promessas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos", "Uso de prefixo '_' para argumentos ignorados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de regras estritas para async/await e tipos explícitos"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".nvmrc": {
    "summary": "O código consiste em um valor literal numérico simples, especificamente o número 20, sem qualquer lógica, função ou estrutura adicional. Seu comportamento é estático e não realiza transformações, operações ou interações com outros componentes do sistema. Funcionalmente, ele representa um dado fixo que pode ser utilizado como constante ou valor de configuração em um contexto maior, mas isoladamente não produz efeitos observáveis ou mudanças de estado. Não há integração explícita com outros módulos, nem padrões arquiteturais aplicados, e não apresenta riscos de segurança ou performance devido à sua simplicidade extrema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto genérico sem nome definido"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Indefinido"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Indefinido"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Nenhuma regra identificada"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["Indefinido"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Nenhum"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Nenhum"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["Indefinido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Nenhum"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Indefinido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Indefinido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Nenhum"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Indefinido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Nenhum"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Indefinido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Indefinido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhum"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Indefinido"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhum"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Indefinido"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Indefinido"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Indefinido"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Indefinido"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Nenhum"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Nenhum"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Nenhum"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Nenhum"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Indefinido"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Indefinido"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Indefinido"]
      }
    ]
  },
  ".prettierignore": {
    "summary": "Este arquivo é um .gitignore configurado para projetos Node.js, contendo regras para ignorar diretórios e arquivos gerados automaticamente durante o desenvolvimento, build e execução do projeto. Ele previne o versionamento de dependências instaladas (node_modules), artefatos de build (dist), relatórios de cobertura de testes (coverage, .nyc_output), arquivos de log, configurações locais do editor (vscode), arquivos de bloqueio de pacotes (package-lock.json), documentação markdown, e arquivos de configuração de ambiente (.env e variações). O comportamento principal é garantir que apenas o código-fonte relevante e arquivos essenciais sejam versionados, evitando poluição do repositório e conflitos de ambiente, facilitando a manutenção e colaboração entre desenvolvedores.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto Node.js com foco em desenvolvimento modular e build automatizado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Node.js",
          "JavaScript",
          "Gerenciamento de dependências"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter integridade do repositório evitando versionamento de arquivos temporários e sensíveis"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules (dependências)",
          "dist (build output)",
          "coverage (test coverage)",
          "logs (arquivos de log)",
          ".vscode (configurações do editor)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Uso de snake_case e camelCase para arquivos e variáveis"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre código fonte e artefatos gerados"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [".env files"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Ignorar arquivos de log no versionamento"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["node_modules"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["package-lock.json (ignorado para evitar conflitos)"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [".env", ".env.*"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".prettierrc": {
    "summary": "Este arquivo configura regras de formatação de código para um projeto JavaScript/TypeScript utilizando Prettier, definindo padrões como uso obrigatório de ponto e vírgula (semi), vírgula final em todos os elementos de listas e objetos (trailingComma), aspas simples (singleQuote), largura máxima de linha de 100 caracteres (printWidth) e tabulação de 2 espaços (tabWidth). O objetivo principal é garantir consistência e padronização no estilo do código-fonte, facilitando a manutenção, legibilidade e integração entre equipes. A configuração atua como um contrato de estilo que automatiza a formatação, reduzindo discussões sobre estilo e prevenindo erros comuns relacionados a inconsistências visuais e sintáticas no código.",
    "properties": [
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "semi: true",
          "trailingComma: all",
          "singleQuote: true",
          "printWidth: 100",
          "tabWidth: 2"
        ]
      }
    ]
  },
  "NutJS-Desktop-Automation-API.postman_collection.json": {
    "summary": "Este arquivo define uma API REST completa para automação desktop utilizando a biblioteca NutJS, permitindo controle programático de mouse, teclado, operações de clipboard, captura e reconhecimento de tela, além de gravação e streaming em tempo real de eventos de entrada. A API suporta operações detalhadas como movimentação, clique, arraste e scroll do mouse, digitação e combinação de teclas, manipulação do clipboard e captura de tela com reconhecimento de imagens. Também oferece endpoints para streaming via Server-Sent Events (SSE) para monitoramento em tempo real de eventos de mouse e teclado, com autenticação via API key. A arquitetura modularizada facilita integração com sistemas maiores, fornecendo testes automatizados para garantir respostas válidas e tempos de resposta controlados, além de tratamento de erros padronizado para validação, autenticação e formatos inválidos. A API é projetada para ser extensível, segura e eficiente, atendendo a necessidades avançadas de automação e monitoramento de interfaces desktop.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Desktop Automation API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desktop Automation",
          "UI Automation",
          "Input Simulation",
          "Screen Capture",
          "Event Streaming"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação obrigatória via API key para acesso a endpoints sensíveis",
          "Validação rigorosa dos parâmetros de entrada para evitar comandos inválidos",
          "Garantia de resposta em tempo hábil (menos de 5 segundos)",
          "Manutenção da integridade do estado do sistema durante streaming SSE"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["NutJS (desktop automation library)", "Express.js (assumido para API REST)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI GPT models (gpt-3.5-turbo, gpt-4) via LLM endpoints"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular REST API", "Event-driven (SSE streaming)", "Client-server architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "api/v1/mouse - endpoints para controle do mouse",
          "api/v1/keyboard - endpoints para controle do teclado",
          "api/v1/clipboard - endpoints para manipulação do clipboard",
          "api/v1/screen - captura e reconhecimento de tela",
          "api/v1/recorder - gravação e streaming de eventos",
          "api/v1/llm - integração com modelos de linguagem"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para nomes de endpoints e propriedades JSON",
          "snake_case não utilizado",
          "Prefixo api/v1 para versionamento da API"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre operações de mouse, teclado, clipboard, tela e gravação",
          "Isolamento da lógica de streaming SSE no módulo recorder",
          "Dependência unidirecional da API REST para serviços externos (LLM)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["JavaScript Standard Style (implícito)"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado explicitamente"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Não especificado explicitamente"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários em Markdown para descrição de endpoints"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Não especificado, presumivelmente JavaScript sem tipagem estática"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Postman test scripts (JavaScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes embutidos em cada endpoint via scripts Postman"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura implícita para sucesso de resposta e tempo de resposta"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Assertions para propriedades de resposta e tempos máximos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev (assumido)"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Executar coleções Postman via Newman"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build (assumido)"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Não especificado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API key via header x-api-key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Acesso restrito a endpoints sensíveis mediante API key válida"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Chaves API e dados de sessão devem ser protegidos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-type application/json", "Accept text/event-stream para SSE"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado, presumivelmente HTTPS obrigatório"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Respostas em menos de 5000ms para endpoints REST"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre suavidade de movimento e tempo de resposta"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplas conexões SSE simultâneas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON padrão com campos success, error, code e detalhes"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Validação prévia e respostas claras para erros de input e autenticação"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["NutJS library", "OpenAI API", "Postman/Newman para testes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Não especificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Módulos internos para mouse, keyboard, clipboard, screen, recorder, llm"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Não especificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Limitações no tamanho máximo do outputFormat para LLM"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Throttle necessário para eventos de mouse move no streaming SSE"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não especificado"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de parâmetros, segurança da API key, performance de streaming"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos parâmetros e exemplos em Markdown"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários técnicos e objetivos nos scripts de teste"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de SSE para streaming em tempo real", "API key para autenticação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com endpoints versionados (api/v1) e SSE para streaming"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Prefixo api/v1 para versionamento"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para REST, text/event-stream para SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["localhost:3000 (desenvolvimento)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["baseUrl", "apiKey", "recorderStreamUrl"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de manter conexões SSE abertas e estáveis"]
      }
    ]
  },
  "README.md": {
    "summary": "Este projeto consiste em uma API REST que serve como um wrapper para a biblioteca NutJS, permitindo automação desktop via endpoints HTTP. Seu principal objetivo é expor funcionalidades de controle do mouse e captura de tela, facilitando a integração de automações de interface gráfica em sistemas distribuídos. A arquitetura segue o padrão Clean Architecture, separando claramente as responsabilidades em camadas de domínio, aplicação, infraestrutura e interface, garantindo alta manutenibilidade e escalabilidade. A API oferece endpoints para movimentação e clique do mouse, captura e busca de imagens na tela, além de um health check para monitoramento. O uso de TypeScript, Fastify e injeção de dependências com TSyringe assegura robustez e tipagem rigorosa, enquanto a validação de dados com Zod contribui para a segurança e integridade das operações. O projeto suporta múltiplos sistemas operacionais, com configurações específicas para permissões e variáveis de ambiente, e é preparado para ambientes de desenvolvimento, build e produção, facilitando a adoção em pipelines CI/CD.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS REST API - Automação Desktop via HTTP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação Desktop", "Automação de Interface Gráfica", "Controle de Mouse e Tela"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir execução correta dos comandos de automação",
          "Manter integridade e segurança das operações de controle do mouse",
          "Validação rigorosa dos dados de entrada"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "TSyringe", "Zod"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Domain - entidades e casos de uso",
          "Application - serviços e DTOs",
          "Infrastructure - adaptadores NutJS e providers",
          "Interface - controllers e middleware"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e funções",
          "kebab-case para arquivos",
          "prefixo api/v1 para rotas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Domain não depende de Application ou Infrastructure",
          "Application depende de Domain",
          "Infrastructure depende de Application",
          "Interface depende de Application e Infrastructure"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente para configuração"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade na execução dos comandos de automação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["NutJS", "Fastify", "TSyringe", "Zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de permissões específicas do SO"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Operações de captura e busca de imagens podem ser custosas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de entrada",
          "Separação clara de camadas",
          "Uso correto de injeção de dependências"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos endpoints e exemplos de uso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do Clean Architecture para garantir manutenibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL (/api/v1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev (http://localhost:3000)", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [".env com configurações específicas"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Permissões de acessibilidade no macOS", "Variável DISPLAY no Linux"]
      }
    ]
  },
  "ecosystem.config.js": {
    "summary": "Este arquivo configura a execução de uma aplicação Node.js chamada 'nutjs-api' utilizando o gerenciador de processos PM2. Ele define parâmetros essenciais para o ambiente de produção, como o script principal a ser executado, o número de instâncias, modo de execução, limites de memória para reinício automático e variáveis de ambiente críticas, incluindo NODE_ENV e porta de escuta. Além disso, especifica arquivos para registro de logs de saída e erros, garantindo monitoramento e manutenção adequados. O comportamento central é garantir a disponibilidade e estabilidade da aplicação em ambiente de produção, facilitando a gestão de processos e a recuperação automática em caso de falhas ou consumo excessivo de memória.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-api", "API para automação e controle de dispositivos via Node.js"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Controle de dispositivos", "Node.js API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Disponibilidade contínua da API", "Limite de uso de memória para evitar crashes"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["Node.js 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Process Manager Pattern (PM2)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["dist/ - código transpilado", "logs/ - arquivos de logs"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para nomes de apps", "lowercase para scripts e arquivos de log"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre código fonte (dist/) e logs (logs/)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Controle de memória para evitar crashes"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Uso de instância única limita escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs separados para erros e saída padrão", "Monitoramento via arquivos em logs/"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["PM2 internal monitoring"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reinício automático ao exceder limite de memória"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["pm2", "node"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Uso de uma única instância pode limitar throughput"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do PM2 para gerenciamento de processos",
          "Configuração para modo fork e limite de memória"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["PM2 process manager"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV=production", "PORT=3000"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limite de memória de 1GB para reinício automático"]
      }
    ]
  },
  "examples/recorder-client-esm.js": {
    "summary": "Este arquivo implementa um cliente ESM que se conecta a um endpoint SSE (Server-Sent Events) para receber e exibir eventos de gravação de interações do usuário, como ações de mouse e teclado. Ele estabelece uma conexão persistente com o servidor, autentica via API key, escuta eventos específicos (conexão, eventos gravados e erros) e exibe logs detalhados no console, incluindo informações contextuais como coordenadas do mouse, tipo de tecla e timestamps. O código também gerencia o encerramento gracioso da conexão ao receber sinais de interrupção, garantindo limpeza adequada dos recursos. Essa funcionalidade é essencial para monitoramento em tempo real e análise de comportamento do usuário em aplicações que capturam interações para auditoria, debugging ou análise UX.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Recorder Client - Monitoramento de eventos de interação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Monitoramento de comportamento do usuário, UX analytics, captura de eventos de input (mouse e teclado)"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir conexão segura e autenticada via API key",
          "Exibir eventos em tempo real sem perda de dados",
          "Encerrar conexão corretamente para evitar vazamento de recursos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (ESM), Node.js 18+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Não aplicável"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Endpoint SSE em http://localhost:3000/api/v1/recorder/stream"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Event-driven Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte principal",
          "config/: configurações e variáveis de ambiente",
          "logs/: arquivos de logs (não presente no código atual)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "const para constantes",
          "PascalCase para classes (não aplicável aqui)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Módulo único focado em cliente SSE, dependência externa isolada"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["JavaScript Standard Style (implícito)"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado no código"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Indentação de 2 espaços, quebras de linha após blocos"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários JSDoc para descrição geral"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Nenhum type checking explícito (JavaScript puro)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não aplicável"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node --experimental-modules client.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key'"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Validação da API key no servidor (não visível no cliente)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API key armazenada em variável de ambiente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Header 'x-api-key' para autenticação"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado (endpoint HTTP, idealmente HTTPS)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para eventos SSE em tempo real"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e responsividade na exibição dos eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Dependência da escalabilidade do servidor SSE"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs de erro no console com mensagem e objeto de erro"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs simples no console para eventos e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não há reconexão automática implementada"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["eventsource"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Não especificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de reconexão automática e tratamento avançado de erros"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de endpoint local e falta de fallback"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado no cliente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza nos logs, tratamento de erros e uso correto de eventos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários JSDoc para funções e módulos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de emojis para facilitar leitura dos logs"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de SSE para comunicação em tempo real e API key para autenticação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com stream SSE para eventos"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL: /api/v1/"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Eventos JSON via SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev: http://localhost:3000"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de servidor SSE disponível e estável"]
      }
    ]
  },
  "examples/recorder-client.js": {
    "summary": "Este arquivo implementa um cliente para conexão com um endpoint SSE (Server-Sent Events) que transmite eventos de gravação de interações do usuário, como ações de mouse e teclado. O código estabelece uma conexão autenticada via API key, escuta eventos específicos (conexão, eventos gravados e erros), processa e exibe informações detalhadas sobre cada evento recebido, incluindo coordenadas do mouse, tipo de ação e timestamps. Além disso, gerencia o ciclo de vida da conexão, garantindo fechamento adequado ao encerrar o processo, o que permite monitoramento em tempo real das interações do usuário para fins de auditoria, análise ou replay de sessões.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Recorder Client - Monitoramento de eventos de interação do usuário"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Monitoramento de comportamento do usuário, análise de interação, UX analytics"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir autenticação via API key para acesso ao stream",
          "Registrar eventos de interação com precisão temporal",
          "Manter integridade e ordem dos eventos recebidos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Não aplicável"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["API REST local em http://localhost:3000", "Server-Sent Events (SSE) endpoint"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Event-driven architecture", "Observer pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Estrutura simples, arquivo único para cliente SSE"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para variáveis e funções", "Constantes em maiúsculas com underscore"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Módulo único responsável pela conexão e tratamento de eventos SSE"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["JavaScript Standard Style (implícito)"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários JSDoc básicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Não aplicável (JavaScript sem TypeScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Não implementado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não aplicável"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node <filename>.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Não implementado"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Não especificado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key'"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Acesso restrito ao stream mediante API key válida"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API key armazenada em variável de ambiente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Header 'x-api-key' obrigatório"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado (endpoint HTTP local)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para eventos SSE em tempo real"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Prioridade em responsividade e estabilidade da conexão"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Dependente da escalabilidade do servidor SSE"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs de erro no console com mensagem e objeto de erro"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs informativos e de erro via console"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não implementado reconexão automática"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["eventsource"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js 18+ recomendado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de tratamento avançado de erros e reconexão"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Conexão pode ser perdida sem tentativa de reconexão"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Dependência da estabilidade do servidor SSE"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza no tratamento de eventos e segurança da API key"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários explicativos para eventos e fluxo de conexão"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Uso de emojis e mensagens claras no console para feedback"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Escolha por SSE para comunicação unidirecional em tempo real"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com Server-Sent Events (SSE)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL: /api/v1/"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Eventos JSON via SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Localhost para desenvolvimento"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Execução direta em Node.js"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY para autenticação"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de servidor SSE estável e acessível"]
      }
    ]
  },
  "jest.config.js": {
    "summary": "Este arquivo configura o ambiente de testes para um projeto TypeScript que utiliza Jest com suporte a módulos ECMAScript (ESM). Ele define presets específicos para integração com ts-jest, configura o ambiente de execução dos testes para Node.js, e mapeia extensões e módulos para garantir compatibilidade com ESM. Além disso, especifica padrões para transformação de arquivos TypeScript, ignora transformações em certos módulos, define padrões para localização dos testes, coleta e reporta cobertura de código com metas mínimas, e configura timeout e scripts de setup para o ambiente de testes. Essa configuração assegura que os testes sejam executados de forma consistente, com cobertura adequada e suporte a recursos modernos do TypeScript e ESM, facilitando a manutenção e qualidade do código no ciclo de desenvolvimento.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "ts-jest (versão compatível com Jest 29)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["**/__tests__/**/*.test.ts", "**/tests/**/*.test.ts", "**/tests/**/*.spec.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["branches >= 80%", "functions >= 80%", "lines >= 80%", "statements >= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_timeout",
        "value": ["10000 ms"]
      },
      {
        "property": "development_workflow",
        "subProperty": "setup_files_after_env",
        "value": ["<rootDir>/tests/setup.ts"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["ts-jest", "jest", "typescript", "clipboardy"]
      }
    ]
  },
  "package-lock.json": {
    "summary": "O projeto nutjs-rest-api é uma API RESTful desenvolvida em TypeScript que utiliza o framework Fastify para fornecer uma interface eficiente e escalável para automação de interações com o sistema operacional, utilizando a biblioteca @nut-tree-fork/nut-js. Ele integra funcionalidades para manipulação de clipboard, processamento de imagens com Sharp, e gerenciamento de dependências e injeção de dependência via tsyringe, garantindo modularidade e testabilidade. O sistema é configurado para ambientes modernos Node.js, com suporte a variáveis de ambiente via dotenv, geração de IDs únicos com nanoid, e logging estruturado com pino e pino-pretty. A arquitetura favorece a separação de responsabilidades, validação de dados com zod, e testes automatizados com Jest e ts-jest, assegurando qualidade e manutenção contínua. O projeto é adequado para automação de tarefas desktop via API, com foco em performance, segurança e extensibilidade, suportando múltiplas plataformas (Windows, Linux, macOS).",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-rest-api", "API REST para automação desktop"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação desktop", "API REST", "Interação com sistema operacional"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade das ações de automação",
          "Segurança no acesso ao clipboard",
          "Validação rigorosa de dados de entrada"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "Node.js >=16"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.29.1", "tsyringe 4.10.0", "Jest 29.7.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "dotenv (configuração ambiente)",
          "clipboardy (clipboard management)",
          "sharp (image processing)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Modular Architecture", "REST API"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/controllers (API endpoints)",
          "src/services (business logic)",
          "src/utils (helpers)",
          "tests (unit and integration tests)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controllers, services e infra",
          "Uso de interfaces para abstração",
          "Injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com @typescript-eslint plugin",
          "Regras para evitar any e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão",
          "Integração com ESLint para formatação consistente"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes principais"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Uso de zod para validação runtime"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.7.0", "ts-jest para integração com TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Uso de Jest mocks e fixtures para isolamento"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow com branches feature, main e hotfix"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev (executa Fastify em modo desenvolvimento)"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test (executa Jest)"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build (compila TypeScript para JavaScript)"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint (executa ESLint)"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format (executa Prettier)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no pacote, presumivelmente JWT ou API Key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso via middleware Fastify (não detalhado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Clipboard data tratado com cuidado para evitar vazamentos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Configuração recomendada via Fastify plugins (não detalhado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Uso de HTTPS presumido para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para operações de automação e API REST"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e eficiência na manipulação de eventos e imagens"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache local para dados temporários (não detalhado)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via Fastify e Node.js cluster"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON padrão com mensagens e códigos HTTP"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging estruturado com pino e pino-pretty"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Possível integração com ferramentas externas (não detalhado)"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros via middleware Fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "fastify", "pino", "tsyringe", "zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js >=16", "TypeScript 5.x", "Fastify 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["@nut-tree-fork/* (nut-js ecosystem)"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum explicitamente identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Compatibilidade entre versões de Node.js e dependências nativas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Processamento intensivo de imagens pode impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Atualizado para TypeScript 5.x, uso de Fastify 4.x"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Qualidade da tipagem", "Cobertura de testes", "Segurança e validação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc e README atualizados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e PRs com descrição detalhada"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Fastify para alta performance", "Uso de tsyringe para DI"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL ou headers (não detalhado)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado, recomendada implementação via plugins Fastify"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker (presumido)", "Node.js process manager"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["PORT", "NODE_ENV", "API_KEYS (não expostos)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Suporte multiplataforma (Windows, Linux, macOS)",
          "Requisitos de permissões para automação"
        ]
      }
    ]
  },
  "package.json": {
    "summary": "O projeto nutjs-rest-api é uma API REST que serve como um wrapper para a automação desktop utilizando a biblioteca NutJS. Seu principal objetivo é expor funcionalidades de automação de interface gráfica via endpoints HTTP, facilitando a integração com outras aplicações e serviços. O código gerencia scripts de desenvolvimento, build, testes unitários e integração, além de garantir qualidade via linting e formatação automática. A arquitetura modular e o uso de injeção de dependências com tsyringe indicam um design orientado a escalabilidade e manutenção. A integração com Fastify para o servidor HTTP e Langchain para funcionalidades avançadas sugere um sistema robusto para automação e orquestração de tarefas desktop, com foco em produtividade e extensibilidade.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-rest-api", "API REST para automação desktop com NutJS"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação Desktop", "API REST", "Automação de Interface Gráfica"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Versão 1.0.1 estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução segura de comandos de automação",
          "Validação rigorosa de inputs via Zod",
          "Manutenção da integridade do estado da automação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.3.2", "Node.js 20.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.24.0", "tsyringe 4.8.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI via Langchain", "Clipboard system via clipboardy"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Modular Architecture", "Layered Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ para código fonte",
          "dist/ para build compilado",
          "tests/ para testes unitários e integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para scripts npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre API, serviços de automação e utilitários",
          "Uso de injeção para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Prettier", "ESLint com plugin @typescript-eslint"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Regras ESLint padrão com foco em TypeScript",
          "Configuração para evitar erros comuns e manter consistência"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração para TypeScript",
          "Formatar automaticamente via lint-staged"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com tsc --noEmit para validação"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura de código monitorada via jest --coverage"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks e spies via Jest"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes unitários e integração", "Build e deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install", "npm run prepare"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build:prod"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente gerenciadas via dotenv"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Foco em velocidade e responsividade da API"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Arquitetura modular e uso de Fastify para alta performance"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não detalhado, presumivelmente JSON padrão de API REST"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging estruturado com Pino e pino-pretty para desenvolvimento"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "fastify", "@langchain/core", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Versões fixas e range semânticos especificados no package.json"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/ como código interno principal"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["TODO no script audit:roadmap indica pendência de auditoria"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Projeto já usa TypeScript moderno e módulos ES"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Qualidade do código via linting e testes", "Consistência de estilo"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Uso de JSDoc para documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de Conventional Commits"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Fastify e tsyringe para modularidade e performance"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não detalhado, versão do projeto 1.0.1"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Node.js runtime, possivelmente Docker (não especificado)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Gerenciadas via dotenv, sem valores sensíveis expostos"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Não especificado no código fornecido"]
      }
    ]
  },
  "src/application/dto/automation-request.dto.ts": {
    "summary": "Este arquivo define schemas de validação utilizando a biblioteca Zod para representar e validar dados relacionados a interações de mouse e operações de captura e busca na tela. Ele estrutura objetos que descrevem movimentos, cliques, arrastes e scroll do mouse, além de operações de captura de tela e reconhecimento de padrões visuais, garantindo que os dados recebidos estejam dentro de limites e formatos esperados. A abordagem modular e tipada permite integração segura e consistente com sistemas que automatizam ou monitoram ações de interface gráfica, facilitando a manipulação programática de eventos de input e análise visual em aplicações que demandam automação ou testes de UI. O uso de defaults e validações rigorosas assegura robustez e previsibilidade no comportamento das operações, suportando cenários de controle preciso do cursor e análise visual baseada em templates.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Interaction and Screen Automation Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Testes automatizados", "Interação com interface gráfica"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos parâmetros de input para evitar ações inválidas",
          "Garantia de valores default para parâmetros opcionais"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Type-safe Data Modeling"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/schemas - definição de schemas de validação",
          "src/types - tipos inferidos a partir dos schemas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para tipos e schemas", "snake_case para propriedades opcionais"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre schemas de input e tipos inferidos",
          "Isolamento das validações em módulo dedicado"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de schemas e validações"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para simular inputs inválidos e defaults"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação eficiente para evitar overhead em runtime"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros de validação padronizados pelo Zod"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod >=3.0.0 <4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta dos schemas", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do Zod para validação e tipagem"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/clipboard-request.dto.ts": {
    "summary": "Este arquivo define Data Transfer Objects (DTOs) para operações relacionadas ao clipboard, utilizando a biblioteca Zod para validação rigorosa dos dados de entrada. Ele oferece schemas específicos para as operações de copiar, colar e limpar o conteúdo do clipboard, garantindo integridade e limites claros, como o tamanho máximo de 1 MB para o conteúdo copiado. O código foca em validar as requisições de forma declarativa, facilitando a integração com APIs RESTful e assegurando que dados inválidos sejam rejeitados antes do processamento, promovendo segurança e robustez na manipulação do clipboard em aplicações que dependem dessas operações.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Clipboard Operations API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["clipboard management", "data validation", "API integration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Content size must not exceed 1 MB", "Content cannot be empty for copy operation"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["DTO", "Schema Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/dtos - Contém definições de DTOs e schemas de validação"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e funções", "PascalCase para tipos e schemas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre validação (schemas) e lógica de negócio"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/dtos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de schemas e validações"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Clipboard content limited to 1 MB to prevent abuse"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validation efficiency to minimize request overhead"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Zod validation error format"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Limitação fixa de 1 MB pode ser insuficiente para alguns casos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta dos schemas", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os schemas e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação declarativa"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/keyboard-request.dto.ts": {
    "summary": "Este arquivo define Data Transfer Objects (DTOs) para operações relacionadas a teclado, utilizando a biblioteca Zod para validação rigorosa dos dados de entrada. Ele oferece schemas para três tipos principais de requisições: digitação de texto com controle de timing, pressionamento de teclas específicas e combinações de teclas, garantindo integridade e conformidade com regras de negócio específicas, como limites de tamanho, tipos e valores permitidos. O código foca em validar entradas para evitar caracteres inválidos, assegurar que as teclas pressionadas estejam dentro de um conjunto suportado e limitar o número de teclas em combinações, habilitando uma interface segura e consistente para manipulação programática de eventos de teclado em sistemas maiores.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard Operations DTOs and Validation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de interface", "Input Handling", "UI Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Text input must not be empty or contain only control characters",
          "Key presses must be from a predefined supported set",
          "Key combinations must have between 1 and 5 keys and only use allowed modifiers and letters",
          "Timing values must be non-negative integers and not exceed 300000ms"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["DTO Pattern", "Schema Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/dtos - Contém definições de DTOs e schemas de validação para entrada de dados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e propriedades", "PascalCase para tipos e schemas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre schemas de validação e lógica de negócio"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/dtos - Testes unitários para validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90% para DTOs"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para entradas válidas e inválidas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint, Test, Build e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Value field max 300000ms to limit delay"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação rápida e eficiente para evitar overhead"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Zod error objects com mensagens customizadas"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod >=3.0.0 <4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta de inputs", "Cobertura de testes", "Clareza e documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os schemas e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação por ser leve e expressivo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/clipboard.service.ts": {
    "summary": "O arquivo implementa um serviço de automação para manipulação da área de transferência (clipboard) em um ambiente Node.js utilizando TypeScript. Ele oferece funcionalidades principais para copiar, colar e limpar o conteúdo do clipboard, garantindo validações como limite máximo de tamanho do conteúdo (1 MB) e tratamento robusto de erros. A classe ClipboardService integra-se ao sistema via injeção de dependência (tsyringe) e utiliza a biblioteca clipboardy para interagir com o clipboard do sistema operacional, retornando resultados padronizados que indicam sucesso ou falha das operações, além de fornecer dados relevantes sobre o conteúdo manipulado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Clipboard Automation Service",
          "Serviço de automação para manipulação da área de transferência"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Clipboard management", "Sistemas desktop e web"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Conteúdo copiado não pode exceder 1 MB",
          "Operações devem retornar resultados padronizados",
          "Tratamento robusto de erros"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["clipboardy 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Service Layer", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/ - entidades e interfaces de domínio",
          "services/ - serviços de automação",
          "infrastructure/ - integrações externas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para métodos e variáveis",
          "sufixo Service para classes de serviço"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e infraestrutura",
          "Interfaces definem contratos para serviços",
          "Dependências injetadas via tsyringe"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Regras para evitar any implícito e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Uso de tipos explícitos para parâmetros e retornos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/services/clipboardService.test.ts",
          "Testes unitários focados em copy, paste e clear"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de clipboardy para simular operações de clipboard"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard pode conter dados sensíveis, deve ser tratado com cuidado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações devem ser rápidas, idealmente < 100ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre velocidade e uso de memória, limite de 1 MB para evitar overhead"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto CommandResult com success boolean e error string opcional"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de erros devem ser capturados externamente, não implementado diretamente"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções para evitar falhas e retornar mensagens claras"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["clipboardy", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["clipboardy >=3.0.0", "tsyringe >=4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../domain/interfaces/automation-service.interface.js",
          "../../domain/entities/command-result.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de testes mais abrangentes para edge cases do clipboard"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possíveis falhas em sistemas operacionais com restrições de acesso ao clipboard"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Validação de entrada", "Consistência de retorno"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de clipboardy para compatibilidade multiplataforma",
          "Limite de 1 MB para evitar overhead"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["CommandResult com success, data e error"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipeline"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Dependência do sistema operacional para acesso ao clipboard"]
      }
    ]
  },
  "src/application/services/event-buffer.service.ts": {
    "summary": "O código implementa um serviço de buffer circular para armazenamento temporário de eventos do tipo InputEvent, permitindo o replay eficiente de eventos após reconexões de clientes SSE (Server-Sent Events). Ele mantém um histórico limitado e gerenciável de eventos, suportando operações como adição, recuperação por ID, intervalo de tempo, limpeza e remoção de eventos antigos, garantindo a integridade e disponibilidade dos dados para sincronização de estado entre servidor e clientes. O serviço é projetado para operar com alta performance e baixa latência, utilizando um buffer circular fixo para otimizar o uso de memória e facilitar a manutenção do histórico recente de eventos em sistemas reativos e distribuídos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["EventBuffer Service", "Buffer circular para eventos SSE"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Realtime event streaming", "SSE (Server-Sent Events)", "Event replay"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter ordem cronológica dos eventos",
          "Garantir replay correto após reconexão",
          "Não perder eventos recentes dentro do buffer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["SSE clients", "Environment variables"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Circular Buffer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - configurações",
          "src/types - definições de tipos",
          "src/services - serviços de negócio"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "PascalCase para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, serviços e configuração",
          "Dependência unidirecional para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any implícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para InputEvent e logger"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente (serviço interno)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso externo ao serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Eventos não contêm dados sensíveis diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Gerenciados em camada superior (SSE)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável ao buffer em memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações em tempo constante ou linear com tamanho do buffer"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e uso eficiente de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer circular atua como cache de eventos recentes"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Limitação do tamanho do buffer para evitar uso excessivo de memória"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não há tratamento explícito de erros no código apresentado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de logger para info e debug em operações críticas"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reinicialização do buffer via método clear"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "logger", "InputEvent type"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["tsyringe 4.x", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../types/input-event.types.js", "../../config/logger.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Correção do uso incorreto de 'new array' para 'new Array'"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Ausência de controle de concorrência",
          "Possível perda de eventos em buffer cheio"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Operações lineares em tamanho do buffer para recuperação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Estável, sem migrações em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de estilo", "Cobertura de testes", "Performance e segurança"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc completo para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de buffer circular para otimização de memória"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Array de InputEvent"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no serviço"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["INPUT_EVENT_BUFFER"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória para buffers grandes"]
      }
    ]
  },
  "src/application/services/event-dispatcher.service.ts": {
    "summary": "O código implementa um serviço singleton chamado EventDispatcher que gerencia o despacho e distribuição de eventos de input, especificamente eventos de mouse e teclado, para múltiplos ouvintes registrados. Utilizando o padrão Observer, ele mantém uma fila interna de eventos, aplica um rate limiter configurável para controlar a taxa de eventos processados por segundo e assegura que apenas teclas imprimíveis sejam despachadas. O serviço suporta registro e remoção dinâmica de listeners, processamento assíncrono da fila de eventos e fornece estatísticas em tempo real sobre o estado do dispatcher, garantindo uma distribuição eficiente e controlada dos eventos de input dentro do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["EventDispatcher", "Serviço de despacho de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Input event management",
          "User interaction tracking",
          "Real-time event dispatching"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Rate limiting para evitar sobrecarga",
          "Distribuição correta e completa dos eventos para todos os listeners",
          "Filtragem de teclas não imprimíveis"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["nanoid (ID generation)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton", "Observer", "Rate Limiter"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ (configurações e logger)",
          "types/ (definições de tipos)",
          "services/ (serviços singleton)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "PascalCase para interfaces e tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, configuração e serviços",
          "Dependência unidirecional de serviços para tipos e config"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any implícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para listeners e eventos", "Fixtures para eventos de input"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático em staging e produção"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço interno de eventos)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Listeners devem ser confiáveis para evitar execução de código malicioso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Processamento assíncrono imediato para minimizar latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de despacho e controle de taxa para evitar sobrecarga"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Singleton limita instância, mas pode ser escalado horizontalmente com cuidado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs estruturados via logger configurado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis debug, warn e error para diferentes eventos e falhas"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado, mas logger sugere integração com sistema de monitoramento"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções em listeners para evitar falha do dispatcher"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "nanoid", "logger interno"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["INPUT_EVENT_RATE variável de ambiente para configuração do rate limit"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../types/input-event.types.js",
          "../../config/environment.js",
          "../../config/logger.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível perda de eventos se rate limit for atingido"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Fila pode crescer se listeners forem lentos ou em grande número"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros em listeners",
          "Eficiência do rate limiter",
          "Clareza na documentação"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de português para contexto"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de singleton para garantir instância única",
          "Rate limiting configurável via variável de ambiente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Configuração via variável de ambiente INPUT_EVENT_RATE",
          "Limite aplicado por segundo"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["INPUT_EVENT_RATE"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Singleton pode limitar escalabilidade sem estratégias adicionais"]
      }
    ]
  },
  "src/application/services/keyboard.service.ts": {
    "summary": "Este arquivo implementa um serviço de automação de teclado que permite a digitação programada de texto com controle refinado de timing, suportando diferentes estratégias de input: instantânea, por caractere com delay, e com tempo total definido. O serviço abstrai a interação com o hardware via um adaptador de teclado, emitindo eventos para rastreamento de ações e garantindo sanitização do texto para evitar caracteres de controle perigosos. Além da digitação, oferece funcionalidades para pressionar teclas isoladas e executar combinações, com validações rigorosas para limites de entrada e tempo, assegurando robustez e flexibilidade na automação de tarefas que envolvem entrada de texto e comandos de teclado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Keyboard Automation Service",
          "Serviço de automação de teclado com controle de timing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de software", "Input simulation", "Keyboard automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Texto digitado não pode conter caracteres de controle perigosos",
          "Limite máximo de 10.000 caracteres para digitação",
          "Delay máximo permitido de 300.000ms (5 minutos)",
          "Combinações de teclas suportam até 5 teclas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js (mouse position API)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Strategy Pattern", "Dependency Injection", "Service Layer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/interfaces - interfaces de domínio",
          "domain/entities - entidades de domínio",
          "services - implementação dos serviços de automação",
          "utils - utilitários e helpers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I' (ex: IKeyboardAdapter)",
          "Classes em PascalCase",
          "Métodos em camelCase",
          "Constantes e enums em PascalCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e serviços",
          "Dependência invertida via injeção para adaptadores e eventos",
          "Serviço KeyboardService como ponto central de orquestração"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo no-unused-vars, strict typing"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e interfaces"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode habilitado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para IKeyboardAdapter e EventDispatcher"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória, testes aprovados, linting passado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Texto digitado deve ser sanitizado para evitar caracteres de controle"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Delay máximo configurável até 300.000ms (5 minutos)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de digitação e precisão de eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Processamento em lotes para textos longos para evitar bloqueios"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto com success boolean e mensagem de erro em string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Eventos de teclado emitidos via EventDispatcher para auditoria"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções com retorno estruturado para falhas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["IKeyboardAdapter", "EventDispatcher", "@nut-tree-fork/nut-js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Timing value máximo de 300000ms", "Limite máximo de 10000 caracteres"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["domain/interfaces", "domain/entities", "services"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Manutenção das estratégias de digitação e eventos pode crescer em complexidade"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Performance pode ser impactada em textos muito longos com delays altos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Uso de await sequencial em digitação por caractere pode causar lentidão"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de limites, tratamento de erros, clareza nas estratégias"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para interfaces e métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do Strategy Pattern para flexibilidade em timing de digitação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Objeto com success boolean, data ou error string"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/mouse.service.ts": {
    "summary": "O código implementa um serviço de automação para controle do mouse, fornecendo funcionalidades para mover, clicar, arrastar e rolar o cursor na tela com suporte a movimentos suaves e validação de coordenadas. Ele integra um adaptador de mouse abstrato para executar ações físicas e um despachante de eventos para emitir eventos relacionados às ações do mouse, garantindo rastreabilidade e controle. O serviço é projetado para ser injetável e extensível, facilitando a integração em sistemas maiores que demandam automação de input, com tratamento robusto de erros e logging detalhado para monitoramento e diagnóstico.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Automation Service",
          "Controle programático de ações do mouse para automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Input Automation", "Controle de dispositivos de entrada"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa de coordenadas dentro dos limites da tela",
          "Emissão correta e sequencial de eventos de mouse",
          "Execução confiável das ações físicas do mouse"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js (screen dimension API)", "pino (logging)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern", "Observer Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/entities (entidades de domínio)",
          "dto (objetos de transferência de dados)",
          "services (serviços de aplicação)",
          "types (tipos compartilhados)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para métodos e variáveis",
          "Sufixo 'Request' para DTOs"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, DTOs e serviços",
          "Dependência unidirecional via injeção"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e interfaces"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode ativado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ paralela aos serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de IMouseAdapter e EventDispatcher para testes unitários"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um revisor",
          "Checks de lint e testes automatizados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test, deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço local de automação)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso externo recomendado para uso do serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Movimentos e cliques com duração configurável, padrão 1000ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Suavidade do movimento priorizada sobre velocidade bruta"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhum cache implementado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Projeto para uso local, escalabilidade não aplicável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados como exceções padrão com mensagens descritivas"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging detalhado com níveis debug, info e error via pino"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado, recomendação para integração externa"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Propagação de erros para camadas superiores para tratamento"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["IMouseAdapter", "EventDispatcher", "@nut-tree-fork/nut-js", "pino"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["domain/entities", "dto", "services", "types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum débito técnico identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência da resolução da tela para validação de coordenadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Scroll suave pode causar delays perceptíveis em durações longas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de tratamento de erros",
          "Cobertura de testes",
          "Consistência de logging"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para métodos públicos e interfaces"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos, sem excesso de verbosidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de DI para facilitar testes e extensibilidade",
          "Uso de eventos para rastreabilidade das ações do mouse"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (serviço local)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Local development", "Production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Node.js runtime"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de acesso ao hardware do mouse e permissões adequadas"]
      }
    ]
  },
  "src/application/services/recorder-listener.service.ts": {
    "summary": "Não foi possível gerar descrição",
    "properties": []
  },
  "src/application/services/screen.service.ts": {
    "summary": "Este arquivo implementa um serviço de captura e busca de imagens na tela, utilizando injeção de dependência para abstrair a interface de captura e reconhecimento visual. A classe ScreenService oferece métodos assíncronos para localizar templates gráficos na tela, capturar regiões específicas e aguardar a aparição de um template dentro de um timeout configurável. O serviço transforma imagens codificadas em base64 em buffers binários para processamento, delegando a lógica de reconhecimento ao adaptador injetado. Além disso, registra logs detalhados para monitoramento e tratamento de erros, garantindo rastreabilidade e robustez na operação. Essa funcionalidade é essencial para automação de testes visuais, robôs de automação ou sistemas que dependem de reconhecimento de padrões visuais em interfaces gráficas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Screen Automation Service",
          "Serviço de automação visual para captura e reconhecimento de tela"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Robotic Process Automation (RPA)",
          "Reconhecimento visual",
          "Screen capture"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão mínima de reconhecimento (confidence) deve ser respeitada",
          "Timeouts para espera de templates não devem ser ultrapassados",
          "Logs devem registrar falhas para auditoria"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["ScreenAdapter (interface para captura e reconhecimento visual)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern", "Service Layer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/entities - entidades de domínio",
          "dto - objetos de transferência de dados",
          "services - lógica de negócio e integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para métodos e variáveis",
          "Prefixo I para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre DTOs, entidades de domínio e serviços",
          "Dependência invertida via injeção para adaptadores externos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["@typescript-eslint/recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ ou pasta tests paralela"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de ScreenAdapter para testes unitários"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagens base64 devem ser tratadas com cuidado para evitar exposição"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações de captura e busca devem responder em até 5 segundos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade e precisão do reconhecimento"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Serviço deve suportar múltiplas requisições concorrentes via injeção de dependência"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados com objetos contendo mensagem e stack trace"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso do pino para logs em níveis debug, info e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Rejeição de promises para falhas, sem retry automático"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "pino", "ScreenAdapter interface"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../dto/automation-request.dto.js", "../../domain/entities/screen-region.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Tratamento de erros mais granular", "Melhorar cobertura de testes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência da qualidade do adaptador externo para reconhecimento"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Decodificação base64 e busca podem ser custosas em imagens grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Clareza nos logs", "Uso correto de async/await"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Dependency Injection para desacoplamento", "Uso de pino para logging"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Base64 encoded images", "JSON objects for match results"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker container"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de acesso a recursos gráficos para captura de tela"]
      }
    ]
  },
  "src/config/dependency-injection.ts": {
    "summary": "Este arquivo é responsável pela configuração e registro das dependências do sistema utilizando o container de injeção de dependências do tsyringe. Ele centraliza a associação entre interfaces e suas implementações concretas, incluindo serviços para manipulação de mouse, teclado, tela, clipboard e integração com LLMs via LangChain. Além disso, registra controladores de interface e serviços auxiliares como event dispatcher e buffer, garantindo a gestão centralizada e singleton para componentes críticos. O comportamento principal é habilitar a inversão de controle e facilitar a modularidade, testabilidade e manutenção do sistema, promovendo um padrão de arquitetura limpa e desacoplada. A configuração permite que o sistema coordene interações entre hardware, serviços de inteligência artificial e controle de eventos, suportando funcionalidades avançadas de automação e gravação de eventos de entrada do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automação e Controle de Entrada de Usuário"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Input Control", "Inteligência Artificial", "Hardware Interaction"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir consistência na injeção de dependências",
          "Manter singletons para serviços de eventos",
          "Isolar adaptadores de hardware para facilitar manutenção"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x", "NutJS", "LangChain"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LangChain LLM API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Singleton", "Factory", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio e serviços",
          "infrastructure/adapters - adaptadores para hardware e APIs externas",
          "interface/controllers - controladores para interação com usuário e eventos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para variáveis e funções",
          "sufixos Service, Adapter, Controller para tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre application, infrastructure e interface",
          "Dependências unidirecionais do interface para application e infrastructure"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pastas __tests__ correspondentes a cada módulo"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para adaptadores de hardware e serviços externos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Eficiência na resolução de dependências", "Minimizar overhead de singletons"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Modularidade para facilitar escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "NutJS", "LangChain"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "infrastructure/adapters", "interface/controllers"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência na injeção de dependências",
          "Uso correto de singletons",
          "Separação clara de responsabilidades"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para serviços e adaptadores"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do tsyringe para DI",
          "Uso de singletons para EventDispatcher e EventBuffer"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/config/environment.ts": {
    "summary": "Este arquivo de configuração em TypeScript tem como principal função gerenciar variáveis de ambiente essenciais para a aplicação, garantindo que parâmetros críticos como NODE_ENV, PORT, HOST, e chaves de API estejam disponíveis e corretamente tipados. Ele utiliza a biblioteca dotenv para carregar variáveis de ambiente de um arquivo .env, permitindo flexibilidade e segurança na configuração do ambiente de execução. Além disso, define flags booleanas para identificar o ambiente de execução (development ou production), facilitando decisões condicionais em outras partes do sistema, o que contribui para um comportamento adaptativo conforme o contexto de deployment.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Configuração de Ambiente Centralizada"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Configuração de aplicações Node.js", "Gerenciamento de variáveis de ambiente"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Desenvolvimento"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Variáveis de ambiente devem estar definidas e válidas",
          "Chaves de API não podem ser expostas em código"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["dotenv", "OpenAI API (via openaiApiKey)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Management", "Immutable Object Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["config/ - arquivos de configuração e variáveis de ambiente"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e constantes",
          "UPPER_SNAKE_CASE para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Módulo de configuração isolado, exporta constantes para uso global"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install", "cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API keys (apiKey, openaiApiKey) devem ser protegidas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["logLevel configurável via variável de ambiente"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de variáveis de ambiente", "Segurança de chaves sensíveis"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar variáveis de ambiente e seus usos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de dotenv para configuração", "Flags booleanas para ambiente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "PORT",
          "HOST",
          "LOG_LEVEL",
          "MOUSE_SPEED",
          "SCREEN_CONFIDENCE",
          "API_KEY",
          "OPENAI_API_KEY"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/config/input-events.config.ts": {
    "summary": "Este arquivo configura e valida parâmetros essenciais para o sistema de eventos de input, garantindo que o buffer, taxa e tempo de vida dos eventos estejam dentro de limites seguros e operacionais. Ele importa variáveis de ambiente para definir configurações como bufferSize, heartbeatMs, maxRate, maxEventAge e debug, aplicando validações rigorosas para evitar configurações inválidas que possam comprometer a estabilidade do sistema. Ao validar e congelar essas configurações, o código assegura um comportamento previsível e robusto do sistema de input events, facilitando a manutenção e integração com outros módulos que dependem dessas definições.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Events Configuration System"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Sistemas de eventos, Input Event Processing, Middleware"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "bufferSize deve estar entre 1 e 100000",
          "heartbeatMs deve estar entre 1000 e 300000 ms",
          "maxRate deve estar entre 1 e 50000 eventos/s",
          "maxEventAge deve estar entre 1000 e 3600000 ms"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Node.js 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["dotenv (environment variable management)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton", "Fail-fast"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do sistema",
          "src/ - código fonte principal",
          "tests/ - testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para interfaces e tipos",
          "UPPER_SNAKE_CASE para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo de configuração isolado para input events",
          "Dependência unidirecional para dotenv e processo Node.js"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e interfaces"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/ para testes de configuração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de variáveis de ambiente e funções de processo"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install && cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente devem ser protegidas e não expostas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Configurações devem garantir baixa latência no processamento de eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre throughput e uso de memória no buffer"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Configurações permitem ajuste para diferentes cargas de eventos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Lançamento de Error com mensagens claras para configuração inválida"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Console.error para erros críticos de configuração"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fail-fast: encerra processo em caso de configuração inválida"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["dotenv versão compatível com Node.js 18+"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de variáveis de ambiente pode causar falhas se não configuradas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Configurações incorretas podem impactar throughput e latência"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação rigorosa de limites e tratamento de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para interfaces e funções"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de fail-fast para evitar execução com configurações inválidas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Configuração de maxRate para limitar eventos por segundo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev, staging, prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker e Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "INPUT_EVENT_BUFFER",
          "INPUT_EVENT_HEARTBEAT",
          "INPUT_EVENT_RATE",
          "INPUT_EVENT_MAX_AGE",
          "INPUT_EVENT_DEBUG"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de memória e CPU para buffers grandes"]
      }
    ]
  },
  "src/config/keyboard.config.ts": {
    "summary": "Este arquivo define configurações imutáveis para funcionalidades de teclado, permitindo a personalização via variáveis de ambiente. Ele estabelece parâmetros como modo padrão de digitação, tamanho máximo de texto, delays por caractere e tamanho de lote para processamento, além de habilitar logs para debug. A função de validação assegura que os valores configurados estejam dentro de limites seguros e aceitáveis, prevenindo erros de configuração que possam impactar a performance ou comportamento do sistema. O código integra-se a um sistema maior que manipula entrada de texto, garantindo flexibilidade e robustez na configuração do comportamento do teclado, com foco em controle preciso de timing e volume de dados processados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard Input Configuration Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software Development", "Input Automation", "Keyboard Event Handling"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "maxTextLength must be between 1 and 100000",
          "defaultDelayPerChar must be non-negative",
          "maxDelay must be between 0 and 3600000",
          "batchSize must be between 1 and 1000",
          "defaultMode must be one of: instant, perChar, total"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["dotenv (environment variable loader)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Immutable Configuration Object",
          "Environment-based Configuration",
          "Validation Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do sistema",
          "src/ - código fonte principal",
          "tests/ - testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para constantes e funções",
          "PascalCase para tipos e interfaces",
          "snake_case para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configurações isoladas em módulo próprio",
          "Validação separada da definição de constantes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e constantes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/keyboardConfig.test.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock environment variables with jest"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "Passing CI checks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Unit tests", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Environment variables should not expose sensitive data"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["N/A"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Delays configuráveis para otimização de performance"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balance entre velocidade de digitação e uso de recursos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["N/A"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Batch size configurável para escalabilidade no processamento"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Lançamento de Error com mensagens claras"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Debug mode habilita logs detalhados"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["N/A"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Validação prévia evita estados inválidos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["dotenv latest stable"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação poderia ser mais robusta para tipos e NaN"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falha silenciosa se variáveis de ambiente forem mal formatadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Configurações incorretas podem impactar performance de digitação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["N/A"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de limites e tipos", "Clareza e imutabilidade das configurações"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as funções e constantes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de dotenv para configuração via ambiente",
          "Imutabilidade das configurações para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["N/A"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "KEYBOARD_DEFAULT_MODE",
          "KEYBOARD_MAX_TEXT_LENGTH",
          "KEYBOARD_DEFAULT_DELAY_PER_CHAR",
          "KEYBOARD_MAX_DELAY",
          "KEYBOARD_BATCH_SIZE",
          "KEYBOARD_DEBUG"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limite máximo de delay para evitar bloqueios longos",
          "Batch size para controle de uso de memória"
        ]
      }
    ]
  },
  "src/config/logger.ts": {
    "summary": "Este arquivo configura um logger utilizando a biblioteca pino, adaptando seu comportamento conforme o ambiente de execução. Ele cria uma instância de logger que ajusta o nível de log dinamicamente com base na configuração do ambiente, e aplica um formato de saída humanamente legível (pino-pretty) durante o desenvolvimento, melhorando a legibilidade dos logs com cores e timestamps formatados. Em ambientes de produção, o logger opera em modo padrão, garantindo performance e simplicidade na geração dos logs. Essa configuração centraliza o controle de logging, facilitando a manutenção e a observabilidade do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Logger Configuration Module",
          "Centralized logging setup for environment-aware log output"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software Infrastructure", "Observability", "Logging"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Development"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Log level must reflect environment settings",
          "Development logs must be human-readable",
          "Production logs must be performant and minimal"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript ES Modules"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["pino 8.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton Logger Instance", "Environment-based Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["/src/logger - módulo responsável pela configuração e exportação do logger"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes (não aplicável aqui)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Logger isolado em módulo próprio, dependente apenas do environment e pino"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Nenhum type checking explícito (JavaScript puro)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Performance otimizada em produção", "Legibilidade em desenvolvimento"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis de log configuráveis via environment", "Formato human-readable em dev"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["pino", "environment.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./environment.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de níveis de log", "Configuração correta para ambientes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de pino-pretty apenas em desenvolvimento para melhor legibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["logLevel", "nodeEnv"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/config/mouse.config.ts": {
    "summary": "Este arquivo define uma configuração padrão para operações relacionadas ao mouse, centralizando parâmetros essenciais para controlar o comportamento de ações como movimentos e cliques. Ele extrai valores de variáveis de ambiente para permitir customização dinâmica, garantindo flexibilidade na duração mínima e máxima das ações, suavização do movimento, taxa de amostragem para interpolação e intervalos de streaming. A estrutura é imutável, promovendo segurança e previsibilidade no uso dessas configurações em diferentes partes do sistema, facilitando a integração com módulos que dependem de parâmetros consistentes para manipulação de eventos do mouse.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Control Configuration", "Configuração padrão para operações do mouse"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["User Interaction", "Input Device Management", "Mouse Event Handling"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Stable Configuration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "minDuration must be less than maxDuration",
          "Duration values must be positive integers",
          "Smooth movement flag must be boolean"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["None (Library/Utility Module)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["N/A"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Environment Variables (process.env)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Immutable Configuration Object", "Environment-based Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - arquivos de configuração",
          "src/ - código fonte principal",
          "types/ - definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para constantes e tipos", "snake_case para variáveis de ambiente"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configurações isoladas em módulo próprio",
          "Exportação de tipos para tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para comentários de código"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock environment variables"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "Passing CI checks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Unit Tests", "Build"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Environment variables devem ser protegidas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["N/A"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Configuração deve ser carregada rapidamente na inicialização"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na leitura de configurações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Configuração imutável evita necessidade de cache dinâmico"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Configuração centralizada facilita escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["N/A - valores padrão aplicados em caso de ausência"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["N/A"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["N/A"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para valores padrão em parsing de variáveis de ambiente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["process.env"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >= 4.5"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["N/A"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação de variáveis de ambiente pode ser melhorada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Valores inválidos em variáveis de ambiente podem causar comportamento inesperado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Estável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de valores padrão e tipos", "Imutabilidade das configurações"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários JSDoc para todas as propriedades"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Clareza e objetividade em comentários"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de variáveis de ambiente para flexibilidade",
          "Configuração imutável para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["N/A"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "MOUSE_MIN_DUR",
          "MOUSE_MAX_DUR",
          "MOUSE_DEFAULT_SMOOTH",
          "MOUSE_SAMPLE_RATE",
          "MOUSE_STREAM_INTERVAL",
          "MOUSE_DEFAULT_DURATION"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Variáveis de ambiente devem ser configuradas corretamente para evitar falhas"]
      }
    ]
  },
  "src/config/recorder.config.ts": {
    "summary": "Este arquivo de configuração gerencia parâmetros essenciais para o sistema de gravação (recorder) por meio de variáveis de ambiente, garantindo que valores críticos estejam dentro de limites seguros e válidos. Ele valida configurações como a inclusão de screenshots, intervalo de movimentação em milissegundos e tamanho máximo permitido para screenshots, lançando erros claros caso os valores estejam fora do esperado. Além disso, expõe a configuração validada para uso em outras partes do sistema e realiza logging em ambientes de desenvolvimento, facilitando a integração e manutenção do recorder dentro do ecossistema da aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Recorder System", "Sistema de gravação de eventos e screenshots"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software de monitoramento", "Automação de testes", "Captura de eventos UI"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "RECORDER_MOVE_INTERVAL_MS deve estar entre 20 e 200 ms",
          "RECORDER_MAX_SCREENSHOT_SIZE deve estar entre 10KB e 10MB",
          "RECORDER_INCLUDE_SCREENSHOT deve ser booleano implícito"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["dotenv 16.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Validation", "Fail-Fast"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - arquivos de configuração",
          "src/types - definições de tipos TypeScript",
          "src/modules - funcionalidades específicas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para tipos e classes",
          "MAIÚSCULO_SNAKE_CASE para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada em módulo próprio",
          "Tipos importados de pasta types",
          "Configuração exportada para uso global"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erro lançado com mensagem clara e específica"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Log de configuração em ambiente de desenvolvimento"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv", "RecorderConfig type"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../types/recorder-event.types.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de limites de configuração", "Clareza nas mensagens de erro"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Uso de JSDoc para funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Validação fail-fast para evitar configurações inválidas em runtime"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "RECORDER_INCLUDE_SCREENSHOT",
          "RECORDER_MOVE_INTERVAL_MS",
          "RECORDER_MAX_SCREENSHOT_SIZE",
          "NODE_ENV"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/entities/command-result.ts": {
    "summary": "Este arquivo define uma interface TypeScript chamada CommandResult, que padroniza o formato de resposta para a execução de comandos em serviços de automação. Seu propósito principal é encapsular o resultado de operações, indicando sucesso ou falha, e fornecendo dados ou mensagens de erro conforme apropriado. Essa estrutura simples e genérica facilita a interoperabilidade entre módulos, garantindo um contrato claro para o tratamento de respostas e erros em fluxos automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Serviço de Automação de Comandos"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Serviços", "Execução de comandos"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir resposta consistente para sucesso e falha",
          "Não perder mensagens de erro"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["DTO", "Interface Segregation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Interfaces definidas em pasta /interfaces para reutilização"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para interfaces", "camelCase para propriedades"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Interface isolada para padronizar comunicação entre serviços"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["success: boolean", "data?: any", "error?: string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/entities/mouse-action.ts": {
    "summary": "Este arquivo define uma abstração para ações de mouse em um ambiente de automação ou interface gráfica, encapsulando operações como movimento, clique, arrasto e rolagem. Ele utiliza interfaces e enums para tipar pontos e botões do mouse, garantindo precisão e flexibilidade na configuração das ações, como movimentos suaves ou cliques duplos. A classe MouseAction centraliza a criação dessas ações, facilitando a composição e execução de comandos de interação com o cursor, sendo ideal para sistemas que necessitam simular ou controlar eventos de mouse programaticamente, como testes automatizados ou ferramentas de automação de UI.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Automation Toolkit",
          "Biblioteca para simulação e controle de eventos de mouse"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Testes automatizados", "Interação com interface gráfica"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão na posição do cursor",
          "Execução correta da sequência de eventos",
          "Respeito aos tipos de botões e opções"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Method", "Domain Model"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/models - definições de tipos e interfaces",
          "src/actions - implementação das ações do mouse"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "Enums em PascalCase",
          "métodos estáticos para criação de instâncias"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos (interfaces/enums) e lógica de ação (classe MouseAction)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários das ações"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para simular eventos de mouse"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações devem ser executadas com latência mínima para simulação realista"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e precisão na execução das ações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte para múltiplas ações sequenciais ou paralelas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Exceções lançadas em caso de parâmetros inválidos"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs para depuração de ações de mouse"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reexecução ou fallback para ações falhas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Uso de 'as any' pode comprometer segurança de tipos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Falta de validação robusta dos parâmetros"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de tipos", "Clareza na definição das ações", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara das interfaces e métodos estáticos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Escolha do padrão Factory Method para criação de ações"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum específico para este módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Execução em ambientes com suporte a Node.js"]
      }
    ]
  },
  "src/domain/entities/screen-region.ts": {
    "summary": "Este arquivo define interfaces e uma classe para manipulação de regiões retangulares na tela, focando em operações geométricas básicas como verificação de contenção e cálculo do centro. A interface Region especifica propriedades essenciais para delimitar uma área retangular, enquanto MatchResult estende Region adicionando um valor de confiança, sugerindo uso em reconhecimento ou detecção de padrões. A classe ScreenRegion implementa Region e oferece métodos para verificar se um ponto está dentro da região, calcular o ponto central e criar instâncias a partir de resultados de detecção, facilitando a integração com sistemas de reconhecimento visual ou automação. O código é estruturado para garantir imutabilidade das propriedades da região e promover reutilização e interoperabilidade em contextos que envolvem análise espacial e processamento de imagens.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "ScreenRegion Management",
          "Manipulação de regiões retangulares para reconhecimento visual"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "Automação", "Image Processing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Regiões devem ser definidas com coordenadas válidas",
          "Confiança deve ser considerada para decisões automatizadas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Method", "DTO", "Encapsulation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/models - definições de interfaces e classes de domínio",
          "src/utils - funções utilitárias relacionadas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para classes e interfaces", "camelCase para métodos e variáveis"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre interfaces e implementações",
          "Uso de métodos estáticos para conversão entre tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários das classes e interfaces"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dados de entrada de regiões e resultados de detecção"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência para operações de contenção e cálculo de centro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [""]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Falta de validação de parâmetros nas classes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [""]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [""]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [""]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de imutabilidade", "Cobertura de testes", "Clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de factory method para criação a partir de MatchResult"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [""]
      }
    ]
  },
  "src/domain/interfaces/automation-service.interface.ts": {
    "summary": "Este arquivo define uma interface base para serviços de automação, estabelecendo um contrato comum para todos os serviços que executam comandos automatizados dentro do sistema. Embora a interface em si não implemente métodos, ela funciona como uma marcação para padronizar e identificar serviços de automação, facilitando a integração e extensão futura. Essa abordagem modular permite que diferentes serviços específicos implementem seus próprios métodos, garantindo flexibilidade e consistência na arquitetura do sistema de automação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Services Framework",
          "Plataforma para execução e gerenciamento de comandos automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de processos", "Command Execution", "Automation Services"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Desenvolvimento inicial", "Definição de contratos e interfaces"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Serviços de automação devem implementar contratos definidos",
          "Execução de comandos deve ser consistente e rastreável"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico definido neste arquivo"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Importação de entidades internas para resultados de comandos"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Interface", "Marker Interface", "Modular Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "entities/: entidades de domínio",
          "services/: serviços de automação",
          "interfaces/: contratos e definições"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I'",
          "CamelCase para classes e interfaces",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre entidades, serviços e interfaces",
          "Dependências unidirecionais para evitar acoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style", "JSDoc para documentação"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços de automação e resultados de comandos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa complexidade, foco em extensibilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Interface permite múltiplas implementações escaláveis"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não definido nesta interface"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não definido nesta interface"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não definido nesta interface"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não definido nesta interface"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["entities/command-result.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["entities", "services", "interfaces"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Interface ainda sem métodos definidos pode levar a inconsistências"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum conhecido neste arquivo"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Em fase inicial, sem migrações"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência na implementação de interfaces", "Clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as interfaces e métodos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Marker Interface para padronizar serviços de automação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável neste arquivo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhuma variável específica neste arquivo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Nenhuma restrição específica neste arquivo"]
      }
    ]
  },
  "src/index.ts": {
    "summary": "Este arquivo implementa um servidor HTTP utilizando o framework Fastify, configurado para atuar como backend de uma API RESTful. Ele inicializa dependências via injeção, registra rotas específicas para automação sob o prefixo '/api/v1', e define um endpoint de health check para monitoramento do estado do serviço. O servidor é configurado para logar eventos com níveis ajustáveis conforme o ambiente, além de possuir um middleware centralizado para tratamento de erros. Também implementa um mecanismo de shutdown gracioso para garantir encerramento seguro em sinais do sistema, assegurando estabilidade e confiabilidade operacional em ambientes de produção e desenvolvimento.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["API Automation Server"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Backend API", "Serviços Web"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Tratamento centralizado de erros",
          "Disponibilidade do endpoint health",
          "Shutdown gracioso para evitar perda de dados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Middleware", "Modular Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config: configurações e injeção de dependências",
          "routes: definição de rotas da API",
          "interface/middleware: middlewares para tratamento de erros",
          "entrypoint: arquivo principal do servidor"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes e tipos",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração, rotas, middleware e inicialização do servidor"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, sem regras explícitas no código"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão, uso de pino-pretty para logs em dev"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e módulos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Logging configurável para balancear performance e debug",
          "Graceful shutdown para evitar perda de requisições"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Configuração de host e porta via variáveis de ambiente para deploy flexível"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Middleware centralizado para padronização de respostas de erro"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Uso do pino com níveis configuráveis e transporte pino-pretty em desenvolvimento"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Shutdown gracioso para evitar falhas abruptas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "pino", "reflect-metadata"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./routes/automation.routes.js",
          "./interface/middleware/error-handler.middleware.js",
          "./config/dependency-injection.js",
          "./config/environment.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de autenticação e autorização explícita",
          "Falta de testes automatizados visíveis"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Tratamento adequado de erros",
          "Configuração correta do ambiente"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara das rotas e middleware"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de Fastify para alta performance e modularidade",
          "Uso de dependency injection para escalabilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Prefixo '/api/v1' para versionamento"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["port", "host", "nodeEnv", "logLevel"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-keyboard.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador de teclado utilizando a biblioteca NutJS, fornecendo uma interface abstrata para operações de teclado que incluem digitação de texto, pressionamento e liberação de teclas individuais, além de combinações de teclas. O adaptador encapsula a complexidade da biblioteca NutJS, mapeando strings representativas para as constantes de teclas da biblioteca, garantindo tratamento de erros robusto e abstração para uso em camadas superiores do sistema. Suas funcionalidades permitem automação de entrada de teclado de forma programática, suportando desde texto simples até combinações complexas como atalhos de sistema, sendo essencial para sistemas que necessitam de controle remoto ou automatizado do teclado em ambientes multiplataforma.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Keyboard Adapter", "Automação e controle de teclado programático"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Automação de interface",
          "Controle remoto de dispositivos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir mapeamento correto de teclas",
          "Manter integridade das operações assíncronas",
          "Tratar erros de forma clara e consistente"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.7.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Adapter", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/services - serviços de domínio",
          "src/infrastructure/adapters - adaptadores para bibliotecas externas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para métodos e variáveis",
          "snake_case evitado"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre aplicação e infraestrutura",
          "Interfaces definem contratos entre camadas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any explícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de dependências externas com jest.mock"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações assíncronas devem ser rápidas para não impactar UX"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de execução das operações de teclado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados com mensagens claras e prefixadas"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [""]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["NutJS versão compatível com TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services/keyboard.service.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Duplicação do mapeamento de teclas em múltiplos métodos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível latência em combinações longas de teclas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Execução sequencial de pressKey e releaseKey pode impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [""]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Clareza na abstração", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do Adapter para desacoplar NutJS",
          "Injeção de dependência para facilitar testes"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipeline"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [""]
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-mouse.adapter.ts": {
    "summary": "O arquivo implementa um adaptador de mouse utilizando a biblioteca Nut.js para abstrair operações de controle do mouse em um ambiente TypeScript. Ele oferece funcionalidades para movimentação do cursor com suporte a movimentos instantâneos e suaves via interpolação linear, cliques simples e duplos, arrasto de elementos, rolagem vertical e obtenção da posição atual do mouse. O adaptador integra-se a um sistema maior por meio da interface IMouseAdapter, garantindo desacoplamento e injeção de dependências, além de configurar parâmetros como velocidade do mouse conforme variáveis de ambiente. Seu comportamento central foca em traduzir comandos de alto nível em ações físicas precisas e controladas do mouse, habilitando automação e controle programático de interfaces gráficas com alta fidelidade e flexibilidade.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Control Automation", "Nut.js Mouse Adapter"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de Interface", "Controle de dispositivos de entrada", "Mouse Actions"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Movimentação precisa do cursor",
          "Execução correta de cliques e arrastos",
          "Configuração dinâmica da velocidade do mouse"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Nut.js (mouse control library)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - Serviços de aplicação",
          "domain/entities - Entidades de domínio",
          "config - Configurações do sistema",
          "adapters - Implementações concretas de interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase",
          "Interfaces prefixadas com I",
          "Constantes em camelCase ou PascalCase",
          "Métodos em camelCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências unidirecionais do domínio para aplicação e infraestrutura"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e privados"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de dependências externas como Nut.js"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Movimentação instantânea deve ser imediata",
          "Movimentação suave respeita duração configurada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Precisão e suavidade do movimento priorizadas sobre uso mínimo de CPU"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Nut.js", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "domain/entities", "config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Uso de delays pode impactar performance em movimentos longos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de injeção de dependências",
          "Precisão dos movimentos",
          "Tratamento assíncrono correto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do Nut.js para controle de mouse",
          "Uso de DI para facilitar testes e manutenção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipelines"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["environment.mouseSpeed"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-screen.adapter.ts": {
    "summary": "O arquivo implementa um adaptador de captura de tela utilizando a biblioteca NutJS, focado em fornecer uma interface para capturar imagens da tela inteira ou de regiões específicas, convertendo os dados brutos em imagens PNG otimizadas. Ele integra funcionalidades básicas de captura com logging detalhado para monitoramento e diagnóstico, embora funcionalidades de busca e espera por templates ainda estejam pendentes de implementação. O componente é projetado para ser injetável e configurável, facilitando sua integração em sistemas maiores que demandam manipulação e análise de imagens de tela para automação ou monitoramento visual.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "NutJS Screen Capture Adapter",
          "Serviço de captura e processamento de tela para automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Screen Capture", "Image Processing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Desenvolvimento inicial", "Implementação parcial com funcionalidades pendentes"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Captura precisa e confiável da tela",
          "Conversão correta e eficiente para PNG",
          "Logging detalhado para auditoria"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS Screen API", "Sharp image processing library"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - serviços de aplicação",
          "domain/entities - entidades de domínio",
          "config - configurações do ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "Prefixo 'I' para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências unidirecionais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint-config-standard-with-typescript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para tipos e métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Eficiência na conversão de imagens", "Minimização do uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erro lançado com objeto Error padrão"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging estruturado com pino", "Níveis debug, info, error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "sharp", "pino", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../../application/services/screen.service.js",
          "../../../domain/entities/screen-region.js",
          "../../../config/environment.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Implementação incompleta dos métodos find e waitFor"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de logging", "Tratamento de erros", "Clareza e modularidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para métodos públicos e interfaces"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de emojis para facilitar leitura"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de NutJS para captura de tela",
          "Sharp para processamento de imagens",
          "Injeção de dependência com tsyringe"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Buffer PNG para captura de tela"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["environment.screenConfidence"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/recorder-mouse.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador especializado para manipulação de eventos de mouse dentro de um sistema de gravação de ações do usuário, estendendo funcionalidades básicas de controle do mouse para incluir a emissão de eventos detalhados durante operações de drag. O componente central é a classe RecorderMouseAdapter, que intercepta e complementa ações de movimento e clique do mouse, emitindo eventos estruturados para um EventDispatcher, permitindo o monitoramento e registro preciso das interações do usuário. A lógica inclui a divisão do movimento de arrastar em múltiplos passos com emissão periódica de eventos, garantindo sincronização temporal e granularidade na captura dos dados, o que é essencial para sistemas de automação, testes ou gravação de macros. A integração com bibliotecas externas como nut-js e tsyringe indica um design modular e injetável, facilitando testes e manutenção. O código prioriza a precisão temporal e a fidelidade dos eventos, habilitando funcionalidades avançadas de replay e análise comportamental em aplicações que dependem de input de mouse detalhado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["RecorderMouseAdapter", "Mouse event recording and dispatching system"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Input event recording", "Mouse interaction tracking"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão temporal na emissão de eventos",
          "Integridade dos eventos de input",
          "Sincronização entre movimento físico e eventos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter", "Observer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/ - entidades e modelos de negócio",
          "application/services/ - serviços de aplicação como EventDispatcher",
          "config/ - configurações globais",
          "adapters/ - adaptadores para hardware e input"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências unidirecionais para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de EventDispatcher e nut-js para isolar testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test", "Deploy automático para staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Eventos de mouse emitidos com intervalo máximo definido por recorderConfig.moveIntervalMs"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Precisão temporal e fidelidade dos eventos priorizados sobre uso mínimo de CPU"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Arquitetura modular para permitir extensão para outros dispositivos de input"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "tsyringe", "EventDispatcher"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../../application/services/event-dispatcher.service.js",
          "../../../domain/entities/mouse-action.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Uso de delays pode impactar performance em cenários de alta frequência"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na emissão de eventos",
          "Manutenção da sincronização temporal",
          "Uso correto de injeção de dependências"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos métodos públicos e eventos emitidos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos, sem redundância"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do nut-js para controle de mouse",
          "Uso de tsyringe para DI",
          "Emissão de eventos via EventDispatcher para desacoplamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipeline"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["recorderConfig.moveIntervalMs"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/controllers/automation.controller.ts": {
    "summary": "O arquivo define a classe AutomationController, responsável por expor uma API REST para automação de interações com o mouse e captura/análise de tela, utilizando o framework Fastify. Ele implementa endpoints para movimentação, clique, arrasto e scroll do mouse, além de fornecer a posição atual do cursor e um streaming contínuo via Server-Sent Events. Também oferece funcionalidades para encontrar padrões na tela e capturar imagens, integrando serviços especializados para mouse e tela. O controlador aplica validação de schemas JSON para as requisições, autenticação em endpoints sensíveis e logging estruturado, garantindo robustez e segurança na automação de tarefas de interface gráfica.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation API", "Controle e automação de mouse e tela"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de interface gráfica",
          "Automação de testes",
          "RPA (Robotic Process Automation)"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação obrigatória para streaming de posição do mouse",
          "Validação rigorosa de schemas JSON para todas as requisições",
          "Garantia de resposta consistente com status de sucesso"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Nenhum serviço externo explícito, mas integra com serviços internos MouseService e ScreenService"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Controller Pattern", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio para mouse e tela",
          "application/dto - objetos de transferência de dados",
          "config - configurações e constantes",
          "controllers - definição dos endpoints REST",
          "middleware - autenticação e validações",
          "schemas - validação JSON Schema"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase (ex: AutomationController)",
          "Funções e métodos em camelCase",
          "Arquivos com extensão .js ou .ts seguindo o nome da classe ou funcionalidade",
          "Constantes em PascalCase (ex: MouseDefaults)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controller e serviços",
          "Dependência unidirecional via injeção de dependência",
          "Middleware isolado para autenticação",
          "Schemas separados para validação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo regras de segurança e estilo"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com tipagem explícita para requests e responses"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos serviços e controllers"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços MouseService e ScreenService usando Jest mocks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória, testes passando e linting aprovado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key' para endpoints sensíveis"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Acesso restrito ao endpoint de streaming de posição do mouse"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Dados de posição do mouse e imagens de tela devem ser protegidos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy",
          "X-Content-Type-Options",
          "Cache-Control",
          "Connection"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Recomenda-se uso de HTTPS para todas as comunicações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações de mouse e tela devem responder em menos de 200ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência para comandos de mouse e streaming eficiente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável para dados dinâmicos de posição e captura"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplas conexões simultâneas para streaming SSE"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Resposta JSON com campo success e mensagens de erro padronizadas"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de pino para logs estruturados com níveis info, debug e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Integrável com sistemas externos via logs (ex: ELK, Datadog)"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros em streaming para encerrar conexões e limpar recursos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["MouseService", "ScreenService", "Fastify", "tsyringe", "pino"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.0.0", "TypeScript >=5.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "application/dto", "config", "middleware", "schemas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de testes mais abrangentes para streaming SSE"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível vazamento de recursos se conexão SSE não for fechada corretamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Latência na obtenção da posição do mouse em intervalos muito curtos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Segurança, tratamento de erros, clareza de código e cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para todos os métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e explicativos, uso de inglês técnico para termos específicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de SSE para streaming por simplicidade e compatibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful API"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Sem versionamento explícito no path, versionamento implícito via deploy"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos success e data"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado explicitamente, recomendado para endpoints sensíveis"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containerizado, orquestração via Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY", "NODE_ENV", "LOG_LEVEL"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de conexões persistentes para SSE, limitação de memória para múltiplas streams"
        ]
      }
    ]
  },
  "src/interface/controllers/input-events.controller.ts": {
    "summary": "Este arquivo implementa um controller para streaming de eventos de input via Server-Sent Events (SSE), permitindo a transmissão em tempo real de cliques do mouse e teclas digitadas para clientes conectados. Ele gerencia conexões persistentes, reenvio de eventos perdidos com base no Last-Event-ID, manutenção de um buffer de eventos para replay e limpeza do buffer via endpoints dedicados. Além disso, oferece endpoints para obtenção de estatísticas do sistema de eventos e controle do buffer, garantindo alta disponibilidade e integridade dos dados transmitidos, com mecanismos de heartbeat para manter conexões ativas e logging detalhado para monitoramento e depuração. A arquitetura modular e injeção de dependências facilitam a integração com serviços de dispatcher e buffer, promovendo escalabilidade e manutenção eficiente do sistema de streaming de eventos de input.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Input Events Streaming Service",
          "Streaming de eventos de input em tempo real via SSE"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Real-time event streaming", "User input tracking", "SSE (Server-Sent Events)"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir entrega ordenada e completa dos eventos",
          "Manter conexões SSE ativas com heartbeat",
          "Preservar integridade do buffer de eventos para replay"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Logger service (custom)", "Config service (inputEventsConfig)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Observer Pattern", "MVC (Controller layer)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - serviços de negócio",
          "config - configurações e logger",
          "types - definições de tipos",
          "controllers - camada de controle HTTP"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "kebab-case para endpoints"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers dependem de serviços via injeção",
          "Serviços isolados para lógica de buffer e dispatcher",
          "Tipos compartilhados via pasta types"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any explícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão", "Quebra de linha em 80-100 caracteres"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos", "Comentários em português para contexto"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Tipos explícitos para parâmetros e retornos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ ao lado dos controllers e serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "Mocking de dependências via ts-mockito ou jest.mock"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de EventDispatcher e EventBuffer para testes unitários"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código (possível autenticação externa)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não implementado explicitamente no controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Cache-Control: no-cache", "Connection: keep-alive", "X-Accel-Buffering: no"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não tratado no código (depende do transporte HTTPS externo)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para streaming SSE"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e alta disponibilidade", "Minimizar overhead de buffering"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer local de eventos para replay"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplos clientes SSE simultâneos",
          "Heartbeat para manter conexões vivas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs detalhados via logger", "Resposta padrão JSON para endpoints REST"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logger customizado com níveis info, debug e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado, mas logger sugere integração externa possível"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros no envio SSE com limpeza de heartbeat"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Fastify",
          "tsyringe",
          "EventDispatcher",
          "EventBuffer",
          "inputEventsConfig",
          "logger"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "TypeScript 5.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../application/services/event-dispatcher.service.js",
          "../../application/services/event-buffer.service.js",
          "../../config/input-events.config.js",
          "../../config/logger.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Autenticação e autorização não implementadas",
          "Monitoramento e alertas não integrados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível desconexão silenciosa se heartbeat falhar"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Buffer pode crescer indefinidamente sem pruning"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Tratamento de erros", "Clareza e documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para métodos públicos", "Comentários em português para contexto"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e claros", "Uso de português para contexto"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de SSE para streaming em tempo real",
          "Injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com endpoints SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Prefixo /api/v1 para versionamento"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para endpoints REST", "text/event-stream para SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Configuração maxRate no inputEventsConfig (não implementado explicitamente)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes (provável)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configurações via inputEventsConfig (heartbeatMs, bufferSize, etc.)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de manter conexões SSE abertas",
          "Suporte a proxy sem buffering (X-Accel-Buffering: no)"
        ]
      }
    ]
  },
  "src/interface/controllers/keyboard.controller.ts": {
    "summary": "Este arquivo implementa um controller REST para operações de automação relacionadas a teclado e clipboard, permitindo a interação programática com entrada de texto e gerenciamento da área de transferência. Ele expõe endpoints para digitar texto com controle de timing, pressionar teclas individuais, executar combinações de teclas, além de copiar, colar e limpar o conteúdo do clipboard. O controller utiliza injeção de dependências para integrar serviços especializados, valida as requisições via schemas JSON e gerencia respostas padronizadas, incluindo tratamento robusto de erros e logging detalhado. Essa funcionalidade habilita automações de input e manipulação de clipboard em aplicações que demandam controle remoto ou testes automatizados, garantindo consistência e segurança nas operações de entrada e saída de dados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard and Clipboard Automation Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automation", "Input Control", "Clipboard Management", "Software Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que operações de teclado e clipboard sejam executadas com sucesso ou retornem erros claros",
          "Validar rigorosamente os dados de entrada para evitar comandos inválidos",
          "Manter integridade e segurança dos dados manipulados no clipboard"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Controller-Service Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio e serviços",
          "application/dto - objetos de transferência de dados e validações",
          "controllers - definição de endpoints REST",
          "schemas - definições JSON Schema para validação",
          "middleware - middlewares para validação e tratamento"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase (KeyboardController, KeyboardService)",
          "Métodos em camelCase (registerRoutes, clipboardCopy)",
          "Schemas com sufixo JsonSchema",
          "DTOs com sufixo Request"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers expõem rotas e delegam lógica para services",
          "Services encapsulam regras de negócio e interações com hardware ou sistema",
          "DTOs e schemas isolam validação e tipagem"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint-config-standard", "no-explicit-any restrito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode enabled)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos controllers e services"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços externos e injeção de dependências"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não implementado neste controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente, deve ser tratado em middleware externo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard tratado com cuidado para evitar vazamento"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Configuração externa ao controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações devem responder em milissegundos, exceto typing com timing configurável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e confiabilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via instâncias Fastify"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success:boolean, data:object, error:string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis info e error via Fastify logger"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retorno de erro padronizado e captura de exceções para evitar crashes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "tsyringe", "keyboardService", "clipboardService"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "application/dto", "controllers", "schemas", "middleware"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Uso de any para logger pode ser melhorado para tipagem forte"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum problema funcional aparente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Operação type pode ser lenta dependendo do timing configurado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Projeto em produção, sem migrações ativas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de schemas, tratamento de erros, logging e injeção de dependências"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para novos endpoints e serviços"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e informativos, sem excesso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Fastify para alta performance e tsyringe para DI"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não implementado explicitamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padronizado com success, data e error"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado neste controller"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containerizado com orquestração externa"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configuração externa via environment.ts, sem valores sensíveis no código"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de acesso a APIs de sistema para manipulação de teclado e clipboard"]
      }
    ]
  },
  "src/interface/controllers/recorder.controller.ts": {
    "summary": "Este arquivo implementa um Controller responsável pelo streaming de eventos gravados de interações do usuário, como mouse e teclado, utilizando Server-Sent Events (SSE) para comunicação em tempo real. Ele gerencia conexões ativas, enviando eventos em tempo real e mantendo a conexão viva com heartbeats periódicos. Além disso, oferece uma API para consulta de estatísticas do sistema, integrando-se com serviços de buffer e listener para garantir a entrega e gerenciamento dos eventos. O código é estruturado para suportar múltiplas conexões simultâneas, com tratamento de desconexão e potencial replay de eventos perdidos, embora esta última funcionalidade ainda não esteja implementada. A arquitetura segue princípios de injeção de dependência e modularidade, facilitando a manutenção e extensão do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recorder Streaming Service",
          "Streaming de eventos gravados de interação do usuário"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["User Interaction Recording", "Real-time Event Streaming", "SSE", "Fastify"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir entrega em tempo real dos eventos",
          "Manter conexões SSE ativas e estáveis",
          "Não perder eventos durante streaming"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Logger customizado", "Configuração externa de recorder"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Observer Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio",
          "config - configurações e logger",
          "types - definições de tipos",
          "controllers - interface HTTP"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "snake_case para IDs gerados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controller e serviços",
          "Injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any explícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Tipos explícitos para parâmetros e retornos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "Mock de serviços externos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de RecorderListenerService e EventBuffer"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código (possível autenticação externa)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não implementado explicitamente no controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Eventos de interação do usuário (mouse, teclado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Cache-Control: no-cache", "Connection: keep-alive", "X-Accel-Buffering: no"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não tratado diretamente no código"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para streaming SSE"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e estabilidade da conexão"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer de eventos para replay (implementação futura)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Gerenciamento de múltiplas conexões SSE simultâneas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs estruturados via logger", "Tratamento de erros no envio SSE"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis info, debug e error", "Logs para conexões e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado, presumivelmente externo"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Remoção de listeners e limpeza de conexões fechadas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "tsyringe", "RecorderListenerService", "EventBuffer", "logger"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Não especificado no código"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../application/services", "../../config", "../../types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Replay de eventos não implementado",
          "Possível melhoria no tratamento de erros SSE"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Conexões SSE podem ser fechadas inesperadamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Gerenciamento de múltiplas conexões e envio de eventos em alta frequência"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Manutenção da estabilidade SSE", "Tratamento correto de erros e desconexões"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de DI para desacoplamento", "Uso de SSE para streaming em tempo real"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com endpoints SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para dados, text/event-stream para SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no controller"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configurações externas para recorderConfig e logger"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de suporte a conexões SSE persistentes"]
      }
    ]
  },
  "src/interface/middleware/auth.middleware.ts": {
    "summary": "Este arquivo implementa um middleware de autenticação para uma aplicação backend utilizando Fastify, cuja função principal é validar a presença e a validade de uma API key enviada via header HTTP 'x-api-key'. O middleware intercepta requisições, compara a chave recebida com a chave configurada no ambiente e, caso a validação falhe, responde com status 401 Unauthorized, bloqueando o acesso. Essa abordagem garante controle de acesso simples e eficaz para proteger endpoints sensíveis, integrando-se ao fluxo de requisições do servidor e habilitando uma camada básica de segurança para a API. O código é conciso, focado em autenticação baseada em chave estática, sem manipulação de estado além da resposta HTTP, e depende da configuração externa para a chave de autenticação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["API Authentication Middleware", "Controle de acesso via API key"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Segurança", "Autenticação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Requisições devem conter API key válida",
          "Falha na autenticação bloqueia acesso"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Middleware Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["config/ - configurações de ambiente", "middlewares/ - middlewares da aplicação"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para funções e variáveis", "PascalCase para tipos e classes"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre configuração e lógica de middleware"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/middlewares/"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de requisição e resposta Fastify"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Testes automatizados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via HTTP Header"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Requisição deve conter API key válida para acesso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API key armazenada em variáveis de ambiente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Transporte via HTTPS obrigatório"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta imediata para autenticação, < 100ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Middleware leve para alta escalabilidade"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success: false e error: string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Bloqueio imediato sem retry"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "environment configuration"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.0.0", "TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../config/environment.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Autenticação baseada em chave estática pode ser melhorada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Ausência de logs para tentativas falhas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Segurança da autenticação", "Clareza e simplicidade do middleware"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para middlewares"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de API key estática para autenticação simples"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/middleware/error-handler.middleware.ts": {
    "summary": "Este arquivo implementa um mecanismo robusto e centralizado de tratamento de erros para aplicações construídas com Fastify, focando em capturar, categorizar e responder adequadamente a diferentes tipos de exceções que podem ocorrer durante a execução. Ele define classes customizadas para erros de domínio, como NotFoundError, UnauthorizedError e LimitExceededError, facilitando a padronização das respostas HTTP e códigos de erro associados. O handler de erros processa erros de validação do Zod, erros específicos do Fastify, erros de domínio e erros genéricos, garantindo respostas estruturadas e logs detalhados para facilitar o monitoramento e a depuração, além de adaptar o nível de detalhe das mensagens conforme o ambiente (desenvolvimento ou produção).",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "API Error Handling Module",
          "Centralized error management for Fastify-based APIs"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Error handling", "HTTP status management", "Domain-driven design"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Stable error handling implementation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistent error response format",
          "Proper HTTP status codes",
          "No leakage of sensitive error details in production"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Domain Error Pattern", "Middleware Pattern", "Centralized Error Handling"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/errors - classes de erro customizadas",
          "/handlers - middlewares e handlers globais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Classes PascalCase", "Funções camelCase", "Constantes UPPER_SNAKE_CASE"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Errores de domínio isolados em módulo próprio",
          "Handler de erro centralizado importado no core do servidor"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo regras para erros e imports"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para classes e funções"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript settings (strictNullChecks, noImplicitAny)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["/tests/unit/errors", "/tests/integration/errorHandler"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90% coverage on error handling modules"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "Mocking Fastify request and reply"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para FastifyRequest e FastifyReply", "Fixtures para erros customizados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test", "Deploy automático para staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install && npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT (externamente gerenciado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Erros 401 e 403 para controle de acesso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Não expor stack trace em produção",
          "Mensagens de erro genéricas para usuários finais"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Respostas de erro rápidas para não impactar UX"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência", "Logging eficiente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Handler deve ser stateless e escalável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error, code e detalhes opcionais"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logging estruturado com contexto da requisição",
          "Níveis de log ajustados por ambiente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Respostas padronizadas para facilitar retry e tratamento no cliente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.x", "Zod >=3.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de padronizar novos erros customizados"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível excesso de logs em ambiente de desenvolvimento"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência no tratamento de erros", "Cobertura de testes para casos de erro"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar novas classes de erro e formatos de resposta"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do DomainError para padronizar erros de negócio"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padronizado com success, error, code e detalhes"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/middleware/validation.middleware.ts": {
    "summary": "Este arquivo implementa uma função middleware para validação de requisições HTTP em um servidor Fastify utilizando schemas do Zod. Seu propósito principal é garantir que o corpo da requisição esteja conforme o schema definido, promovendo a integridade dos dados recebidos antes do processamento posterior. Em caso de falha na validação, a função responde com um erro 400 detalhado, evitando que dados inválidos avancem na pipeline, o que contribui para a robustez e segurança da aplicação. A abordagem assíncrona e o uso de tipagem forte com Fastify e Zod facilitam a integração e manutenção em sistemas modernos baseados em TypeScript.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Fastify API Validation Middleware"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Validation", "TypeScript", "Fastify"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Request body must strictly conform to defined Zod schemas",
          "Invalid requests must be rejected with HTTP 400"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Middleware Pattern", "Schema Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/middleware - middlewares para validação e autenticação",
          "src/schemas - definições de schemas Zod",
          "src/routes - definição das rotas Fastify"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e classes",
          "validateRequest para middleware de validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Middleware isolado para validação, desacoplado da lógica de negócio",
          "Schemas importados e reutilizados nas rotas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para TypeScript e Fastify"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript settings (strictNullChecks, noImplicitAny)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/middleware - testes unitários para middlewares"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% coverage"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock FastifyRequest and FastifyReply objects"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "Passing CI checks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["{ success: false, error: string, message: string }"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reject invalid requests with HTTP 400 and descriptive message"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["fastify >=4.x", "zod >=3.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta de schemas", "Tratamento adequado de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar middleware e schemas com JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação por ser declarativo e integrado com TypeScript"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/schemas/automation.schemas.ts": {
    "summary": "Este arquivo define múltiplos JSON Schemas para validação de objetos relacionados a interações de mouse e operações de captura e busca na tela, focando em ações como movimento, clique, arrasto e scroll do mouse, além de funcionalidades de reconhecimento e captura de regiões específicas da tela. Cada schema especifica propriedades detalhadas, tipos e restrições para garantir a integridade dos dados de entrada, como coordenadas, duração, suavidade e botões do mouse, além de parâmetros para reconhecimento visual com níveis de confiança e regiões delimitadas. O comportamento central do código é fornecer uma estrutura rigorosa para validar comandos de automação de interface gráfica, assegurando que as ações sejam executadas com parâmetros corretos e consistentes, facilitando a integração com sistemas de automação e testes visuais. A ausência de propriedades adicionais e a definição de valores padrão indicam um controle estrito sobre os dados, promovendo segurança e previsibilidade no uso das ações definidas. Este conjunto de schemas é essencial para garantir que as interações com a interface sejam precisas, configuráveis e validadas antes da execução, suportando fluxos automatizados robustos e confiáveis.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse and Screen Interaction Automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de Interface Gráfica", "UI Automation", "Testes Automatizados"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos parâmetros de entrada",
          "Proibição de propriedades adicionais não definidas",
          "Garantia de valores dentro dos limites especificados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Data Contract"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Schemas definidos em módulo separado para validação e reutilização"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para propriedades", "PascalCase para constantes exportadas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre schemas de diferentes ações (mouseMove, mouseClick, etc.)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript typings via JSON Schema"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/schemas/clipboard.schemas.ts": {
    "summary": "Este arquivo define JSON Schemas compatíveis com JSON Schema Draft 7 para validação de requisições relacionadas ao gerenciamento de clipboard em uma aplicação Fastify. Ele especifica um schema para o endpoint de copiar conteúdo para o clipboard, exigindo uma string não vazia com limite implícito de tamanho, e schemas vazios para os endpoints de colar e limpar o clipboard, garantindo que não sejam aceitas propriedades adicionais. O foco principal é garantir a integridade e conformidade dos dados recebidos para operações de clipboard, facilitando a validação automática e segura das requisições HTTP, sem alterar estado diretamente, mas definindo contratos claros para integração com a lógica de negócio do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Clipboard API Validation Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["API Development", "Clipboard Management", "Fastify Framework"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Content must be a non-empty string",
          "No additional properties allowed in requests"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Declarative Validation", "Modular Schema Design"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["schemas/ - Contém definições de JSON Schema para validação de endpoints"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e propriedades", "PascalCase para tipos e interfaces"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Schemas isolados para cada endpoint, importados conforme necessidade"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/schemas/ - testes unitários para validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock JSON payloads para validação"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não definido no schema"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não definido no schema"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard tratado como string simples"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Gerenciados externamente ao schema"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável no schema"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não definido no schema"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação leve e rápida"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Schemas reutilizáveis para múltiplos endpoints"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Padronizado pelo Fastify via JSON Schema validation errors"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Gerenciado externamente"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não definido no schema"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Rejeição de requisições inválidas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["json-schema", "fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatível com JSON Schema Draft 7"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação de tamanho máximo do conteúdo não implementada no schema"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível aceitação de payloads maiores que 1MB sem validação extra"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Conformidade com JSON Schema", "Clareza e simplicidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para schemas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários técnicos objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de JSON Schema Draft 7 para validação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não definido no schema"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não definido no schema"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/schemas/keyboard.schemas.ts": {
    "summary": "Este arquivo define JSON Schemas compatíveis com Draft 7 para validação de requisições relacionadas a operações de teclado em um servidor Fastify. Ele especifica três schemas distintos para endpoints que permitem digitar texto, pressionar uma tecla individual e enviar combinações de teclas, garantindo que os dados recebidos estejam estruturados e validados conforme regras claras, como tipos, tamanhos e valores permitidos. A funcionalidade habilita controle programático e seguro de interações de teclado, suportando modos de digitação variados e combinações complexas, facilitando a integração com sistemas que necessitam simular ou processar eventos de teclado de forma robusta e padronizada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard Input Validation Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automation", "Input Simulation", "Keyboard Events"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Input data must conform to JSON Schema Draft 7",
          "No additional properties allowed in requests",
          "Text input length between 1 and 10000 characters"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Declarative Validation", "Schema-based Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["schemas/ - Contém definições JSON Schema para validação de dados de entrada"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para propriedades JSON", "PascalCase para constantes exportadas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Schemas isolados para cada tipo de operação de teclado, importados conforme necessidade"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para comentários de tipos e propriedades"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/schemas/ - testes unitários para validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90% cobertura para schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de requisições HTTP para validação de schemas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação rápida e eficiente para alta performance"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Padrão JSON Schema Validation Error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["json-schema", "fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["json-schema compatible with Draft 7"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta dos schemas", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de JSON Schema Draft 7 para validação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/routes/automation.routes.ts": {
    "summary": "O arquivo define um conjunto de rotas assíncronas para um servidor Fastify, centralizando a orquestração de múltiplos controladores responsáveis por automação, manipulação de teclado, integração com Large Language Models (LLM), streaming de eventos de input e gravação de ações. Seu comportamento principal é registrar e expor endpoints HTTP que habilitam funcionalidades de automação e interação com dispositivos e serviços externos, promovendo modularidade e escalabilidade na arquitetura do backend. Através da composição de plugins e controllers, o código integra diferentes domínios funcionais, facilitando a extensão e manutenção do sistema, além de garantir que as rotas estejam organizadas e prefixadas conforme o contexto de uso.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation Backend", "Sistema de automação e controle via API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Backend API", "Integração com LLM", "Input Events Streaming"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Registro correto e seguro das rotas",
          "Isolamento das funcionalidades por módulo",
          "Resposta rápida e estável do servidor"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LLM APIs (não especificadas)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Plugin Pattern", "Controller Pattern", "Modular Route Composition"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "interface/controllers - lógica de controle",
          "routes - definição de rotas",
          "plugins - composição de funcionalidades"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para arquivos de rotas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controllers e rotas",
          "Uso de plugins para encapsular funcionalidades"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Tests localizados em __tests__ próximos aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para controladores e rotas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não especificado no código"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Não manipulado diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não configurado neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência esperada para rotas de automação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e escalabilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Modularidade para facilitar escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não detalhado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não detalhado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não especificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "controllers internos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../interface/controllers", "./input-events.routes.js", "./recorder.routes.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Falta de tratamento explícito de erros nas rotas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência assíncrona pode impactar inicialização"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado diretamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Modularidade", "Tratamento de erros", "Consistência de estilo"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara de rotas e controladores"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do padrão Controller para separar lógica de rotas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["PORT", "NODE_ENV", "LLM_API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de memória e CPU para execução de plugins assíncronos"]
      }
    ]
  },
  "src/routes/input-events.routes.ts": {
    "summary": "Este arquivo implementa rotas para streaming e gerenciamento de eventos de input em tempo real via SSE, permitindo transmissão contínua, estatísticas, limpeza e poda do buffer de eventos. Utiliza Fastify e um controller dedicado para garantir controle eficiente e confiável dos eventos, suportando recuperação de eventos perdidos e mantendo integridade do buffer, habilitando aplicações que dependem de monitoramento e resposta imediata a interações do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Events Streaming Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Real-time event streaming", "User input monitoring", "SSE"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir entrega sequencial e confiável dos eventos SSE",
          "Manter integridade do buffer de eventos",
          "Respeitar limites de idade máxima para eventos armazenados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify (versão não especificada)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Dependency Injection container (custom)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "MVC (Controller)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config: configurações e injeção de dependências",
          "interface/controllers: lógica de controle e manipulação de eventos",
          "routes: definição das rotas HTTP"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e controllers",
          "kebab-case para rotas",
          "PascalCase para schemas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controllers e rotas",
          "Uso de container para resolver dependências"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Possível uso de Airbnb ou padrão TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado no código"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Não especificado no código"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript typing"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["StandardResponseSchema com success, message, data e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "dependency-injection container", "InputEventsController"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../config/dependency-injection.js",
          "../interface/controllers/input-events.controller.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST", "SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["application/json", "text/event-stream"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/routes/recorder.routes.ts": {
    "summary": "Este arquivo implementa rotas HTTP para um sistema de gravação de eventos de mouse e teclado, utilizando Fastify para expor endpoints RESTful. Ele oferece um streaming contínuo de eventos via Server-Sent Events (SSE) e um endpoint para consulta de estatísticas do sistema, incluindo conexões ativas e configurações de captura. O código integra um controlador especializado por meio de injeção de dependência, garantindo separação clara entre lógica de negócio e roteamento, e valida as respostas com schemas JSON para garantir conformidade e robustez. Essa abordagem permite monitoramento em tempo real e análise do sistema de gravação, facilitando a integração com outras partes da aplicação e garantindo alta disponibilidade e escalabilidade do serviço.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Recorder System", "Sistema de gravação de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["User Interaction Monitoring", "Input Event Streaming", "Real-time Analytics"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir streaming contínuo e estável dos eventos",
          "Manter integridade e precisão das estatísticas",
          "Não expor dados sensíveis sem autenticação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["MVC", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configuração e injeção de dependências",
          "interface/controllers/ - controladores da aplicação",
          "routes/ - definição das rotas HTTP"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para classes",
          "kebab-case para rotas e arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controller e rotas",
          "Uso de container para resolver dependências",
          "Isolamento da lógica de negócio no controller"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para evitar side effects em handlers"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão", "Quebra de linha em 80 caracteres"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dependências externas e controllers"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não implementado explicitamente no código analisado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não implementado explicitamente no código analisado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Eventos de input do usuário - devem ser protegidos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não especificado no código"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado no código"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para streaming SSE", "Resposta rápida para estatísticas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e escalabilidade do streaming"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplas conexões SSE simultâneas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não detalhado no código, presumivelmente JSON padrão"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não especificado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não especificado no código"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "RecorderController", "Dependency Injection Container"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../config/dependency-injection.js",
          "../interface/controllers/recorder.controller.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de autenticação e autorização nos endpoints"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Potencial sobrecarga no streaming SSE com muitos clientes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Gerenciamento de conexões SSE em alta escala"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento detectada"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Separação clara de responsabilidades",
          "Validação de schemas",
          "Performance do streaming"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para rotas e controladores"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de SSE para streaming em tempo real",
          "Injeção de dependência para desacoplamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com endpoints HTTP GET"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não especificado no código"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["text/event-stream para streaming", "application/json para estatísticas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no código"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["PORT", "NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de suportar conexões SSE persistentes"]
      }
    ]
  },
  "src/test-endpoint.ts": {
    "summary": "Este arquivo de código implementa uma suíte simples de testes automatizados para endpoints de uma API RESTful que controla ações do mouse, como movimentação, clique e consulta de posição. O comportamento central consiste em enviar requisições HTTP POST e GET para endpoints locais, manipulando dados JSON para simular interações de mouse com parâmetros configuráveis, como coordenadas, suavização e duração. O código demonstra um padrão assíncrono com tratamento básico de erros, visando validar a funcionalidade da API NutJS para controle remoto do mouse, facilitando a integração e testes automatizados em ambientes de desenvolvimento local.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Mouse Control API Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de testes", "Controle remoto de dispositivos", "APIs REST"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento local"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que comandos de mouse sejam enviados e recebidos corretamente",
          "Não causar efeitos colaterais inesperados no sistema alvo"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript ES2020+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework explícito"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Nenhum banco de dados utilizado"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS API local (http://localhost:3000)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modularização funcional", "Padrão async/await"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para funções", "snake_case ausente", "const para funções assíncronas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Funções isoladas para cada endpoint",
          "Execução sequencial controlada em função principal"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Padrão JavaScript moderno, sem guia explícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Indentação padrão de 2 espaços"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários mínimos, sem documentação formal"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["JavaScript sem tipagem estática"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Nenhum framework de teste formal, testes manuais via script"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Funções de teste isoladas para cada endpoint"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Execução sequencial com delays para simular uso real"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não utilizado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node nome_do_arquivo.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["node nome_do_arquivo.js"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Não especificado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Nenhum método de autenticação implementado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Nenhuma regra de autorização aplicada"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Headers padrão Content-type: application/json"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável para comunicação local HTTP"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não especificado, mas delays indicam tolerância a latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Simplicidade e confiabilidade sobre otimização"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhuma estratégia de cache implementada"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Projeto focado em ambiente local, sem escalabilidade"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Tratamento básico via try/catch com console.error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs no console para resultados e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não implementado, falhas interrompem execução"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["NutJS API local", "fetch API"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Não especificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de testes automatizados formais e validação de respostas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência da disponibilidade da API local"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Delays fixos podem impactar tempo total de execução"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza no fluxo assíncrono", "Tratamento de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários explicativos mínimos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários em português explicando propósito"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de async/await para simplicidade e legibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL (/api/v1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Localhost (http://localhost:3000)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Dependência de ambiente local com API NutJS rodando"]
      }
    ]
  },
  "src/types/extended-input-event.types.ts": {
    "summary": "Este arquivo define tipos TypeScript para eventos de input estendidos, focando em capturar dados detalhados de interações do usuário via mouse e teclado. Ele estrutura eventos genéricos com propriedades comuns como id, tipo, timestamp e posição do cursor, além de dados específicos para mouse (ações como click, release e move) e teclado (ações down e up). O código habilita um sistema de gravação ou monitoramento de inputs com precisão, facilitando a distinção clara entre eventos de mouse e teclado, e garantindo tipagem rigorosa para manipulação segura e consistente desses eventos em sistemas que dependem de input detalhado do usuário. A abordagem modular e tipada promove integração eficiente com outros módulos que processam ou armazenam eventos de input, suportando funcionalidades como replay, análise ou automação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Event Extended Types", "Sistema de captura e gravação de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "User Interaction Monitoring",
          "Input Event Processing",
          "Terminologia: mouse events, keyboard events, input recording"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade e precisão dos dados de input",
          "Diferenciar corretamente eventos de mouse e teclado",
          "Manter sincronização temporal dos eventos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico declarado"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Não aplicável"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Nenhum serviço externo declarado"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Discriminated Union Types", "Modularização por interfaces"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definição de tipos e interfaces",
          "src/input - lógica relacionada a eventos de input"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I' ou nome descritivo (ex: ExtendedMouseEvent)",
          "CamelCase para tipos e propriedades"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos genéricos e específicos",
          "Dependência unidirecional para tipos externos (MouseButton)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style", "JSDoc para documentação"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Não especificado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Dados de input do usuário (teclas, posição do cursor)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para captura de eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de processamento e baixa latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a alto volume de eventos simultâneos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não especificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Tipo MouseButton do módulo './input-event.types.js'"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./input-event.types.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de validação runtime dos eventos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência externa pode causar inconsistências se alterada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado no código de tipagem"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Estável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Clareza na separação de eventos",
          "Documentação adequada"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as interfaces"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de discriminated unions para eventos",
          "Separação clara entre mouse e keyboard"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Dev, Staging, Prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Não aplicável"]
      }
    ]
  },
  "src/types/input-event.types.ts": {
    "summary": "Este arquivo define tipos TypeScript e interfaces para modelar eventos de input do usuário, especificamente eventos de mouse e teclado, transmitidos via Server-Sent Events (SSE). Ele estrutura eventos com propriedades detalhadas como identificador único, timestamp, origem do evento, e coordenadas do cursor, permitindo a captura precisa de interações do usuário. Além disso, especifica contratos para publicadores e ouvintes de eventos, facilitando a emissão e o recebimento desses eventos em sistemas reativos. O código promove uma arquitetura clara para integração de eventos de input em aplicações web, garantindo interoperabilidade e rastreabilidade dos eventos em tempo real, com foco em precisão e extensibilidade para múltiplas fontes de input.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Event Tracking System"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Interaction Analytics", "Real-time User Input Capture", "SSE"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir unicidade do id do evento",
          "Manter ordem temporal dos eventos",
          "Precisão na captura das coordenadas do cursor"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Server-Sent Events (SSE)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Observer Pattern", "Discriminated Union"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/events - definição de tipos e interfaces de eventos",
          "src/publishers - implementações de IEventPublisher",
          "src/listeners - implementações de IEventListener"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para tipos e interfaces",
          "camelCase para funções e variáveis",
          "constantes em UPPER_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre definição de tipos, publicação e escuta de eventos",
          "Interfaces para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "@typescript-eslint/no-explicit-any",
          "@typescript-eslint/strict-boolean-expressions"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes de tipos e interfaces",
          "tests/integration para fluxos de eventos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para IEventPublisher e IEventListener"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes unitários", "Build", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["SSE API", "TypeScript typings"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de tipos", "Cobertura de testes", "Clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as interfaces e funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de union types para eventos", "Separação clara entre publisher e listener"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Server-Sent Events (SSE)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com payload InputEvent"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/types/recorder-event.types.ts": {
    "summary": "Este arquivo define tipos e interfaces TypeScript para modelar eventos de gravação de interações do usuário, focando em mouse e teclado com timestamps precisos. Ele estrutura eventos baseados em ações específicas (mouse down, up, move; teclado down, up) e inclui detalhes como posição do mouse, botão clicado e captura opcional de screenshots em base64. Além disso, estabelece contratos para listeners e publishers de eventos, permitindo a emissão e escuta de eventos gravados, e configurações para controle de captura de screenshots e intervalo de eventos. O código habilita a construção de sistemas de gravação e reprodução de interações do usuário, essenciais para análises, testes automatizados e monitoramento comportamental em aplicações web ou desktop.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["User Interaction Recorder", "Captura e gravação de eventos de mouse e teclado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software de monitoramento", "Automação de testes", "UX analytics"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão temporal dos eventos",
          "Integridade dos dados de eventos",
          "Gerenciamento correto de listeners para evitar vazamentos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Observer", "Type-safe Event Handling"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definições de tipos e interfaces",
          "src/events - lógica de emissão e escuta de eventos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com I",
          "Tipos com PascalCase",
          "Eventos com sufixo RecordedEvent"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, interfaces de eventos e lógica de publicação/assinatura"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de tipos e interfaces", "tests/integration para eventos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para eventos emitidos e listeners"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Screenshots em base64 devem ser protegidas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar impacto da captura de screenshots",
          "Controle de frequência de eventos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Gerenciamento eficiente de listeners para evitar vazamentos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Captura de screenshots pode impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Gerenciamento correto de listeners",
          "Performance na captura de eventos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para interfaces e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de union types para eventos", "Padrão Observer para eventos"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "test-prompts.json": {
    "summary": "Este conjunto de instruções detalha uma abordagem sistemática para a criação rápida e eficiente de testes automatizados utilizando Jest em arquivos TypeScript de um projeto web focado em agendamento digital. O objetivo principal é maximizar a cobertura de código (mínimo de 80%) priorizando a velocidade de execução dos testes, com ênfase em testes minimalistas que garantam a execução de todas as funções, classes e componentes exportados. O processo inclui a leitura prévia de um arquivo know-how.txt para aproveitar padrões e soluções já validadas, a aplicação de estratégias específicas para diferentes tipos de módulos (componentes React, funções utilitárias, classes), e a documentação contínua de aprendizados para evolução da base de conhecimento. Além disso, são destacados padrões de nomenclatura, estrutura de testes, mocks comuns e práticas para lidar com dependências externas, hooks, roteamento e contextos, assegurando qualidade, manutenibilidade e integração harmoniosa com o restante do sistema. A metodologia contempla também a verificação iterativa de falhas, aplicação de mocks mínimos e a garantia de que todos os testes passem sem warnings, promovendo um ciclo de desenvolvimento ágil e confiável.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "web-agendamento-digital",
          "Sistema de agendamento digital para gestão automatizada"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Agendamento digital", "Automação", "Testes automatizados", "TypeScript", "Jest"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção com foco em qualidade e cobertura"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Cobertura mínima de testes 80%",
          "Padrões de nomenclatura *.test.tsx",
          "Documentação contínua no know-how.txt"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "ts-jest", "React 18.2", "Testing Library"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "next/router (mocked)",
          "contexts (mocked via jest.spyOn)",
          "localStorage (mock global)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Modularização por domínio e serviços"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/dto - Data Transfer Objects",
          "src/application/services - Serviços de negócio",
          "src/config - Configurações e injeção de dependências",
          "src/domain/entities - Entidades do domínio"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos de teste com sufixo .test.tsx",
          "Classes e funções em PascalCase e camelCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre DTOs, serviços e entidades", "Dependências unidirecionais"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras específicas para TypeScript e React"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão do projeto"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "tsconfig com strict enabled"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "ts-jest"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "describe() envolvendo todos os testes",
          "Arquivos de teste localizados no mesmo diretório do código alvo"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Mínimo 80% de coverage em statements, branches, functions e lines"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Testes minimalistas focados em execução de código",
          "Uso de try/catch para múltiplos parâmetros",
          "Testes de unmount para componentes React"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks mínimos necessários",
          "jest.mock para dependências externas",
          "jest.spyOn para contextos",
          "Mock global para localStorage"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisões obrigatórias", "Checks de testes e lint"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Execução de testes com coverage", "Linting", "Build e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test -- --coverage"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso baseado em roles", "Validação em backend e frontend"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Tokens JWT",
          "Dados pessoais de usuários",
          "Tratamento via criptografia e mascaramento"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["CSP", "X-Frame-Options", "Strict-Transport-Security"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["TLS para comunicação", "Criptografia AES para dados sensíveis"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["< 200ms para operações críticas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de execução dos testes", "Baixa latência em serviços"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache local para dados estáticos", "TTL configurável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Arquitetura modular para escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Formato padronizado JSON com código, mensagem e detalhes"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis (info, warn, error)"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Sentry", "Prometheus"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retry automático em falhas transitórias", "Fallbacks simples"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Jest", "ts-jest", "React", "next/router"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "Jest >=29"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/application", "src/config", "src/domain"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Necessidade de maior detalhamento em testes unitários",
          "Documentação parcial em know-how.txt"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Cobertura inicial baixa em alguns módulos",
          "Mocks insuficientes causam falhas intermitentes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Testes lentos em módulos com dependências externas não mockadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração para TypeScript 5.0 concluída", "Atualização do Jest em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Conformidade com padrões de nomenclatura",
          "Uso correto de mocks"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Atualização do know-how.txt após correção de testes",
          "Comentários claros em testes complexos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Clara e objetiva em PRs e comentários", "Foco em aprendizado coletivo"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso exclusivo de *.test.tsx para testes",
          "Estratégia de cobertura rápida priorizando execução"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL e headers"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padrão com envelope de dados"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Limites configuráveis por endpoint"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD via GitHub Actions"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "API_URL", "JWT_SECRET"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de memória em ambientes serverless"]
      }
    ]
  },
  "test-screen-capture.js": {
    "summary": "Este script Node.js automatiza o processo de captura de tela via uma API local, decodificação da imagem em base64, salvamento em disco como arquivo PNG e validação da integridade do arquivo gerado. Seu comportamento central consiste em realizar uma requisição POST para um endpoint específico, extrair e converter a imagem base64 para um buffer binário, persistir o arquivo no sistema de arquivos e verificar se o arquivo resultante possui um header PNG válido e tamanho adequado. O script inclui tratamento robusto de erros para garantir que falhas na captura, decodificação ou validação sejam reportadas e interrompam a execução, assegurando a confiabilidade do processo. Essa automação é útil para testes automatizados de captura de tela, garantindo que a API e o armazenamento estejam funcionando corretamente, integrando-se a pipelines de CI/CD ou fluxos de validação de qualidade de imagem.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Screen Capture Validation Script"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automated Testing", "Image Processing", "API Integration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Testing Automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "API must return valid base64 image data",
          "Saved file must be a valid PNG",
          "Errors must abort process"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["None (Vanilla Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["None"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Local HTTP API at http://localhost:3000/api/v1/screen/capture"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Procedural Script with Modular Functions"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Single script file, no explicit folder structure"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase for functions and variables", "UpperCamelCase not used"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Single module script, no external module boundaries"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Informal, consistent with common JS style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc style comments"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["None (JavaScript without TypeScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["None (script intended for manual or CI execution)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Not applicable"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Intended for integration in CI/CD pipelines for automated validation"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node script.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["node script.js"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Not applicable"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Not specified"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["None (API call unauthenticated)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["None explicit"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Base64 image data handled transiently, no storage de criptografia"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Type: application/json in request"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["None explicit"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não especificado, mas espera-se resposta rápida da API local"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Confiabilidade e integridade sobre otimização de velocidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhuma"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Script único, não escalável por design"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Mensagens de erro detalhadas via console.error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs sequenciais no console com emojis para status"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Abortar execução em erro crítico"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["API local de captura de tela", "Node.js fs e path"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js versão >=18 para suporte nativo a fetch"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de testes automatizados formais"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de API local disponível e responsiva"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros, clareza de logs, modularidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários JSDoc para funções principais"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Uso de emojis e mensagens claras no console"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de base64 para transporte de imagem", "Validação via assinatura PNG"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL (/v1/)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campo success e data.image em base64"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Local development (localhost:3000)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum usado explicitamente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessita API local rodando na porta 3000"]
      }
    ]
  },
  "tests/setup.ts": {
    "summary": "Este arquivo configura o ambiente global para execução de testes automatizados em um projeto JavaScript/TypeScript, garantindo isolamento e controle sobre variáveis de ambiente e dependências externas. Ele define mocks para bibliotecas que podem causar problemas em ambiente de testes, como pino logger, clipboardy e nanoid, evitando efeitos colaterais e facilitando a execução consistente dos testes. Além disso, ajusta variáveis de ambiente específicas para testes, configura timeout global para testes assíncronos e estabelece hooks globais para setup e teardown, promovendo um ambiente de testes estável e previsível.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto de testes automatizados para aplicação JavaScript/TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Test Automation", "JavaScript/TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Testes automatizados em fase de desenvolvimento"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Isolamento completo dos testes",
          "Consistência dos mocks",
          "Ambiente de testes controlado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["pino logger", "clipboardy", "nanoid"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Test Setup Pattern", "Mocking Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "tests/globalSetup.ts - configuração global de testes",
          "src/ - código fonte principal",
          "tests/ - testes unitários e integrados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "snake_case para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Mocks isolados no setup global",
          "Separação clara entre código de produção e testes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes organizados em diretório tests/", "Setup global em tests/globalSetup.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks globais para pino, clipboardy e nanoid",
          "Isolamento de efeitos colaterais"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de testes e lint"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API_KEY (mockada para testes)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Mock do logger pino para evitar logs reais durante testes"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["pino", "clipboardy", "nanoid", "jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível desatualização dos mocks em relação às bibliotecas externas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência dos mocks", "Cobertura de testes", "Isolamento dos testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para mocks e setup global"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de mocks globais para evitar efeitos colaterais em testes"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "test"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV=test",
          "API_KEY=test-api-key",
          "MOUSE_MIN_DUR=100",
          "MOUSE_MAX_DUR=5000",
          "MOUSE_SAMPLE_RATE=30",
          "MOUSE_STREAM_INTERVAL=100"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto que utiliza TypeScript, especificando diretórios raiz e padrões de inclusão/exclusão de arquivos. Seu comportamento principal é controlar o processo de compilação, garantindo que arquivos TypeScript sejam analisados corretamente sem gerar saída (noEmit: true), facilitando a verificação estática de tipos e a integração com ferramentas de build. Ele atua como um ponto central para padronizar a compilação em um ambiente de desenvolvimento, assegurando consistência e evitando a emissão de artefatos desnecessários, o que é crucial para fluxos de trabalho baseados em análise estática e integração contínua.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript com foco em configuração de compilação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "TypeScript", "Configuração de build"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Configuração inicial", "Setup de ambiente"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não emitir arquivos durante compilação (noEmit: true)",
          "Excluir node_modules da compilação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript (versão conforme tsconfig base)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Inheritance"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "rootDir definido como diretório pai",
          "Inclusão de arquivos .ts no diretório atual e ../src"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Arquivos .ts padrão TypeScript"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Exclusão de node_modules para evitar processamento"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict type checking herdado do tsconfig base"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["tsc --watch"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["tsc"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["../tsconfig.json", "TypeScript Compiler"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto moderno que utiliza recursos avançados do ECMAScript 2022 e módulos ESNext, garantindo interoperabilidade com módulos CommonJS e suporte a decoradores experimentais. Ele configura um ambiente estrito de tipagem com verificações rigorosas para evitar erros comuns, além de habilitar geração de mapas de fonte e declarações de tipos para facilitar o desenvolvimento e manutenção. A estrutura de pastas é claramente delimitada entre código fonte e saída compilada, excluindo testes e dependências externas, o que contribui para um build limpo e eficiente, integrando-se facilmente em pipelines CI/CD e sistemas modulares maiores.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript Moderno"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Configuração de build", "TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir tipagem estrita",
          "Separação clara entre src e dist",
          "Exclusão de testes do build"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "ECMAScript 2022"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular ESNext", "Decorator pattern (experimental)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src (código fonte)",
          "dist (build output)",
          "node_modules (dependências)",
          "exclusão de testes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "extensão .ts para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "src como raiz dos módulos",
          "dist para saída compilada",
          "exclusão de node_modules e testes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["strict", "noImplicitAny", "strictNullChecks"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes excluídos do build (exclusão de **/*.test.ts)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["tsc"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript Compiler", "Node.js", "ESNext modules"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "Node.js compatível com ESNext"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.prod.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto, focando em otimizar a saída do build ao desabilitar source maps e remover comentários, garantindo um código final mais limpo e leve. Ele também especifica exclusões claras para evitar a compilação de arquivos de teste, diretórios de dependências e artefatos de build, o que contribui para um processo de build mais eficiente e organizado. Funcionalmente, o arquivo atua como um ponto central para controlar o comportamento do compilador TypeScript, assegurando que apenas o código relevante seja compilado e que o output seja adequado para ambientes de produção ou distribuição.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript com configuração otimizada para build"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Configuração de compilação TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Build otimizado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Excluir arquivos de teste da compilação",
          "Remover comentários no output",
          "Não gerar source maps em produção"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Inheritance"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src (código fonte)",
          "node_modules (dependências)",
          "dist (build output)",
          "tests (testes)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Arquivos .ts para código", "Arquivos .test.ts e .spec.ts para testes"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte e testes",
          "Exclusão de arquivos de teste no build"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript strict mode herdado do tsconfig base"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Arquivos terminados em .test.ts e .spec.ts excluídos do build"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["tsc -p ."]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Redução do tamanho do bundle", "Remoção de código desnecessário"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["./tsconfig.json", "node_modules"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "test.js": {
    "summary": "Este arquivo de código contém uma única instrução que imprime a string 'test' no console. Seu propósito funcional é realizar uma operação simples de logging para fins de teste ou verificação rápida do ambiente de execução. Não há manipulação de dados, transformações ou integração com outros módulos, sendo um código de baixo impacto e complexidade, utilizado principalmente para validar o funcionamento básico do ambiente de desenvolvimento ou debug inicial.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": []
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": []
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": []
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.test.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) estende uma configuração base localizada em './tsconfig.json' e ajusta a opção 'verbatimModuleSyntax' para false, definindo como o compilador deve interpretar a sintaxe dos módulos ECMAScript. Ele inclui os diretórios 'src' e 'tests', garantindo que o compilador processe todos os arquivos TypeScript presentes nestas pastas, o que é fundamental para o desenvolvimento e testes do projeto. A configuração facilita a integração do código fonte e testes, promovendo um ambiente consistente para build e validação, além de garantir compatibilidade com o sistema de módulos do projeto, impactando diretamente na qualidade e manutenção do código.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript", "versão conforme tsconfig base"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm ou yarn (não especificado no arquivo)"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Configurações herdadas do tsconfig base", "verbatimModuleSyntax: false"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Inclusão da pasta 'tests' para compilação e execução de testes"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src - código fonte", "tests - testes automatizados"]
      }
    ]
  },
  "src/application/dto/llm-request.dto.ts": {
    "summary": "Este arquivo define um schema de validação para requisições a um modelo de linguagem (LLM) utilizando a biblioteca Zod, garantindo que os dados de entrada estejam conformes com os parâmetros esperados para chamadas a APIs de modelos GPT. Ele especifica propriedades essenciais como prompt, modelo, temperatura, limite de tokens, prompt do sistema e formato de saída, assegurando tipos e restrições para cada campo. A funcionalidade principal é validar e tipar as requisições para evitar erros de entrada e facilitar a integração com serviços de LLM, promovendo robustez e consistência no fluxo de dados entre o front-end e o back-end ou serviços externos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLM Request Validation Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Modelos de Linguagem", "APIs GPT"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos parâmetros de entrada para evitar chamadas inválidas à API GPT"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI GPT APIs"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Modular Design"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["dto - Data Transfer Objects e schemas de validação"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para tipos e schemas", "kebab-case para arquivos"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre schemas de validação e lógica de negócio"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ ao lado dos arquivos de schema"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para schemas externos e validação de erros"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint, Testes, Build e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["OAuth2 via token para API GPT"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso baseado em roles no backend"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Tokens de API e prompts sensíveis devem ser protegidos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["CORS, CSP e outros headers padrão de segurança"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["TLS para comunicação com APIs externas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta em até 2 segundos para validação local"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e validação eficiente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhum cache aplicado neste módulo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via stateless validation"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros padronizados via ZodError com mensagens claras"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de erros críticos para monitoramento"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Sentry para captura de erros em produção"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para mensagens de erro amigáveis ao usuário"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod", "outputFormatSchema"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod >=3.0.0 <4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./output-format.dto.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de manter schemas sincronizados com APIs externas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Limites de tokens podem variar conforme modelo GPT"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração para TypeScript 5.0 concluída"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tipos e cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas e exemplos de uso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e PRs detalhados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação por simplicidade e robustez"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento semântico via URL e headers"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Rate limiting aplicado pela API GPT externa"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["OPENAI_API_KEY", "NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limite de memória para containers de 512MB"]
      }
    ]
  },
  "src/application/services/llm.service.ts": {
    "summary": "O arquivo implementa um serviço LLM (Large Language Model) que orquestra a geração de respostas a partir de requisições contendo prompts e formatos de saída opcionais. Ele valida formatos personalizados de output, interage com um adaptador LLM para obter respostas brutas, e processa essas respostas aplicando parsing conforme o formato desejado, com tratamento de erros e logging detalhado. O serviço suporta fallback para saída simples em caso de falhas no parsing, garantindo robustez e flexibilidade na integração com modelos de linguagem, além de monitorar performance e respeitar limites configurados para schemas e tempo de parsing.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLMService", "Serviço de geração de completions para modelos de linguagem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "Modelos de Linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa de formatos de saída",
          "Garantia de resposta consistente e formatada",
          "Fallback seguro em caso de erro no parsing"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LLMAdapter (interface para modelos de linguagem externos)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Factory Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/ - entidades de negócio",
          "dto/ - objetos de transferência de dados",
          "infrastructure/ - adaptadores e integrações externas",
          "service/ - lógica de negócio e serviços",
          "factory/ - criação de estratégias e parsers",
          "config/ - configurações globais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase",
          "Interfaces prefixadas com I",
          "Métodos e variáveis em camelCase",
          "Arquivos com extensão .ts e nomes kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre DTOs, serviços, adaptadores e entidades",
          "Dependências injetadas via container",
          "Módulos isolados para parsing e configuração"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb e customizações para TS"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode habilitado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ paralela aos arquivos de código"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de adaptadores externos e factories"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes automatizados aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente neste serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo de prompts e respostas LLM, tratado com cuidado nos logs"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável diretamente neste serviço"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável diretamente neste serviço"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout de parsing configurado (ex: 2000ms)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de parsing e robustez na validação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não implementado neste serviço"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Serviço assíncrono e desacoplado para suportar múltiplas requisições simultâneas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Resposta padronizada com sucesso booleano, dados ou mensagem de erro e código"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis info, warn, error e debug via pino"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código, presumivelmente integrado externamente"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para saída string simples em caso de falha no parsing customizado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["LLMAdapter", "OutputParserFactory", "outputFormatConfig"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe 4.x", "pino >=7.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["dto", "domain", "infrastructure", "factory", "config", "types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de melhorar fallback e tratamento de erros em parsing complexo"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Parsing pode exceder timeout em schemas muito grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Parsing síncrono pode impactar latência em formatos complexos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tipos, tratamento de erros, cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e informativos, sem excesso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de DI para desacoplamento, fallback em parsing, logging estruturado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável diretamente, serviço interno"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Formato padrão com sucesso booleano, dados ou erro e código"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado neste serviço"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configurações de outputFormatConfig, variáveis para logging e adaptadores"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limites de tempo para parsing, capacidade de escalabilidade assíncrona"]
      }
    ]
  },
  "src/config/langchain.config.ts": {
    "summary": "O arquivo LangChainConfig define uma configuração centralizada para parâmetros de modelos de linguagem utilizados em uma aplicação, incluindo valores padrão para temperatura, tokens máximos, timeout e tentativas de requisição. Ele especifica características técnicas e econômicas de diferentes modelos GPT, como limites de tokens e custo por token, permitindo que o sistema ajuste dinamicamente o uso dos modelos conforme restrições e custos. Essa configuração suporta a integração eficiente com APIs de modelos de linguagem, facilitando controle de recursos e otimização de custos em processos de geração de texto automatizada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LangChainConfig", "Configuração centralizada para modelos GPT"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Natural Language Processing", "Modelos de linguagem"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Respeitar limites de tokens por modelo",
          "Controlar custo por token para otimização financeira",
          "Timeout máximo para requisições"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API", "LangChain"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Immutable Configuration", "Modular Design"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Configuração centralizada em arquivo único para fácil manutenção e extensão"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para constantes e tipos", "PascalCase para tipos"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada para ser importada por módulos de lógica de negócio e integração"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout configurado em 30000 ms (30 segundos) para requisições"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balancear custo por token e capacidade de geração de texto"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Número de retries configurado para 3 tentativas em caso de falha"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["OpenAI API", "LangChain"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/entities/llm-response.ts": {
    "summary": "Este arquivo define uma interface TypeScript chamada LLMResponse, que modela a estrutura de dados esperada para respostas de um Large Language Model (LLM). A interface especifica propriedades essenciais como o conteúdo textual da resposta, o modelo utilizado, e opcionalmente informações de uso de tokens e o motivo de finalização da geração. Funcionalmente, o código serve para garantir tipagem forte e padronização na manipulação das respostas do LLM, facilitando a integração e o controle de recursos consumidos durante a geração de texto. Não há transformações ou efeitos colaterais diretos, pois trata-se apenas de uma definição de tipo, mas habilita práticas robustas de desenvolvimento e manutenção em sistemas que consomem APIs de modelos de linguagem.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "LLM Response Handler",
          "Interface para padronização de respostas de modelos de linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Natural Language Processing",
          "APIs de modelos de linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade dos dados de resposta",
          "Manter compatibilidade com versões do modelo"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API", "Outros provedores de LLM"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Interface Segregation", "Data Contract"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/interfaces - definição de tipos e contratos de dados"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para interfaces", "camelCase para propriedades"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Interfaces isoladas para desacoplamento e reutilização"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para interfaces e propriedades"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/langchain/langchain-llm.adapter.ts": {
    "summary": "Este arquivo implementa um adapter para integração com modelos de linguagem da OpenAI via LangChain, encapsulando a geração de completions baseadas em prompts fornecidos. Seu comportamento central consiste em receber uma requisição contendo parâmetros como modelo, temperatura e prompts, construir mensagens formatadas para o modelo, invocar a API do ChatOpenAI e retornar uma resposta estruturada com conteúdo gerado e metadados de uso. O código também realiza logging detalhado para monitoramento e tratamento de erros, garantindo robustez na comunicação com o serviço externo. Essa implementação habilita a aplicação a consumir capacidades avançadas de NLP de forma desacoplada e configurável, facilitando a extensão e manutenção do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LangChain LLM Integration Adapter"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Natural Language Processing", "AI Integration", "OpenAI API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir segurança da chave API",
          "Manter integridade das respostas do modelo",
          "Registrar logs de sucesso e falha"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["LangChain", "tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI API"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Adapter", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/dto para DTOs",
          "domain/entities para entidades de domínio",
          "config para configurações",
          "adapters para integração com serviços externos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para métodos e variáveis",
          "Interfaces prefixadas com I"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências unidirecionais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para chamadas externas e APIs"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key (OpenAI)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso via roles no sistema principal"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Chave API OpenAI deve ser protegida e não exposta"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Headers padrão de segurança HTTP aplicados no gateway"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["TLS para comunicação externa"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout configurado via LangChainConfig.timeout"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balancear latência da API com retries para confiabilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhum cache implementado neste adapter"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Adapter stateless para fácil escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erro lançado com mensagem detalhada em caso de falha"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com pino, níveis info e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Integrado a sistema de logs centralizados (ex: ELK)"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retries configurados via LangChainConfig.retries"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@langchain/openai", "pino", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatibilidade com versões recentes do TypeScript e LangChain"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/dto", "domain/entities", "config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Tratamento de erros pode ser mais granular"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência da estabilidade da API OpenAI"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Latência da API externa pode impactar tempo de resposta"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros, cobertura de testes, clareza do logging"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do Adapter para desacoplar integração com LLM"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST (indireto via OpenAI API)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento gerenciado externamente pela OpenAI"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com conteúdo textual e metadados de uso"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Gerenciado pela OpenAI, não tratado localmente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev, staging, production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containerizado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["OPENAI_API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de timeout e conexões externas"]
      }
    ]
  },
  "src/interface/controllers/llm.controller.ts": {
    "summary": "O arquivo implementa um controlador RESTful para integração com um serviço de Large Language Model (LLM) utilizando Fastify, focado em receber requisições autenticadas, validar entradas via Zod e processar prompts para geração de respostas dinâmicas. Ele gerencia múltiplos formatos de saída, incluindo strings, objetos, arrays, números e booleanos, além de tratar erros específicos relacionados à validação, tamanho do schema e parsing do output. O controlador registra rotas protegidas por middleware de autenticação, realiza logging detalhado das requisições e respostas, e responde com formatos padronizados para sucesso e falhas, garantindo robustez e clareza na comunicação com clientes. Essa implementação é parte de uma arquitetura modular que utiliza injeção de dependências para desacoplar a lógica de negócio do serviço LLM, promovendo escalabilidade e manutenção facilitada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLM API Service", "API para geração de texto via Large Language Models"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Processamento de Linguagem Natural", "APIs RESTful"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa do input",
          "Autenticação obrigatória via x-api-key",
          "Limite máximo para tamanho do outputFormat"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Serviço LLM interno via LLMService", "Middleware de autenticação customizado"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Controller Pattern", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/ - lógica de negócio e DTOs",
          "config/ - configurações globais",
          "infrastructure/ - integração com frameworks e serviços externos",
          "presentation/ - controllers e rotas HTTP",
          "middleware/ - middlewares para autenticação e validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre camada de aplicação, infraestrutura e apresentação",
          "Uso de injeção de dependência para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, incluindo regras de segurança e melhores práticas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de classes e métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos módulos correspondentes"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços externos e middlewares"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e checks de CI"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key'"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Validação obrigatória do API Key para acesso à rota /llm"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Prompt e respostas do LLM, tokens usados, dados de autenticação"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["x-api-key obrigatório no header"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Recomenda-se HTTPS para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta rápida para geração de completions, idealmente < 1s"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de resposta priorizada sobre uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não implementado no controlador, possível cache no serviço LLM"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via múltiplas instâncias Fastify"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error e code"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de pino para logs de info e error com contexto detalhado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código, mas compatível com ferramentas externas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros específicos com códigos HTTP adequados e mensagens claras"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "LLMService",
          "authenticationMiddleware",
          "llmRequestSchema",
          "outputFormatConfig"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "TypeScript 5.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "application/services/llm.service.js",
          "middleware/auth.middleware.js",
          "application/dto/llm-request.dto.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível overhead na validação de schemas grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Validação e parsing de outputFormat podem impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação rigorosa, tratamento de erros, segurança e logging"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para APIs e DTOs"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de logs estruturados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de injeção de dependência para desacoplamento",
          "Validação via Zod para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não explícito no código, presumivelmente via versionamento de rota futura"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campos success, data (dinâmico), metadata"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado no controlador, pode ser aplicado via middleware externo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY_SECRET", "LOG_LEVEL", "LLM_SERVICE_ENDPOINT"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limite de tamanho para outputFormat configurável via outputFormatConfig"]
      }
    ]
  },
  "src/interface/schemas/llm.schemas.ts": {
    "summary": "Este arquivo define um JSON Schema para validação de requisições destinadas a chamadas de modelos de linguagem (LLM) da OpenAI, como GPT-3.5 e GPT-4. Ele especifica a estrutura esperada do objeto de entrada, incluindo propriedades obrigatórias como 'prompt' e 'model', além de parâmetros opcionais para controle do comportamento do modelo, como 'temperature' e 'maxTokens'. O schema também permite a definição detalhada do formato de saída esperado, suportando tipos primitivos e compostos, com validação de propriedades internas, garantindo robustez e flexibilidade na integração com sistemas que consomem APIs de LLM. Essa definição facilita a padronização, validação e documentação das requisições, assegurando conformidade e previsibilidade no processamento das chamadas ao modelo.",
    "properties": [
      {
        "property": "prompt",
        "subProperty": "type",
        "value": ["string"]
      },
      {
        "property": "prompt",
        "subProperty": "minLength",
        "value": [1]
      },
      {
        "property": "model",
        "subProperty": "type",
        "value": ["string"]
      },
      {
        "property": "model",
        "subProperty": "enum",
        "value": ["gpt-3.5-turbo", "gpt-4", "gpt-4-turbo", "gpt-4o", "gpt-4o-mini"]
      },
      {
        "property": "temperature",
        "subProperty": "type",
        "value": ["number"]
      },
      {
        "property": "temperature",
        "subProperty": "minimum",
        "value": [0]
      },
      {
        "property": "temperature",
        "subProperty": "maximum",
        "value": [2]
      },
      {
        "property": "temperature",
        "subProperty": "default",
        "value": [0.7]
      },
      {
        "property": "maxTokens",
        "subProperty": "type",
        "value": ["integer"]
      },
      {
        "property": "maxTokens",
        "subProperty": "minimum",
        "value": [1]
      },
      {
        "property": "maxTokens",
        "subProperty": "maximum",
        "value": [4096]
      },
      {
        "property": "maxTokens",
        "subProperty": "default",
        "value": [1000]
      },
      {
        "property": "systemPrompt",
        "subProperty": "type",
        "value": ["string"]
      },
      {
        "property": "outputFormat",
        "subProperty": "type",
        "value": ["object"]
      },
      {
        "property": "outputFormat",
        "subProperty": "properties.type.enum",
        "value": ["object", "array", "string", "number", "boolean"]
      },
      {
        "property": "outputFormat",
        "subProperty": "required",
        "value": ["type"]
      }
    ]
  },
  "tests/unit/config/dependency-injection.test.ts": {
    "summary": "Este arquivo de teste automatizado em Jest tem como objetivo principal validar a configuração do sistema de dependency injection utilizado na aplicação. Ele assegura que todos os serviços, adaptadores e controllers essenciais sejam corretamente registrados no container de injeção de dependências, garantindo a correta resolução e instância dos componentes durante a execução. O código utiliza mocks para isolar as dependências externas e foca em verificar chamadas de registro, singleton e exportação do container, promovendo robustez e confiabilidade na inicialização do sistema, além de facilitar a manutenção e evolução do projeto.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automated Dependency Injection Configuration Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software Development", "Dependency Injection", "Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Maintenance"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "All dependencies must be registered correctly",
          "Singleton services must be unique",
          "Controllers must be injectable"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "tsyringe"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LangChain LLM Adapter"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Singleton", "Factory"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/services - lógica de negócio e serviços",
          "src/infrastructure/adapters - adaptadores para integração externa",
          "src/interface/controllers - controllers para entrada de dados",
          "src/config - configuração do sistema, incluindo DI"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase",
          "Mocks prefixados com Mock",
          "Services e Adapters com sufixos Service e Adapter",
          "Controllers com sufixo Controller"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre application, infrastructure e interface",
          "Dependências unidirecionais do config para serviços e adaptadores"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any implícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ ou arquivos *.spec.ts próximos ao código"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Mocking extensivo para isolamento"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Jest mocks para dependências externas e internas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos de CI"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "reflect-metadata", "Jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "Jest >=29"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "infrastructure/adapters", "interface/controllers"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes", "Uso correto de DI", "Manutenção dos mocks"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar funções públicas e contratos de DI"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos", "PRs descritivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de tsyringe para DI", "Mocks para isolamento em testes unitários"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/routes/automation.routes.test.ts": {
    "summary": "O arquivo de teste automatizado foca na validação do comportamento do módulo de rotas de automação em um servidor Fastify, garantindo que múltiplos controllers e rotas sejam registrados corretamente e em ordem. Ele simula a integração dos controllers AutomationController, KeyboardController e LLMController, além das rotas inputEventsRoutes e recorderRoutes, verificando a correta invocação de métodos e o tratamento assíncrono de registro. O código assegura que callbacks sejam chamados, múltiplas execuções sejam independentes e erros de registro sejam tratados, promovendo robustez e confiabilidade na configuração das rotas do sistema. Essa abordagem permite garantir a orquestração correta dos componentes de automação e eventos, facilitando a manutenção e evolução do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation System", "Módulo de gerenciamento e registro de rotas para automação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de software", "Fastify server", "API routing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Testes unitários e integração", "Estabilização do módulo de rotas"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Registro correto e ordenado das rotas",
          "Execução dos callbacks done",
          "Tratamento de erros no registro"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "JavaScript ES6+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Jest 29.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Plugin Architecture", "Dependency Injection via Controllers"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/interface/controllers - Controllers responsáveis pela lógica de rotas",
          "src/routes - Definição dos plugins de rotas",
          "tests - Testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Controllers com sufixo Controller",
          "Rotas com sufixo Routes",
          "Mocks prefixados com jest.mock"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers isolados da definição de rotas",
          "Rotas registradas via plugins Fastify",
          "Testes isolados com mocks para dependências externas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ou tests",
          "Testes organizados por módulo de rota"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocking extensivo para isolamento"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "jest.mock para dependências externas",
          "Mocks de controllers e rotas para testes unitários"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Testes passando", "Checks de lint e build"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes unitários", "Lint", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "Jest", "TypeScript"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/interface/controllers", "src/routes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falha no registro assíncrono de rotas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Uso correto de mocks",
          "Ordem e integridade do registro de rotas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos controllers e rotas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de mocks para isolar testes", "Separação clara entre controllers e rotas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/output-format.dto.ts": {
    "summary": "Este arquivo define schemas de validação para requisições e formatos de saída personalizados utilizando a biblioteca zod, focando em garantir a integridade e segurança dos dados JSON manipulados em interações com modelos LLM (Large Language Models). Ele inclui validações rigorosas para tipos e estruturas, além de funções utilitárias para prevenir problemas comuns como recursão infinita em esquemas complexos, prototype pollution e vazamento de informações sensíveis em logs. O código promove um controle robusto sobre a estrutura das respostas geradas, facilitando a integração segura e confiável com sistemas que dependem de formatos JSON dinâmicos e customizados, assegurando qualidade e segurança na manipulação dos dados. A abordagem modular e o uso de tipagem inferida garantem manutenção e escalabilidade eficientes.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "LLM Output Schema Validator",
          "Validação e sanitização de formatos JSON para LLM"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "Validação de Dados JSON"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação estrita do formato JSON de saída",
          "Prevenção de prototype pollution",
          "Controle de profundidade de esquemas para evitar recursão infinita"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["OpenAI GPT Models (gpt-3.5-turbo, gpt-4, etc.)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Utility Functions", "Type Inference"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "schemas/ - definição de schemas zod",
          "utils/ - funções utilitárias para validação e sanitização"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para tipos e funções", "snake_case para variáveis locais"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre schemas e funções utilitárias",
          "Exportação explícita de tipos e funções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/ para testes de schemas e utils"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dados JSON e chamadas externas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Testes automatizados", "Build e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Dados de prompt e descrições parcialmente mascarados em logs"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Prevenção de recursão infinita para evitar travamentos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Mensagens de erro claras via zod (ex: prompt obrigatório)"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Mascaramento de dados sensíveis em logs"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Validação preventiva para evitar falhas em runtime"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod", "OpenAI GPT Models"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod 3.x", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível complexidade em esquemas muito aninhados"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tipos e segurança contra prototype pollution"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de zod para validação e tipagem", "Sanitização para segurança"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST-like para requisições LLM"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON customizado validado por schemas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API keys para OpenAI", "Configurações de modelo e temperatura"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/factory/output-parser.factory.ts": {
    "summary": "Este módulo implementa uma estratégia robusta para parsing e validação de dados de saída (output) provenientes de LLMs, utilizando a biblioteca Zod para garantir conformidade com esquemas definidos dinamicamente. Ele oferece um mecanismo de cache para esquemas compilados, otimizando a performance ao evitar recompilações repetidas, e uma fábrica singleton que gerencia múltiplas estratégias de parsing, atualmente suportando apenas a estratégia baseada em Zod. O código valida a profundidade e tipos dos esquemas, sanitiza entradas, e registra logs detalhados para monitoramento e depuração, além de realizar limpeza periódica do cache para manter a eficiência e integridade do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Output Parsing Engine", "Validação e parsing de dados de saída de LLM"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "Validação de Dados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação estrita dos dados conforme esquema",
          "Cache de esquemas deve respeitar TTL para evitar dados obsoletos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Logger customizado", "Configuração externa para outputFormatConfig"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Strategy", "Singleton", "Factory", "Cache"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config: configurações globais",
          "dto: definições de tipos e schemas",
          "parsers: estratégias de parsing e validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes PascalCase",
          "Interfaces prefixadas com I",
          "Funções camelCase",
          "Constantes camelCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre config, dto e parsing",
          "Dependência unidirecional para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ paralela ao código"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dependências externas e funções auxiliares"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e checks de CI"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes", "Build", "Deploy automatizado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Parsing deve ser realizado em milissegundos para manter fluidez"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Prioriza velocidade e reutilização de esquemas via cache"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache de esquemas compilados com TTL configurável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Cache cleanup periódico para evitar crescimento descontrolado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados com mensagens claras e logados via logger"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de info para sucesso e error para falhas, com contexto"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Logger customizado integrado ao sistema de monitoramento"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Falhas de parsing propagadas para tratamento externo"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Zod", "outputFormatConfig", "logger"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Zod versão 3.x compatível"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../config/logger.js",
          "../../config/output-format.config.js",
          "../dto/output-format.dto.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Suporte limitado a uma única estratégia de parsing"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falha em esquemas muito profundos ou complexos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Parsing JSON e compilação de esquemas podem impactar em cargas elevadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza na validação, tratamento de erros e uso correto do cache"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para todas as funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do Zod como engine principal de validação",
          "Uso de cache para performance"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON validado conforme esquema"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["CACHE_TTL", "ENABLE_CACHE", "ENABLE_DEBUG_LOGS"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória para cache", "Necessidade de alta disponibilidade"]
      }
    ]
  },
  "src/config/output-format.config.ts": {
    "summary": "Este arquivo define uma configuração imutável e validada para o sistema de formatação de saída de esquemas JSON, controlando limites de tamanho, profundidade, timeout de parsing, cache e logs de debug. Ele assegura que as configurações estejam dentro de parâmetros seguros para evitar problemas de performance e segurança, como recursão infinita ou parsing excessivamente lento. A configuração é carregada a partir de variáveis de ambiente, permitindo flexibilidade e adaptação ao ambiente de execução, e inclui validação rigorosa para garantir a integridade dos parâmetros antes do uso no sistema.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Immutable Configuration", "Defensive Programming"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["enableCache", "cacheTtl"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["parseTimeout"]
      },
      {
        "property": "security_constraints",
        "subProperty": "validation_rules",
        "value": [
          "maxSchemaSize between 1 and 1MB",
          "maxDepth between 1 and 20",
          "parseTimeout between 100ms and 30s",
          "cacheTtl between 1 and 1440 minutes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "OUTPUT_SCHEMA_MAX_SIZE",
          "OUTPUT_SCHEMA_MAX_DEPTH",
          "OUTPUT_SCHEMA_DEFAULT_MODE",
          "OUTPUT_SCHEMA_PARSE_TIMEOUT",
          "OUTPUT_SCHEMA_ENABLE_CACHE",
          "OUTPUT_SCHEMA_CACHE_TTL",
          "OUTPUT_SCHEMA_DEBUG"
        ]
      }
    ]
  },
  "src/types/output-shape.ts": {
    "summary": "Este arquivo define tipos TypeScript e funções utilitárias para padronizar e facilitar o tratamento de respostas de modelos de linguagem (LLM) em diferentes formatos, suportando tanto respostas legadas quanto dinâmicas. Ele oferece mecanismos para criar respostas de sucesso e erro, além de type guards para identificar o formato da resposta, garantindo compatibilidade e flexibilidade na manipulação dos dados retornados. O código foca em abstrair a estrutura das respostas, permitindo que consumidores do módulo processem dados LLM de forma consistente e segura, promovendo interoperabilidade e manutenção simplificada em sistemas que utilizam APIs de modelos de linguagem.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "LLM Response Handler",
          "Módulo para padronização e manipulação de respostas de modelos de linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Inteligência Artificial",
          "Processamento de Linguagem Natural",
          "APIs de Modelos de Linguagem"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir compatibilidade entre formatos legado e dinâmico",
          "Padronizar respostas de sucesso e erro",
          "Evitar perda de dados em transformações"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["APIs de modelos de linguagem (LLM)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Functions", "Type Guard Pattern", "Union Types para flexibilidade"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definição de tipos",
          "src/utils - funções utilitárias para respostas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para tipos e interfaces", "camelCase para funções e variáveis"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos e funções utilitárias",
          "Isolamento do tratamento de respostas LLM"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de tipos e funções"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de funções utilitárias e type guards"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para simular respostas LLM em diferentes formatos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes automatizados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações síncronas rápidas, sem impacto significativo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Clareza e segurança de tipos sobre micro-otimizações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade não impactada diretamente pelo módulo"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto com success: false, error: string e código opcional"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado neste módulo"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não aplicável"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Padronização de erros para facilitar tratamento externo"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=4.9 para suporte a features usadas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Manutenção da retrocompatibilidade pode aumentar complexidade"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível confusão entre formatos dinâmico e legado em uso incorreto"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração gradual do formato legado para dinâmico em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de tipos", "Cobertura de type guards", "Padronização de respostas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para tipos e funções"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Manter suporte a legacy para garantir estabilidade",
          "Uso de type guards para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful API consumindo respostas LLM"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Controle via tipos e formatos de resposta"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Formato legado e formato dinâmico suportados"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não tratado neste módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum específico para este módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Nenhuma restrição específica"]
      }
    ]
  },
  "tests/unit/services/llm.service.test.ts": {
    "summary": "Este arquivo contém testes unitários para o serviço LLMService, que encapsula a interação com um Large Language Model (LLM) por meio de um adapter específico. O código foca em validar o comportamento da função generateCompletion, que gera respostas baseadas em prompts, podendo aplicar parsing estruturado conforme um esquema de output definido. O serviço gerencia erros do adapter e do parser, garantindo fallback para respostas em string quando necessário, além de validar limites de tamanho do esquema de saída. A abordagem modular e o uso de mocks evidenciam um design orientado a testes, assegurando robustez na integração com componentes externos e na manipulação de formatos de resposta variados, suportando diferentes cenários de uso e falhas. O arquivo é essencial para garantir a confiabilidade e a correta transformação dos dados gerados pelo LLM, integrando-se a uma arquitetura limpa e orientada a estratégias de parsing configuráveis.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["LLMService - Serviço de geração de completions com parsing configurável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Inteligência Artificial", "Natural Language Processing", "Large Language Models"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção com cobertura de testes unitários"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação do tamanho máximo do output format schema",
          "Fallback seguro para resposta em string em caso de erro de parsing",
          "Tratamento consistente de erros do LLM adapter"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["LLM API via LLMAdapter", "OutputParserFactory"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Factory", "Strategy"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/services - lógica de negócio",
          "src/application/factory - criação de estratégias",
          "src/infrastructure/adapters - integração com serviços externos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para funções e variáveis",
          "suffix Service para serviços"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependência unidirecional da aplicação para infraestrutura"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ ou arquivos *.spec.ts próximos ao código"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para adapters externos e factories", "Isolamento de unidades testadas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["parseTimeout configurado para 5000ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de resposta e robustez no parsing"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto com success boolean, error string e código de erro"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso de logger pino com níveis info, error, warn, debug"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para resposta em string quando parsing falha"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["LLMAdapter", "OutputParserFactory"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["maxSchemaSize: 10240 bytes", "parseTimeout: 5000ms"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "src/application/services",
          "src/application/factory",
          "src/infrastructure/adapters"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de testes de integração para validar parsing real"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível mascaramento de erros de parsing pelo fallback"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de testes, tratamento de erros, clareza de mocks"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara de métodos públicos e contratos de dados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Strategy para parsing, fallback para string, limites de schema"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["string ou objeto JSON conforme outputFormat"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["outputFormatConfig com parâmetros de parsing"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  }
}

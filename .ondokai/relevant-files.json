{
  ".env.example": {
    "summary": "Este arquivo de configuração define variáveis de ambiente essenciais para a execução de uma aplicação em modo development, incluindo parâmetros de rede como HOST e PORT, além de níveis de log para controle de informações durante a execução. Ele também configura aspectos específicos de um módulo de gravação (recorder), como a inclusão de screenshots, intervalo de movimentação e tamanho máximo permitido para imagens capturadas, indicando que o sistema possui funcionalidades de monitoramento visual ou automação de interface. O comportamento central do código é fornecer parâmetros estáticos que influenciam diretamente o runtime da aplicação, habilitando controle fino sobre performance, captura visual e logging, essenciais para desenvolvimento e testes. A configuração permite integração com sistemas que dependem de captura de tela e controle de mouse, sugerindo uso em automação, testes end-to-end ou monitoramento de UI, com impacto direto na experiência do usuário e na qualidade do produto final.",
    "properties": [
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV=development",
          "PORT=3000",
          "HOST=0.0.0.0",
          "LOG_LEVEL=info",
          "MOUSE_SPEED=500",
          "SCREEN_CONFIDENCE=0.8",
          "RECORDER_INCLUDE_SCREENSHOT=true",
          "RECORDER_MOVE_INTERVAL_MS=50",
          "RECORDER_MAX_SCREENSHOT_SIZE=2097152"
        ]
      }
    ]
  },
  ".eslintignore": {
    "summary": "Este arquivo de configuração define padrões e exclusões essenciais para o ambiente de desenvolvimento e build de um projeto Node.js, incluindo diretórios como node_modules, dist, coverage e arquivos de log. Ele especifica quais pastas e arquivos devem ser ignorados por ferramentas de linting, testes, cobertura e controle de versão, garantindo um fluxo de trabalho eficiente e limpo. A configuração suporta a integração com ferramentas como Jest para testes, ESLint para qualidade de código e PM2 para gerenciamento de processos, facilitando a manutenção e escalabilidade do projeto.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto Node.js para backend com foco em testes, linting e deploy"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Node.js", "Backend"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter ambiente limpo de arquivos temporários",
          "Garantir qualidade de código via linting",
          "Executar testes automatizados corretamente"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest", "ESLint", "PM2"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules (dependências)",
          "dist (build output)",
          "coverage (relatórios de teste)",
          "logs (arquivos de log)",
          ".nyc_output (cobertura de testes)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos de configuração com extensão .js",
          "Arquivos de log com extensão .log",
          "Pastas padrão para outputs e dependências"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre código fonte, testes, logs e builds"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb (implícito pelo uso de ESLint)"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Configuração via .eslintrc.js"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Cobertura armazenada em coverage/", "Configuração via jest.config.js"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["jest"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["eslint ."]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs armazenados em logs/ e arquivos *.log"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Jest", "ESLint", "PM2"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".eslintrc.cjs": {
    "summary": "Este arquivo configura o ESLint para um projeto TypeScript moderno, definindo regras rigorosas de linting que garantem a qualidade e a consistência do código. Ele utiliza o parser '@typescript-eslint/parser' para interpretar sintaxe TypeScript avançada e integra plugins recomendados para TypeScript e Prettier, assegurando conformidade com boas práticas e formatação automática. As regras aplicadas previnem erros comuns como uso incorreto de promises assíncronas, variáveis não utilizadas e tipos explícitos 'any', promovendo um código mais seguro, legível e sustentável em ambientes de desenvolvimento colaborativos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Configuração ESLint para projeto TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "TypeScript", "Linting", "Qualidade de código"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir código livre de erros assíncronos comuns",
          "Evitar uso de tipos 'any' explícitos",
          "Manter consistência e legibilidade do código"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x ou superior"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["ESLint 8.x", "@typescript-eslint 5.x", "Prettier 2.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "yarn"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuração declarativa de ferramentas de linting"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Arquivo raiz de configuração (.eslintrc.js) para regras globais"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Uso de camelCase para variáveis e funções",
          "Prefixo '@typescript-eslint/' para regras específicas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre regras ESLint, parser e plugins"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["ESLint Recommended", "TypeScript ESLint Recommended", "Prettier"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "no-async-promise-executor: error",
          "no-await-in-loop: warn",
          "@typescript-eslint/no-explicit-any: error",
          "@typescript-eslint/no-floating-promises: error",
          "@typescript-eslint/await-thenable: error",
          "@typescript-eslint/no-unused-vars: error com argsIgnorePattern '^_'"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier integrado via plugin ESLint"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["TypeScript strict com análise via parser e plugin ESLint"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install", "yarn install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install", "yarn install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["eslint . --ext .ts,.tsx"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["prettier --write ."]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@typescript-eslint/parser",
          "@typescript-eslint/eslint-plugin",
          "eslint",
          "prettier"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Compatibilidade com TypeScript 4.x+", "ESLint 8.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Conformidade com regras ESLint",
          "Evitar uso de any",
          "Tratamento correto de promises"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos", "Uso de inglês para termos técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de regras estritas para promises e tipos any para aumentar segurança"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".nvmrc": {
    "summary": "O código consiste em um valor literal numérico simples, especificamente o número 20, sem qualquer lógica, função ou estrutura adicional. Seu comportamento é estático e não realiza transformações, operações ou interações com outros componentes do sistema. Funcionalmente, ele representa um dado fixo que pode ser utilizado como constante ou valor de configuração em um contexto maior, mas isoladamente não produz efeitos observáveis ou mudanças de estado. Não há integração explícita com outros módulos, nem padrões arquiteturais aplicados, e não apresenta riscos de segurança ou performance devido à sua simplicidade extrema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto genérico sem nome definido"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Indefinido"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Indefinido"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Nenhuma regra identificada"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["Indefinido"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Nenhum"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Nenhum"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["Indefinido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Nenhum"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Indefinido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Indefinido"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Indefinido"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Nenhum"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Indefinido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Indefinido"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Indefinido"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Indefinido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Nenhum"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Nenhum"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Indefinido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Indefinido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhum"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Indefinido"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Nenhum"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhum"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Indefinido"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Indefinido"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Indefinido"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Indefinido"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Nenhum"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Nenhum"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Nenhum"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Nenhum"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Indefinido"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Indefinido"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Indefinido"]
      }
    ]
  },
  ".prettierignore": {
    "summary": "Este arquivo é um .gitignore configurado para projetos Node.js, contendo regras para ignorar diretórios e arquivos gerados automaticamente durante o desenvolvimento, build e execução do projeto. Ele previne o versionamento de dependências instaladas (node_modules), artefatos de build (dist), relatórios de cobertura de testes (coverage, .nyc_output), arquivos de log, configurações locais do editor (vscode), arquivos de bloqueio de pacotes (package-lock.json), documentação markdown, e arquivos de configuração de ambiente (.env e variações). O comportamento principal é garantir que apenas o código-fonte relevante e arquivos essenciais sejam versionados, evitando poluição do repositório e conflitos de ambiente, facilitando a manutenção e colaboração entre desenvolvedores.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto Node.js com foco em desenvolvimento modular e build automatizado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Node.js",
          "JavaScript",
          "Gerenciamento de dependências"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter integridade do repositório evitando versionamento de arquivos temporários e sensíveis"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules (dependências)",
          "dist (build output)",
          "coverage (test coverage)",
          "logs (arquivos de log)",
          ".vscode (configurações do editor)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Uso de snake_case e camelCase para arquivos e variáveis"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre código fonte e artefatos gerados"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [".env files"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Ignorar arquivos de log no versionamento"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["node_modules"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["package-lock.json (ignorado para evitar conflitos)"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [".env", ".env.*"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".prettierrc": {
    "summary": "Este arquivo JSON configura regras de formatação de código para um projeto de desenvolvimento, definindo padrões como uso obrigatório de ponto e vírgula (semi), vírgulas finais em listas (trailingComma), aspas simples (singleQuote), largura máxima de linha (printWidth) e largura de tabulação (tabWidth). Seu propósito principal é garantir consistência e padronização no estilo do código-fonte, facilitando a manutenção e colaboração entre desenvolvedores. A configuração é simples, sem lógica condicional, e integra-se a ferramentas de formatação automática como Prettier, impactando diretamente a qualidade e legibilidade do código no pipeline de desenvolvimento.",
    "properties": [
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "semi: true",
          "trailingComma: all",
          "singleQuote: true",
          "printWidth: 100",
          "tabWidth: 2"
        ]
      }
    ]
  },
  "NutJS-Desktop-Automation-API.postman_collection.json": {
    "summary": "Este arquivo define uma API REST completa para automação desktop utilizando NutJS, permitindo controle detalhado do mouse, teclado, operações de clipboard, captura e reconhecimento de tela, além de gravação e streaming em tempo real de eventos de entrada. A API suporta operações como movimentação, clique, arraste e scroll do mouse, digitação de texto com modos configuráveis, combinação e pressionamento de teclas, manipulação do clipboard (copiar, colar, limpar), captura de screenshots e busca por imagens na tela, além de um sistema de gravação que transmite eventos via Server-Sent Events (SSE). A autenticação é feita via API key, garantindo segurança no acesso. O sistema é projetado para oferecer alta precisão e controle fino sobre interações desktop, com validações robustas e suporte a fluxos contínuos de dados para monitoramento e automação avançada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Desktop Automation API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação Desktop", "Desktop Automation", "Input Control", "Screen Capture"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação obrigatória via API key para todas as operações",
          "Validação rigorosa dos parâmetros de entrada para evitar comandos inválidos",
          "Limitação de tamanho e tempo para operações de digitação e captura de tela",
          "Manter integridade e segurança dos dados transmitidos via SSE"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["NutJS", "Express (implícito)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Server-Sent Events (SSE) for streaming", "API key authentication service"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["REST API", "Event-driven architecture (SSE)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "api/ - endpoints organizados por funcionalidade (mouse, keyboard, clipboard, screen, recorder)",
          "middleware/ - autenticação e validação",
          "services/ - lógica de automação e manipulação de eventos",
          "streams/ - gerenciamento de conexões SSE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para nomes de funções e variáveis",
          "Kebab-case para rotas REST",
          "Prefixo api/v1 para versionamento"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre módulos de input (mouse, keyboard), clipboard, screen e recorder",
          "Dependência unidirecional: controllers dependem de serviços, não o contrário"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e endpoints"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["JavaScript dinâmico, sem type checking estrito"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Postman Tests (JavaScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes integrados via scripts Postman para cada endpoint"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura focada em endpoints críticos e fluxos de autenticação"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Assertions de sucesso, propriedades de resposta e tempos de resposta"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Uso de variáveis de ambiente para simular API keys e URLs"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes automatizados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["newman run collection.json"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Acesso restrito a usuários com chave válida para todos os endpoints"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API keys e screenshots base64 devem ser protegidos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-type application/json", "Accept text/event-stream para SSE"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Recomenda-se uso de HTTPS para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Respostas em menos de 5000ms para operações padrão"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência para eventos em tempo real, uso eficiente de recursos para streaming SSE"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável diretamente, foco em operações em tempo real"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplas conexões SSE simultâneas, controle de throttling para eventos de mouse"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error, code e detalhes"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de erros e eventos críticos para auditoria"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado, recomendação para uso de ferramentas externas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Validações preventivas e respostas claras para erros de input"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["NutJS", "Express", "Postman para testes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de type checking estrito pode levar a erros em runtime"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Necessidade de garantir headers corretos para SSE, manejo de erros de autenticação"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Potencial sobrecarga em conexões SSE simultâneas sem throttling adequado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de segurança, cobertura de testes, clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação detalhada de endpoints e parâmetros via Postman e JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de inglês técnico para termos específicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de API key para autenticação, SSE para streaming em tempo real"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful API com endpoints versionados (api/v1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL (v1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para respostas padrão, text/event-stream para SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado, recomendação para implementação futura"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["localhost:3000 (desenvolvimento)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado, provável uso de container ou servidor Node.js"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["baseUrl", "apiKey", "recorderStreamUrl"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de suporte a conexões persistentes para SSE"]
      }
    ]
  },
  "README.md": {
    "summary": "Este projeto consiste em uma API REST que serve como um wrapper para a biblioteca NutJS, permitindo automação desktop via endpoints HTTP. Seu principal objetivo é expor funcionalidades de controle do mouse e captura de tela, facilitando a integração de automações de interface gráfica em sistemas distribuídos. A arquitetura segue o padrão Clean Architecture, separando claramente as responsabilidades em camadas de domínio, aplicação, infraestrutura e interface, garantindo alta manutenibilidade e escalabilidade. A API oferece endpoints para movimentação e clique do mouse, captura e busca de imagens na tela, além de um health check para monitoramento. O uso de TypeScript, Fastify e injeção de dependências com TSyringe assegura robustez e tipagem rigorosa, enquanto a validação de dados com Zod contribui para a segurança e integridade das operações. O projeto suporta múltiplos sistemas operacionais, com configurações específicas para permissões e variáveis de ambiente, e é preparado para ambientes de desenvolvimento, build e produção, facilitando a adoção em pipelines CI/CD.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS REST API - Automação Desktop via HTTP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação Desktop", "Automação de Interface Gráfica", "Controle de Mouse e Tela"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir execução correta dos comandos de automação",
          "Manter integridade e segurança das operações de controle do mouse",
          "Validação rigorosa dos dados de entrada"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "TSyringe", "Zod"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Domain - entidades e casos de uso",
          "Application - serviços e DTOs",
          "Infrastructure - adaptadores NutJS e providers",
          "Interface - controllers e middleware"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e funções",
          "kebab-case para arquivos",
          "prefixo api/v1 para rotas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Domain não depende de Application ou Infrastructure",
          "Application depende de Domain",
          "Infrastructure depende de Application",
          "Interface depende de Application e Infrastructure"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente para configuração"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade na execução dos comandos de automação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["NutJS", "Fastify", "TSyringe", "Zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de permissões específicas do SO"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Operações de captura e busca de imagens podem ser custosas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de entrada",
          "Separação clara de camadas",
          "Uso correto de injeção de dependências"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos endpoints e exemplos de uso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do Clean Architecture para garantir manutenibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL (/api/v1)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev (http://localhost:3000)", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [".env com configurações específicas"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Permissões de acessibilidade no macOS", "Variável DISPLAY no Linux"]
      }
    ]
  },
  "ecosystem.config.js": {
    "summary": "Este arquivo de configuração define o comportamento de execução de uma aplicação Node.js chamada 'nutjs-api' utilizando o gerenciador de processos PM2. Ele especifica que a aplicação será executada em modo fork com uma única instância, configurada para rodar em ambiente de produção na porta 3000. O arquivo também determina limites de memória para reinício automático, além de configurar arquivos de log para saída padrão e erros, garantindo monitoramento e estabilidade da aplicação em produção. Essa configuração permite controle eficiente do ciclo de vida do processo, facilitando a manutenção e escalabilidade do serviço.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-api", "API para automação e controle de dispositivos via nut.js"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Controle de dispositivos", "Node.js", "API REST"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Disponibilidade contínua da API",
          "Limite de uso de memória para evitar crashes",
          "Logs completos para auditoria e troubleshooting"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["Node.js 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm", "pm2"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Process Manager Pattern", "Forking Model"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "dist/ - código transpilado e compilado",
          "logs/ - arquivos de logs de saída e erro"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e propriedades",
          "kebab-case para nomes de apps e scripts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre código fonte (dist/) e configuração (ecosystem.config.js)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install", "npm install pm2 -g"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "controle de memória para evitar crashes",
          "execução em instância única para simplicidade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["execução em modo fork com 1 instância limita escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "logs separados para erros e saída padrão",
          "arquivos de log persistentes em logs/"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["PM2 para monitoramento e reinício automático"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["reinício automático ao ultrapassar limite de memória"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["pm2", "nodejs"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js versão compatível com dist/index.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["limitação de instância única pode impactar throughput"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de PM2 para gerenciamento de processos em produção"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["PM2 process manager"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV=production", "PORT=3000"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["limite de memória de 1GB para reinício automático"]
      }
    ]
  },
  "examples/recorder-client-esm.js": {
    "summary": "Este arquivo implementa um cliente ESM que se conecta a um endpoint SSE (Server-Sent Events) para receber e exibir eventos de gravação de interações do usuário, como ações de mouse e teclado. O código estabelece uma conexão persistente com o servidor, autentica via API key, escuta eventos específicos (conexão, eventos gravados e erros) e exibe logs detalhados no console, incluindo informações contextuais como coordenadas do mouse, tipo de tecla e timestamps. Além disso, gerencia o encerramento limpo da conexão ao receber sinais de interrupção do processo, garantindo a liberação adequada de recursos. Essa funcionalidade é essencial para monitoramento em tempo real e análise de comportamento do usuário em aplicações que capturam interações para auditoria, debugging ou análise UX.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Recorder Client - Monitoramento de eventos de interação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Monitoramento de UX",
          "Captura de eventos de input (mouse, keyboard)",
          "Streaming de eventos via SSE"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação via API key obrigatória",
          "Conexão persistente e estável para captura contínua",
          "Logs precisos e completos dos eventos capturados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (ESM) - Node.js 18+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Não aplicável"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "API REST local em http://localhost:3000",
          "Endpoint SSE para streaming de eventos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Event-driven Architecture", "Observer Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ - código fonte principal",
          "config/ - configurações e variáveis de ambiente",
          "logs/ - arquivos de logs (não presente no código atual)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e funções", "Constantes em UPPER_SNAKE_CASE"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Módulo único focado em cliente SSE", "Dependência externa isolada (eventsource)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["JavaScript Standard Style (implícito)"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado no código"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Indentação de 2 espaços", "Uso de template literals"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para comentários de bloco"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Nenhum type checking explícito (JavaScript puro)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Não aplicável (não há testes no código)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não aplicável"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node --experimental-modules client.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key'"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Chave API válida obrigatória para conexão"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API Key deve ser protegida e não exposta em logs"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Header 'x-api-key' obrigatório"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado (conexão HTTP no exemplo)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para eventos SSE em tempo real"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Prioridade em estabilidade e baixa latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplas conexões SSE simultâneas no servidor"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs de erro simples no console"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs informativos e de erro no console"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não há reconexão automática implementada"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["eventsource"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Não especificado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de reconexão automática e tratamento avançado de erros"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Conexão SSE pode ser interrompida sem tentativa de recuperação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado no cliente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza nos logs e tratamento de eventos",
          "Gerenciamento correto do ciclo de vida da conexão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários JSDoc para funções e blocos principais"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Uso de emojis e mensagens claras nos logs para facilitar leitura"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de SSE para streaming em tempo real por simplicidade e compatibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com streaming SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL (/api/v1/recorder/stream)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Eventos JSON via SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Localhost para desenvolvimento (http://localhost:3000)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de servidor SSE suportado"]
      }
    ]
  },
  "examples/recorder-client.js": {
    "summary": "Este arquivo implementa um cliente para conexão com um endpoint SSE (Server-Sent Events) que transmite eventos de gravação de interações do usuário, como ações de mouse e teclado. O código estabelece uma conexão autenticada via API key, escuta eventos específicos (conexão, eventos gravados e erros) e exibe informações detalhadas no console, incluindo coordenadas do mouse, ações de teclas e timestamps. Além disso, gerencia o ciclo de vida da conexão, garantindo fechamento adequado ao encerrar o processo, o que facilita o monitoramento em tempo real das interações do usuário para fins de auditoria, análise ou debugging em sistemas que capturam eventos de input.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Recorder Client - Monitoramento de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Monitoramento de interações de usuário",
          "Input event streaming",
          "SSE (Server-Sent Events)"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação via API key obrigatória",
          "Eventos devem ser processados em ordem e sem perda",
          "Conexão deve ser encerrada corretamente para evitar leaks"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Nenhum framework específico"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["Não aplicável"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Recorder API SSE endpoint (http://localhost:3000/api/v1/recorder/stream)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Event-driven", "Observer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ - código fonte",
          "config/ - configurações e variáveis de ambiente",
          "logs/ - arquivos de logs (não presente no código atual)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "UPPER_SNAKE_CASE para constantes",
          "PascalCase para classes (não aplicável aqui)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Módulo único para cliente SSE", "Dependência externa isolada (eventsource)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["JavaScript Standard Style (implícito)"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Não especificado no código"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Indentação de 2 espaços", "Uso de template literals"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["Comentários JSDoc para descrição geral"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Nenhum (JavaScript puro, sem TypeScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Não implementado"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Não definido"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Não aplicável"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Não aplicável"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Não especificado"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Não especificado"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node index.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["Não implementado"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Não aplicável"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Não configurado"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Não configurado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key'"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Acesso restrito via API key válida"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Dados de input do usuário (mouse, teclado)", "API key não exposta em logs"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["x-api-key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado (endpoint HTTP local)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para eventos SSE em tempo real"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e responsividade na exibição dos eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Dependente da escalabilidade do servidor SSE"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs de erro no console com mensagem e objeto de erro"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs no console para eventos e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não implementado reconexão automática"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["eventsource"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["eventsource compatível com Node.js 18+"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Falta de tratamento robusto de erros e reconexão"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Conexão pode ser perdida sem tentativa de reconexão"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado no cliente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros e segurança da API key"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários claros para eventos e fluxos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Uso de emojis para facilitar leitura dos logs"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de SSE para streaming em tempo real", "API key para autenticação simples"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com streaming SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL (/api/v1/)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Eventos JSON via SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Localhost para desenvolvimento"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Execução direta via Node.js"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de endpoint SSE disponível e estável"]
      }
    ]
  },
  "jest.config.js": {
    "summary": "Este arquivo configura o ambiente de testes para um projeto TypeScript utilizando Jest com suporte a ES Modules (ESM). Ele define presets específicos para integração com ts-jest, configura o ambiente de execução dos testes como Node.js, e especifica transformações para arquivos TypeScript, garantindo compatibilidade com ESM. Além disso, mapeia módulos para resolver extensões e define padrões para ignorar transformações em certos pacotes. O arquivo também estabelece padrões para localização dos testes, coleta e relatório de cobertura de código com metas mínimas, timeout para execução dos testes e scripts de setup para inicialização do ambiente de testes. Essa configuração assegura um ambiente de testes robusto, padronizado e alinhado com as melhores práticas para projetos TypeScript modernos, facilitando a manutenção e qualidade do código.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript com Jest para testes automatizados"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Testes automatizados", "TypeScript", "Node.js"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Cobertura mínima de 80% em branches, functions, lines e statements",
          "Execução dos testes em ambiente Node.js com suporte a ESM"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29.x", "ts-jest"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["clipboardy (para manipulação de clipboard em testes)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuração modular", "Preset pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ para código fonte",
          "tests/ para testes",
          "coverage/ para relatórios de cobertura"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos de teste terminam com .test.ts ou .spec.ts",
          "Pastas __tests__ ou tests"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte e testes",
          "Transformações aplicadas somente em arquivos .ts"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript via tsconfig.test.json"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.x", "ts-jest"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Arquivos em __tests__ e tests", "Testes terminam com .test.ts ou .spec.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["80% mínimo para branches, functions, lines e statements"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npx jest --coverage"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout de teste configurado para 10000ms"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["ts-jest", "jest", "clipboardy"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["ts-jest com useESM true", "tsconfig.test.json para configuração TypeScript"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "package-lock.json": {
    "summary": "O projeto nutjs-rest-api é uma API RESTful desenvolvida em TypeScript que utiliza o framework Fastify para fornecer uma interface eficiente e escalável para automação de interações com o sistema operacional, utilizando a biblioteca @nut-tree-fork/nut-js. Ele integra funcionalidades para manipulação de clipboard, processamento de imagens com Sharp, e gerenciamento de dependências e injeção de dependência via tsyringe, garantindo modularidade e testabilidade. O sistema é configurado para ambientes modernos Node.js, com suporte a variáveis de ambiente via dotenv, geração de IDs únicos com nanoid, e logging estruturado com pino e pino-pretty. A arquitetura favorece a separação de responsabilidades, validação de dados com zod, e testes automatizados com Jest e ts-jest, assegurando qualidade e manutenção contínua. O projeto é adequado para automação de tarefas desktop via API, com foco em performance, segurança e extensibilidade, suportando múltiplas plataformas (Windows, Linux, macOS).",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-rest-api", "API REST para automação desktop"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação desktop", "API REST", "Interação com sistema operacional"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade das ações de automação",
          "Segurança no acesso ao clipboard",
          "Validação rigorosa de dados de entrada"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x", "Node.js >=16"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.29.1", "tsyringe 4.10.0", "Jest 29.7.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "dotenv (configuração ambiente)",
          "clipboardy (clipboard management)",
          "sharp (image processing)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Modular Architecture", "REST API"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/controllers (API endpoints)",
          "src/services (business logic)",
          "src/utils (helpers)",
          "tests (unit and integration tests)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controllers, services e infra",
          "Uso de interfaces para abstração",
          "Injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com @typescript-eslint plugin",
          "Regras para evitar any e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão",
          "Integração com ESLint para formatação consistente"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes principais"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Uso de zod para validação runtime"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29.7.0", "ts-jest para integração com TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)", "Mocks para dependências externas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Uso de Jest mocks e fixtures para isolamento"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow com branches feature, main e hotfix"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev (executa Fastify em modo desenvolvimento)"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test (executa Jest)"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build (compila TypeScript para JavaScript)"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint (executa ESLint)"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format (executa Prettier)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no pacote, presumivelmente JWT ou API Key"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso via middleware Fastify (não detalhado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Clipboard data tratado com cuidado para evitar vazamentos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Configuração recomendada via Fastify plugins (não detalhado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Uso de HTTPS presumido para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para operações de automação e API REST"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e eficiência na manipulação de eventos e imagens"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache local para dados temporários (não detalhado)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via Fastify e Node.js cluster"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON padrão com mensagens e códigos HTTP"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging estruturado com pino e pino-pretty"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Possível integração com ferramentas externas (não detalhado)"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros via middleware Fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "fastify", "pino", "tsyringe", "zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js >=16", "TypeScript 5.x", "Fastify 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["@nut-tree-fork/* (nut-js ecosystem)"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum explicitamente identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Compatibilidade entre versões de Node.js e dependências nativas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Processamento intensivo de imagens pode impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Atualizado para TypeScript 5.x, uso de Fastify 4.x"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Qualidade da tipagem", "Cobertura de testes", "Segurança e validação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc e README atualizados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e PRs com descrição detalhada"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Fastify para alta performance", "Uso de tsyringe para DI"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL ou headers (não detalhado)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado, recomendada implementação via plugins Fastify"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker (presumido)", "Node.js process manager"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["PORT", "NODE_ENV", "API_KEYS (não expostos)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Suporte multiplataforma (Windows, Linux, macOS)",
          "Requisitos de permissões para automação"
        ]
      }
    ]
  },
  "package.json": {
    "summary": "O projeto nutjs-rest-api é uma API REST que serve como um wrapper para a automação desktop utilizando a biblioteca NutJS. Seu principal objetivo é expor funcionalidades de automação de interface gráfica via endpoints HTTP, permitindo que clientes controlem operações de desktop remotamente. O código centraliza a orquestração de comandos de automação, manipulação de dados e integração com serviços externos, garantindo um fluxo robusto para desenvolvimento, testes e deploy. A arquitetura modular e o uso de injeção de dependências facilitam a manutenção e extensibilidade, enquanto o uso de ferramentas modernas como Fastify, TypeScript e Zod assegura qualidade, validação e performance. O projeto está estruturado para suportar desenvolvimento ágil com scripts para lint, formatação, testes unitários e integração contínua, promovendo um ambiente confiável e escalável para automação desktop via API REST.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["nutjs-rest-api", "API REST para automação desktop com NutJS"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação Desktop", "API REST", "Automação de Interface Gráfica"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Produção inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução segura de comandos de automação",
          "Validação rigorosa de inputs",
          "Manutenção da integridade do estado do desktop"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.3"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.24.0", "tsyringe 4.8.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS", "Clipboardy", "Sharp"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "REST API"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ para código fonte",
          "dist/ para build",
          "tests/ para testes unitários e integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para scripts npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre API, serviços de automação e utilitários",
          "Uso de injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com @typescript-eslint",
          "Configuração para evitar erros comuns e manter padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com regras padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes principais"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com tsc --noEmit"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dependências externas e serviços de automação"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes unitários e integração", "Build e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install", "cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm run test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build:prod"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente via dotenv, sem exposição direta"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado no código fornecido"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não especificado, mas esperado baixa latência para comandos de automação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e confiabilidade na execução de comandos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["API REST escalável via Fastify, suporte a múltiplas requisições simultâneas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON padrão com mensagens e códigos HTTP"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging estruturado com Pino, níveis configuráveis"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros via middleware e respostas padronizadas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "fastify", "zod", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Versões fixas e compatíveis indicadas no package.json"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/ como pacote interno principal"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Script de auditoria de roadmap ainda não implementado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum explicitamente declarado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Não identificado no código fornecido"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Qualidade do código, cobertura de testes, aderência a padrões"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para APIs e serviços principais"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e PRs detalhados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Fastify e tsyringe para modularidade e performance"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Sem versionamento explícito no código fornecido"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Node.js server, possível containerização externa"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Variáveis gerenciadas via dotenv"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de acesso ao desktop para automação"]
      }
    ]
  },
  "src/application/dto/automation-request.dto.ts": {
    "summary": "Este arquivo define schemas de validação utilizando a biblioteca Zod para representar e validar dados relacionados a interações de mouse e operações de captura e busca na tela. Ele estrutura objetos que descrevem movimentos do mouse, cliques, arrastes, rolagem, além de operações de captura de tela e busca de elementos visuais com parâmetros configuráveis como coordenadas, duração, suavização e confiança. O código foca em garantir a integridade e consistência dos dados de entrada para ações de automação de interface gráfica, facilitando a integração com sistemas que executam essas operações de forma programática e segura. A abordagem modular e tipada permite reutilização e manutenção simplificada, além de garantir que as operações respeitem limites e formatos esperados, suportando cenários de automação, testes e controle remoto de interfaces visuais.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Automation and Screen Interaction Toolkit"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Interface Gráfica",
          "UI Automation",
          "Testes Automatizados",
          "Controle Remoto"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa de coordenadas para evitar ações fora da tela",
          "Respeito aos limites de duração para evitar bloqueios",
          "Confiança mínima para reconhecimento visual"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Modular Design"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/schemas - definição de schemas de validação",
          "src/types - tipos inferidos a partir dos schemas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para tipos e constantes", "snake_case para propriedades opcionais"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre schemas de mouse e de tela",
          "Tipos exportados para uso em outras camadas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para tipos e funções"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para simular inputs inválidos e limites"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Duração mínima 100ms e máxima 5000ms para ações de mouse"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Precisão e confiabilidade sobre velocidade extrema"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros de validação padronizados via Zod"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod 3.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tipos e limites", "Consistência de naming"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do Zod para validação centralizada"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/clipboard-request.dto.ts": {
    "summary": "Este arquivo define Data Transfer Objects (DTOs) para operações relacionadas ao clipboard, utilizando a biblioteca Zod para validação rigorosa dos dados de entrada. O principal foco é garantir a integridade e conformidade dos dados para as operações de copiar, colar e limpar o conteúdo do clipboard, com validações específicas como o limite máximo de 1 MB para o conteúdo a ser copiado. O código é estruturado para suportar requisições REST, onde as operações de paste e clear não requerem dados adicionais, enquanto a operação de copy valida o conteúdo textual enviado. Essa abordagem assegura robustez e segurança na manipulação do clipboard, facilitando a integração com outras partes do sistema que dependem dessas operações, além de promover a manutenção e escalabilidade do código.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Clipboard Operations API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["clipboard management", "data validation", "user interaction"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Content size must not exceed 1 MB", "Content cannot be empty for copy operation"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["DTO", "Schema Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/dtos - Contém definições de DTOs e schemas de validação"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e funções", "PascalCase para tipos e schemas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre schemas de validação e lógica de negócio"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/dtos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de schemas para testes isolados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Clipboard content must be validated to prevent injection or overflow"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Memory usage control via content size limit"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Validation errors with descriptive messages"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod", "node Buffer"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod >=3.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["No validation on paste and clear schemas may allow unintended calls"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Buffer.byteLength calculation on large strings"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta dos schemas", "Mensagens de erro claras"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os schemas e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação por simplicidade e robustez"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/keyboard-request.dto.ts": {
    "summary": "Este arquivo define Data Transfer Objects (DTOs) para operações relacionadas a teclado, utilizando a biblioteca Zod para validação rigorosa dos dados de entrada. Ele oferece schemas para três tipos principais de interações: digitação de texto com controle de timing, pressionamento de teclas específicas e combinações de teclas, garantindo integridade e conformidade com regras de negócio específicas, como limites de tamanho, tipos e valores permitidos. O código foca em assegurar que as entradas estejam dentro dos parâmetros esperados, prevenindo erros e comportamentos inesperados em sistemas que dependem de simulação ou captura de eventos de teclado, facilitando a integração segura e consistente com outras partes do sistema que manipulam input de usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard Input Validation Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de testes", "Simulação de input", "Interação com UI"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Texto digitado não pode estar vazio ou conter apenas caracteres de controle",
          "Teclas pressionadas devem estar entre as suportadas",
          "Combinações de teclas devem conter entre 1 e 5 teclas válidas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "DTO Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/schemas - validações e definições de DTOs para input de teclado"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e funções", "PascalCase para tipos e schemas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre schemas de validação e lógica de negócio"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para comentários de funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para simulação de input e validação"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint, Test, Build"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação rápida e eficiente para evitar latência em input"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Mensagens de erro claras e específicas via Zod"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["zod ^3.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta dos schemas", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação por ser robusto e extensível"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/clipboard.service.ts": {
    "summary": "O arquivo implementa um serviço de automação para manipulação da área de transferência (clipboard) em aplicações TypeScript, fornecendo operações assíncronas para copiar, colar e limpar conteúdo. Ele valida o tamanho do conteúdo a ser copiado para garantir que não ultrapasse 1 MB, garantindo robustez e evitando erros por excesso de dados. O serviço encapsula interações com a biblioteca clipboardy, retornando resultados padronizados que indicam sucesso ou falha, facilitando a integração com sistemas maiores que dependem de manipulação segura e eficiente do clipboard.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Clipboard Automation Service",
          "Serviço para manipulação automatizada da área de transferência"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Clipboard Management", "Sistemas Desktop e Web"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Limite máximo de 1 MB para conteúdo copiado",
          "Retorno padronizado de sucesso ou erro",
          "Não permitir conteúdo vazio na cópia"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["clipboardy 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Clean Architecture (Service Layer)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/interfaces - contratos de serviços",
          "domain/entities - entidades de domínio",
          "services - implementação de serviços de automação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Classes PascalCase", "Métodos camelCase", "Interfaces prefixadas com I"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e infraestrutura",
          "Serviços implementam interfaces do domínio"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/services", "tests/integration"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de clipboardy para simular operações"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard tratado com cuidado, evitando exposição indevida"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações assíncronas rápidas, resposta imediata esperada"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre velocidade e uso de memória, limite de 1 MB para evitar overhead"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Objeto CommandResult com success boolean e error string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções com mensagens claras e retorno padronizado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["clipboardy", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["clipboardy >=3.0.0", "tsyringe >=4.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../domain/interfaces", "../../domain/entities"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Limitação rígida de tamanho pode precisar revisão para casos futuros"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de clipboardy pode causar incompatibilidade em alguns sistemas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Validação de entrada", "Conformidade com interface"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, sem excesso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de tsyringe para DI", "Limite de 1 MB para conteúdo clipboard"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["CommandResult com success, data e error"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Serverless"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/event-buffer.service.ts": {
    "summary": "O código implementa um serviço de buffer circular para armazenamento temporário de eventos do tipo InputEvent, permitindo o replay eficiente de eventos após reconexões de clientes SSE (Server-Sent Events). Ele mantém um histórico limitado e gerenciável de eventos, suportando operações como adição, recuperação por ID, intervalo de tempo, limpeza e remoção de eventos antigos, garantindo a integridade e atualização contínua do buffer. A classe utiliza um array circular para otimizar o uso de memória e desempenho, além de registrar logs para monitoramento das operações, facilitando a sincronização de eventos em sistemas reativos e distribuídos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["EventBuffer", "Serviço de buffer circular para eventos SSE"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Sistemas reativos", "Eventos em tempo real", "Server-Sent Events (SSE)"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter ordem cronológica dos eventos",
          "Garantir replay correto após reconexão",
          "Limitar tamanho do buffer para evitar estouro de memória"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["SSE clients", "Logger interno"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Circular Buffer"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - configurações gerais",
          "src/services - serviços de negócio",
          "src/types - definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "PascalCase para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, serviços e configuração",
          "Dependência unidirecional para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any implícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para InputEvent e logger"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações de leitura e escrita devem ser O(1) ou O(n) com n limitado pelo tamanho do buffer"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade e uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer circular atua como cache temporário de eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Limitação do tamanho do buffer para evitar uso excessivo de memória"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs em níveis info e debug para operações críticas"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reinicialização do buffer via método clear"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "logger", "InputEvent"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe compatível"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../types/input-event.types.js", "../../config/logger.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Correção do uso incorreto de 'new array' para 'new Array'"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível perda de eventos se buffer estiver cheio e pruning não for eficiente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Operação pruneOldEvents pode ser custosa em buffers grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de manipulação correta do buffer circular",
          "Cobertura de testes",
          "Uso correto de tipos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Escolha do buffer circular para otimização de memória e performance"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["INPUT_EVENT_BUFFER"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória para buffers grandes"]
      }
    ]
  },
  "src/application/services/event-dispatcher.service.ts": {
    "summary": "O código implementa um serviço singleton chamado EventDispatcher, responsável por gerenciar e distribuir eventos de input, especificamente eventos de mouse e teclado, para múltiplos ouvintes registrados. Utilizando o padrão Observer, ele mantém uma fila interna de eventos que são processados assincronamente, garantindo a entrega ordenada e controlada dos eventos. Além disso, o serviço incorpora um mecanismo de rate limiting configurável para evitar sobrecarga, filtragem de teclas não imprimíveis e logging detalhado para monitoramento e depuração, assegurando robustez e escalabilidade na captura e despacho de eventos de input em aplicações complexas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["EventDispatcher", "Serviço de despacho de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Input event management",
          "User interaction tracking",
          "Real-time event processing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Rate limiting para evitar sobrecarga",
          "Entrega ordenada e confiável dos eventos",
          "Filtragem de eventos inválidos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["nanoid (ID generation)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton", "Observer", "Rate Limiter"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - Configurações de ambiente e logger",
          "types/ - Definições de tipos para eventos",
          "services/ - Serviços singleton como EventDispatcher"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase",
          "Métodos em camelCase",
          "Constantes em UPPER_SNAKE_CASE",
          "Interfaces prefixadas com I"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, configuração e serviços",
          "Dependências unidirecionais para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/services/EventDispatcher.test.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para listeners e eventos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso via registro de listeners"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Processamento assíncrono imediato para minimizar latência"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e controle de taxa para evitar sobrecarga"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Singleton para evitar múltiplas instâncias; rate limiting para controle de carga"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs estruturados via logger configurado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis debug, warn e error para monitoramento detalhado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Logger customizado integrado ao sistema"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções em listeners para evitar falhas globais"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "nanoid", "logger interno"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["tsyringe >=4.0.0", "nanoid >=3.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../types/input-event.types.js",
          "../../config/environment.js",
          "../../config/logger.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Melhorar tratamento de eventos inválidos", "Documentação mais detalhada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível perda de eventos em picos por rate limiting"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Listeners lentos podem atrasar processamento da fila"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Controle de fluxo, tratamento de erros, padrões de design"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc completo para novos métodos e classes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de português para contexto"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de singleton para garantir instância única do dispatcher"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Internal event dispatching API"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Eventos tipados com IDs únicos"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Configuração via variável de ambiente INPUT_EVENT_RATE"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["INPUT_EVENT_RATE"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de taxa para evitar sobrecarga do sistema"]
      }
    ]
  },
  "src/application/services/keyboard.service.ts": {
    "summary": "Este arquivo implementa um serviço de automação de teclado em TypeScript, focado em fornecer funcionalidades para digitação controlada com diferentes estratégias de timing. Ele abstrai a interação com o hardware via um adaptador de teclado, suportando modos de digitação instantânea, por caractere com delay configurável e com tempo total distribuído uniformemente. O serviço também emite eventos detalhados de keypress para integração com sistemas de monitoramento ou logging, garantindo rastreabilidade das ações. Além disso, oferece operações para pressionar teclas isoladas e combinações, com validações rigorosas para evitar erros e abusos, como limites de tamanho de texto e número máximo de teclas em combinação. A arquitetura modular e o uso de injeção de dependências facilitam a extensibilidade e manutenção, enquanto a sanitização do texto assegura segurança contra caracteres de controle indesejados. O serviço é projetado para ser parte de um sistema maior de automação, integrando-se com um dispatcher de eventos e uma biblioteca de controle de mouse para obter contexto posicional durante a digitação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Keyboard Automation Service",
          "Serviço de automação de teclado com controle de timing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de software",
          "Automação de interface",
          "Input simulation",
          "Keyboard event handling"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Texto digitado não pode conter caracteres de controle perigosos",
          "Limite máximo de 10.000 caracteres para digitação",
          "Combinações de teclas suportam no máximo 5 teclas",
          "Delay máximo configurável de 300.000 ms (5 minutos)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "@nut-tree-fork/nut-js (mouse position API)",
          "EventDispatcher (internal event bus)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Strategy Pattern", "Dependency Injection", "Event Dispatcher"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/interfaces - interfaces de domínio",
          "domain/entities - entidades de domínio",
          "services - implementação dos serviços de automação",
          "utils - utilitários e helpers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I' (ex: IKeyboardAdapter)",
          "Classes em PascalCase",
          "Métodos em camelCase",
          "Arquivos em kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e infraestrutura",
          "Serviços dependem de interfaces e injeção de dependência",
          "Eventos desacoplam componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, incluindo no-explicit-any e strict-null-checks"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode habilitado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos serviços",
          "Testes unitários para estratégias e serviço principal"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para IKeyboardAdapter e EventDispatcher"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um revisor",
          "Checks de lint e testes automatizados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço local)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável (serviço local)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Texto digitado deve ser sanitizado para remover caracteres de controle"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações devem ser responsivas, delays configuráveis para simular digitação humana"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade e precisão na simulação de digitação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a textos longos com processamento em lotes para evitar bloqueios"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Retorno padrão com sucesso booleano e mensagem de erro em string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Eventos de teclado emitidos via EventDispatcher para auditoria"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["EventDispatcher para rastreamento de eventos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções com mensagens claras e fallback para falha controlada"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["IKeyboardAdapter", "EventDispatcher", "@nut-tree-fork/nut-js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Delay máximo de 300000ms para timing"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["domain/interfaces", "domain/entities", "services/event-dispatcher.service.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de testes mais abrangentes para estratégias de digitação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível lentidão em digitação de textos muito longos com delays altos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Uso intensivo de await em loops pode impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de limites, tratamento de erros, clareza na emissão de eventos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para todas as interfaces e métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e explicativos, uso de português para contexto"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do Strategy Pattern para flexibilidade em timing de digitação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (serviço interno)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Objeto CommandResult com sucesso, dados ou erro"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Desenvolvimento, Staging, Produção"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containerizado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Variáveis para configuração de logging e modo debug"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Requer acesso a hardware para simulação de teclado e mouse"]
      }
    ]
  },
  "src/application/services/mouse.service.ts": {
    "summary": "O código implementa um serviço de controle de mouse que abstrai operações como movimento, clique, arrasto e scroll, garantindo validação de coordenadas e emissão de eventos para rastreamento. Utiliza injeção de dependências para desacoplar a implementação do adaptador de mouse e o despachante de eventos, promovendo extensibilidade e testabilidade. O serviço gerencia comportamentos como movimentos suaves, cliques simples e duplos, arrastos com duração configurável e scrolls com simulação de suavidade, além de registrar logs detalhados para monitoramento e tratamento de erros.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Automation Service", "Serviço para controle programático do mouse"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Testes automatizados", "Automação de tarefas"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa de coordenadas para evitar ações fora da tela",
          "Emissão consistente de eventos para rastreamento de ações",
          "Execução confiável de movimentos e cliques com tratamento de erros"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "@nut-tree-fork/nut-js (screen dimension API)",
          "pino (logging)",
          "EventDispatcher (interno para eventos de input)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/entities (entidades de domínio)",
          "dto (objetos de transferência de dados)",
          "services (serviços de aplicação)",
          "types (tipos compartilhados)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para funções e variáveis",
          "Arquivos com extensão .ts ou .js seguindo nome da classe ou funcionalidade"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, DTOs e serviços",
          "Dependências unidirecionais via injeção",
          "Interfaces para abstração de implementações concretas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo verificação de tipos e estilo"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode habilitado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ ao lado dos arquivos de código"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80% para unidades críticas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para MouseAdapter e EventDispatcher para isolar testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um revisor",
          "Checks de lint e testes automatizados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados via GitHub Actions"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (serviço local de automação)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Movimentos e cliques devem ocorrer em até 1 segundo por padrão"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre suavidade do movimento e tempo de resposta"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhum cache implementado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Projeto focado em execução local, sem escalabilidade distribuída"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados como exceções padrão com mensagens claras"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso do pino para logs em níveis debug, info e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros com rethrow para camadas superiores"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["MouseAdapter", "EventDispatcher", "@nut-tree-fork/nut-js", "pino"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "tsyringe 4.x", "pino >=7.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["domain/entities", "dto", "services", "types"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum débito técnico explícito identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível latência em scroll suave devido a múltiplas chamadas assíncronas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Loops assíncronos para scroll podem impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Projeto estável, sem migrações em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de coordenadas",
          "Tratamento de erros",
          "Consistência na emissão de eventos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos, sem excesso de verbosidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Dependency Injection para facilitar testes e extensibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável (API interna de serviço)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Promises resolvidas ou rejeitadas para indicar sucesso ou falha"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Desenvolvimento local", "Produção local"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Node.js runtime local"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Dependência de acesso ao sistema operacional para controle do mouse"]
      }
    ]
  },
  "src/application/services/recorder-listener.service.ts": {
    "summary": "O RecorderListenerService é um serviço TypeScript que atua como um intermediário entre eventos de input do usuário e eventos gravados para um sistema de gravação de interações. Ele escuta eventos de mouse e teclado, processa-os para gerar eventos estruturados, e adiciona screenshots em eventos de mouse 'down' quando configurado. O serviço gerencia o estado do mouse para detectar ações como drag, aplica throttling em eventos de movimento para otimizar performance, e notifica múltiplos listeners registrados sobre os eventos processados. Além disso, integra-se com serviços externos para captura de tela e logging, garantindo robustez e controle de fluxo, sendo fundamental para a funcionalidade de gravação e reprodução de interações do usuário em aplicações complexas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["RecorderListenerService", "Serviço de gravação de eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Gravação e reprodução de interações",
          "Input event processing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Captura precisa e ordenada de eventos",
          "Inclusão condicional de screenshots",
          "Notificação confiável dos listeners"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["ScreenService (captura de tela)", "EventDispatcher (distribuição de eventos)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Observer", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "services (lógica de negócio)",
          "config (configurações globais)",
          "types (definições de tipos)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "PascalCase para tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre serviços, tipos e configurações",
          "Dependências injetadas via DI para modularidade"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript estrito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para EventDispatcher e ScreenService"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Screenshots em base64 devem ser tratados com cuidado para evitar exposição"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Throttle em eventos mouse move para evitar sobrecarga"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre precisão da gravação e uso de recursos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Gerenciamento eficiente de listeners para evitar memory leaks"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs estruturados via logger com níveis debug, warn e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso extensivo de logger para debug e erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de exceções em captura de screenshot e notificação de listeners"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["EventDispatcher", "ScreenService", "recorderConfig"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./event-dispatcher.service.js", "./screen.service.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível overhead na captura de screenshots grandes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Captura e processamento assíncrono de screenshots"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Performance e throttling", "Clareza e modularidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos e privados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e em português para contexto"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de DI para facilitar testes e modularidade",
          "Throttle para otimizar eventos de movimento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["LOG_LEVEL", "RECORDER_CONFIG_*"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/screen.service.ts": {
    "summary": "Este arquivo implementa um serviço de captura e busca de templates visuais na tela, utilizando injeção de dependência para abstrair a interface de captura e reconhecimento de imagens. A classe ScreenService oferece métodos assíncronos para encontrar padrões visuais (templates) em regiões específicas da tela, capturar imagens da tela em formatos base64 e aguardar a aparição de um template dentro de um timeout configurável. O código mantém a integridade dos dados ao decodificar imagens base64 para buffers binários, delegando a lógica de reconhecimento para um adaptador externo, e registra eventos importantes para monitoramento e diagnóstico. Essa abordagem modular e orientada a interfaces facilita a integração com diferentes implementações de captura e reconhecimento, promovendo reutilização e testabilidade. O serviço é essencial para automação de testes visuais, monitoramento de interfaces e outras aplicações que dependem da análise dinâmica do conteúdo exibido na tela.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Screen Automation Service",
          "Serviço de automação visual para captura e reconhecimento de tela"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Reconhecimento visual",
          "Screen Capture",
          "Computer Vision"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão mínima de reconhecimento (confidence >= 0.8)",
          "Timeouts configuráveis para espera de templates",
          "Integridade dos dados base64"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x", "pino 8.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["ScreenAdapter (interface para captura e reconhecimento de tela)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/ - entidades de domínio",
          "dto/ - objetos de transferência de dados",
          "services/ - lógica de negócio e serviços",
          "infrastructure/ - implementações concretas de adaptadores"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes e interfaces",
          "camelCase para métodos e variáveis",
          "sufixo 'Request' para DTOs"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, DTOs e serviços",
          "Dependência invertida via interfaces para adaptadores"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any implícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode ativado)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de IScreenAdapter para testes unitários"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um revisor",
          "Checks de lint e testes automatizados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Imagens base64 devem ser tratadas com cuidado para evitar exposição"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Timeout padrão de 5000ms para espera de templates"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre velocidade de captura e precisão do reconhecimento"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados com objetos contendo mensagem e stack trace"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Uso do pino para logs estruturados com níveis debug, info e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Propagação de erros para camadas superiores para tratamento"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "pino", "ScreenAdapter interface"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../dto/automation-request.dto.js", "../../domain/entities/screen-region.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de tratamento de erros",
          "Cobertura de testes",
          "Consistência de logging"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos métodos públicos com JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Dependency Injection para facilitar testes e modularidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Base64 encoded images", "JSON for match results"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/config/dependency-injection.ts": {
    "summary": "Este arquivo é responsável pela configuração e registro das dependências do sistema utilizando o container de injeção de dependências do tsyringe. Ele centraliza a associação entre interfaces e suas implementações concretas, especialmente adaptadores para dispositivos de entrada (mouse, teclado, tela) e serviços relacionados, como clipboard, eventos e gravação de ações. O código promove a modularidade e a inversão de controle, facilitando a manutenção e a escalabilidade do sistema, além de garantir que componentes como EventDispatcher e EventBuffer sejam singletons para manter estado compartilhado consistente. Essa configuração é fundamental para habilitar a automação e controle de dispositivos de entrada, integrando camadas de aplicação, infraestrutura e interface de forma coesa e desacoplada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Automation System"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de dispositivos de entrada", "Controle de hardware", "Automação de UI"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir singleton para EventDispatcher e EventBuffer",
          "Manter desacoplamento entre adaptadores e serviços",
          "Registrar corretamente todas as dependências para evitar falhas em runtime"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS (biblioteca para automação de dispositivos de entrada)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Singleton", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application (serviços de negócio)",
          "infrastructure (adaptadores de hardware)",
          "interface (controladores de entrada e gravação)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes PascalCase",
          "Arquivos kebab-case",
          "Interfaces prefixadas com I (ex: IKeyboardAdapter)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre application, infrastructure e interface",
          "Dependências unidirecionais do container para os módulos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pastas __tests__ correspondentes a cada módulo"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para adaptadores de hardware e serviços externos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na injeção de dependências", "Minimizar overhead de singletons"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Uso de singletons para cache de instâncias"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Facilidade para adicionar novos adaptadores e serviços sem impacto no container"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["tsyringe", "reflect-metadata", "NutJS adapters"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["tsyringe >=4.0.0", "TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "infrastructure/adapters", "interface/controllers"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Necessidade de documentação mais detalhada para novos adaptadores"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum problema crítico identificado no registro de dependências"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Potencial overhead se container crescer excessivamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de registro correto das dependências",
          "Consistência na nomenclatura e modularização"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar novos serviços e adaptadores no container"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de singletons para EventDispatcher e EventBuffer para garantir estado compartilhado"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável no código analisado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "LOG_LEVEL"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de acesso a dispositivos de entrada no ambiente de execução"]
      }
    ]
  },
  "src/config/environment.ts": {
    "summary": "Este arquivo configura o ambiente de execução da aplicação Node.js, carregando variáveis de ambiente via dotenv e definindo um objeto imutável com parâmetros essenciais como NODE_ENV, porta, host, nível de log, velocidade do mouse, confiança da tela e chave de API. Ele centraliza a configuração, garantindo valores padrão para cada variável, facilitando a adaptação entre ambientes de desenvolvimento e produção. Além disso, expõe flags booleanas para identificar o ambiente atual, permitindo decisões condicionais em outras partes do sistema, promovendo flexibilidade e controle centralizado das configurações críticas da aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Configuração de Ambiente Node.js para Aplicação Web"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Configuração e gerenciamento de ambiente para aplicações backend Node.js"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Variáveis de ambiente devem estar definidas e válidas para evitar falhas na inicialização",
          "Chave de API deve ser protegida e nunca exposta em código fonte",
          "Ambiente deve ser corretamente identificado para aplicar configurações específicas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Node.js 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["dotenv"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Object", "Feature Flags"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - arquivos de configuração e ambiente",
          "src/modules - lógica de negócio",
          "src/utils - utilitários e helpers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para tipos e classes",
          "constantes em camelCase com prefixo environment"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada em módulo próprio para evitar acoplamento",
          "Exportação apenas do objeto environment e flags para uso externo"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [".eslintrc.json com regras para TypeScript e Node.js"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e objetos exportados"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com configuração no tsconfig.json"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ dentro de cada módulo"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para variáveis de ambiente e dependências externas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install && cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não definido neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não definido neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API_KEY deve ser protegida e não exposta"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não definido neste arquivo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não definido neste arquivo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na leitura de configuração"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Configuração carregada uma vez e imutável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplos ambientes via variáveis de ambiente"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não definido neste arquivo"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Nível de log configurável via variável LOG_LEVEL"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não definido neste arquivo"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para valores padrão em variáveis de ambiente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["dotenv versão compatível com Node.js 18"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação de variáveis de ambiente pode ser melhorada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível uso de valores padrão inseguros para API_KEY"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de variáveis de ambiente e uso correto de tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar variáveis de ambiente e seus valores padrão"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de dotenv para configuração centralizada"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não aplicável"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development, production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker, Kubernetes ou Serverless (configuração agnóstica)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV, PORT, HOST, LOG_LEVEL, MOUSE_SPEED, SCREEN_CONFIDENCE, API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de garantir variáveis de ambiente configuradas corretamente"]
      }
    ]
  },
  "src/config/input-events.config.ts": {
    "summary": "Este arquivo configura e valida parâmetros essenciais para o sistema de eventos de input, garantindo que o buffer, taxa e tempo de vida dos eventos estejam dentro de limites seguros e operacionais. Ele importa variáveis de ambiente para definir configurações como bufferSize, heartbeatMs, maxRate, maxEventAge e debug, aplicando validações rigorosas para evitar configurações inválidas que possam comprometer a estabilidade do sistema. Ao validar e congelar essas configurações, o código assegura um comportamento previsível e robusto do sistema de input events, facilitando a manutenção e integração com outros módulos que dependem dessas definições.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Events Configuration System"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Sistemas de eventos, Input Event Processing, Middleware"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "bufferSize deve estar entre 1 e 100000",
          "heartbeatMs deve estar entre 1000 e 300000 ms",
          "maxRate deve estar entre 1 e 50000 eventos/s",
          "maxEventAge deve estar entre 1000 e 3600000 ms"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Node.js 18.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["dotenv (environment variable management)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton", "Fail-fast"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do sistema",
          "src/ - código fonte principal",
          "tests/ - testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para interfaces e tipos",
          "UPPER_SNAKE_CASE para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo de configuração isolado para input events",
          "Dependência unidirecional para dotenv e processo Node.js"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e interfaces"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/ para testes de configuração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de variáveis de ambiente e funções de processo"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install && cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente devem ser protegidas e não expostas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável neste módulo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Configurações devem garantir baixa latência no processamento de eventos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Equilíbrio entre throughput e uso de memória no buffer"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Configurações permitem ajuste para diferentes cargas de eventos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Lançamento de Error com mensagens claras para configuração inválida"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Console.error para erros críticos de configuração"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fail-fast: encerra processo em caso de configuração inválida"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["dotenv versão compatível com Node.js 18+"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de variáveis de ambiente pode causar falhas se não configuradas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Configurações incorretas podem impactar throughput e latência"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação rigorosa de limites e tratamento de erros"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para interfaces e funções"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de fail-fast para evitar execução com configurações inválidas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Não aplicável"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Configuração de maxRate para limitar eventos por segundo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev, staging, prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker e Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "INPUT_EVENT_BUFFER",
          "INPUT_EVENT_HEARTBEAT",
          "INPUT_EVENT_RATE",
          "INPUT_EVENT_MAX_AGE",
          "INPUT_EVENT_DEBUG"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de memória e CPU para buffers grandes"]
      }
    ]
  },
  "src/config/keyboard.config.ts": {
    "summary": "Este arquivo define configurações imutáveis para funcionalidades de teclado, permitindo a personalização via variáveis de ambiente. Ele estabelece parâmetros como modo padrão de digitação, tamanho máximo de texto, delays por caractere e tamanho de lote para processamento, além de habilitar logs para debug. A função de validação assegura que os valores configurados estejam dentro de limites seguros e aceitáveis, prevenindo erros de configuração que possam impactar a performance ou comportamento do sistema. O código integra-se a um sistema maior que manipula entrada de texto, garantindo flexibilidade e robustez na configuração do comportamento do teclado, com foco em controle preciso de timing e volume de dados processados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard Input Configuration Module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software Development", "Input Automation", "Keyboard Event Handling"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "maxTextLength must be between 1 and 100000",
          "defaultDelayPerChar must be non-negative",
          "maxDelay must be between 0 and 3600000",
          "batchSize must be between 1 and 1000",
          "defaultMode must be one of: instant, perChar, total"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["dotenv (environment variable loader)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Immutable Configuration Object",
          "Environment-based Configuration",
          "Validation Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do sistema",
          "src/ - código fonte principal",
          "tests/ - testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para constantes e funções",
          "PascalCase para tipos e interfaces",
          "snake_case para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configurações isoladas em módulo próprio",
          "Validação separada da definição de constantes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e constantes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/keyboardConfig.test.ts"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock environment variables with jest"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "Passing CI checks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Unit tests", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Environment variables should not expose sensitive data"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["N/A"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Delays configuráveis para otimização de performance"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Balance entre velocidade de digitação e uso de recursos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["N/A"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Batch size configurável para escalabilidade no processamento"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Lançamento de Error com mensagens claras"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Debug mode habilita logs detalhados"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["N/A"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Validação prévia evita estados inválidos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["dotenv latest stable"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação poderia ser mais robusta para tipos e NaN"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível falha silenciosa se variáveis de ambiente forem mal formatadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Configurações incorretas podem impactar performance de digitação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["N/A"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de limites e tipos", "Clareza e imutabilidade das configurações"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as funções e constantes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de dotenv para configuração via ambiente",
          "Imutabilidade das configurações para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["N/A"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "KEYBOARD_DEFAULT_MODE",
          "KEYBOARD_MAX_TEXT_LENGTH",
          "KEYBOARD_DEFAULT_DELAY_PER_CHAR",
          "KEYBOARD_MAX_DELAY",
          "KEYBOARD_BATCH_SIZE",
          "KEYBOARD_DEBUG"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limite máximo de delay para evitar bloqueios longos",
          "Batch size para controle de uso de memória"
        ]
      }
    ]
  },
  "src/config/logger.ts": {
    "summary": "Este arquivo configura um logger utilizando a biblioteca pino, adaptando seu comportamento conforme o ambiente de execução. Ele cria uma instância de logger que ajusta o nível de log dinamicamente com base na configuração do ambiente, e aplica um formato de saída humanamente legível (pino-pretty) durante o desenvolvimento, melhorando a legibilidade dos logs com cores e timestamps formatados. Em ambientes de produção, o logger opera em modo padrão, garantindo performance e simplicidade na geração dos logs. Essa configuração centraliza o controle de logging, facilitando a manutenção e a observabilidade do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Logger Configuration Module",
          "Centralized logging setup for environment-aware log output"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Software Infrastructure", "Observability", "Logging"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Development"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Log level must reflect environment settings",
          "Development logs must be human-readable",
          "Production logs must be performant and minimal"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript ES Modules"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["pino 8.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Singleton Logger Instance", "Environment-based Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["/src/logger - módulo responsável pela configuração e exportação do logger"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes (não aplicável aqui)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Logger isolado em módulo próprio, dependente apenas do environment e pino"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Nenhum type checking explícito (JavaScript puro)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Performance otimizada em produção", "Legibilidade em desenvolvimento"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis de log configuráveis via environment", "Formato human-readable em dev"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["pino", "environment.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["./environment.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de níveis de log", "Configuração correta para ambientes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de pino-pretty apenas em desenvolvimento para melhor legibilidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["logLevel", "nodeEnv"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/config/mouse.config.ts": {
    "summary": "Este arquivo define uma configuração padrão para operações relacionadas ao mouse, centralizando parâmetros essenciais para controlar o comportamento de ações como movimentos e cliques. Ele extrai valores de variáveis de ambiente para permitir customização dinâmica, garantindo flexibilidade na duração mínima e máxima das ações, suavização do movimento, taxa de amostragem para interpolação e intervalos de streaming. A estrutura é imutável, promovendo segurança e previsibilidade no uso dessas configurações em diferentes partes do sistema, facilitando a integração com módulos que dependem de parâmetros consistentes para manipulação de eventos do mouse.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Control Configuration", "Configuração padrão para operações do mouse"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["User Interaction", "Input Device Management", "Mouse Event Handling"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Stable Configuration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "minDuration must be less than maxDuration",
          "Duration values must be positive integers",
          "Smooth movement flag must be boolean"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["None (Library/Utility Module)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["N/A"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Environment Variables (process.env)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Immutable Configuration Object", "Environment-based Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - arquivos de configuração",
          "src/ - código fonte principal",
          "types/ - definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["CamelCase para constantes e tipos", "snake_case para variáveis de ambiente"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configurações isoladas em módulo próprio",
          "Exportação de tipos para tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para comentários de código"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/config/"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock environment variables"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "Passing CI checks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Unit Tests", "Build"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Environment variables devem ser protegidas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["N/A"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["N/A"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Configuração deve ser carregada rapidamente na inicialização"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na leitura de configurações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Configuração imutável evita necessidade de cache dinâmico"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Configuração centralizada facilita escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["N/A - valores padrão aplicados em caso de ausência"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["N/A"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["N/A"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fallback para valores padrão em parsing de variáveis de ambiente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["process.env"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >= 4.5"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["N/A"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Validação de variáveis de ambiente pode ser melhorada"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Valores inválidos em variáveis de ambiente podem causar comportamento inesperado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Estável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de valores padrão e tipos", "Imutabilidade das configurações"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários JSDoc para todas as propriedades"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Clareza e objetividade em comentários"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de variáveis de ambiente para flexibilidade",
          "Configuração imutável para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["N/A"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["N/A"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "MOUSE_MIN_DUR",
          "MOUSE_MAX_DUR",
          "MOUSE_DEFAULT_SMOOTH",
          "MOUSE_SAMPLE_RATE",
          "MOUSE_STREAM_INTERVAL",
          "MOUSE_DEFAULT_DURATION"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Variáveis de ambiente devem ser configuradas corretamente para evitar falhas"]
      }
    ]
  },
  "src/config/recorder.config.ts": {
    "summary": "Este arquivo de configuração gerencia parâmetros essenciais para o sistema de gravação (recorder), utilizando variáveis de ambiente para definir comportamentos como captura de screenshots, intervalo de movimentação e tamanho máximo permitido para imagens. Ele valida rigorosamente os valores configurados, garantindo que estejam dentro de limites seguros e operacionais, prevenindo erros de configuração que possam comprometer a estabilidade do sistema. Além disso, o módulo integra-se ao ambiente de desenvolvimento exibindo logs informativos, facilitando o monitoramento e ajuste das configurações durante o ciclo de desenvolvimento, promovendo robustez e flexibilidade na parametrização do recorder.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recorder System Configuration",
          "Gerenciamento de parâmetros para sistema de gravação de eventos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Software de monitoramento e gravação de eventos",
          "Configuração via environment variables"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável com suporte a desenvolvimento"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "RECORDER_MOVE_INTERVAL_MS deve estar entre 20 e 200 ms",
          "RECORDER_MAX_SCREENSHOT_SIZE deve estar entre 10KB e 10MB",
          "RECORDER_INCLUDE_SCREENSHOT deve ser booleano implícito"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["dotenv 16.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Management", "Fail-fast Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - arquivos de configuração",
          "src/types - definições de tipos TypeScript",
          "src/modules - funcionalidades específicas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para tipos e interfaces",
          "UPPER_SNAKE_CASE para variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada em módulo próprio",
          "Tipos importados de pasta types",
          "Exportação clara para uso externo"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any implícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install && cp .env.example .env"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Variáveis de ambiente contendo configurações sensíveis devem ser protegidas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação rápida para evitar overhead em runtime"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Lançamento de Error com mensagens claras para configuração inválida"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de configuração exibidos apenas em ambiente de desenvolvimento"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Fail-fast para evitar uso de configurações inválidas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["dotenv para carregamento de variáveis de ambiente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["dotenv versão compatível com Node.js 18+"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Tipos importados de '../types/recorder-event.types.js'"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação correta dos limites de configuração",
          "Manutenção da clareza e simplicidade do código"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para variáveis de ambiente e seus limites"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha por fail-fast para evitar uso de configurações inválidas",
          "Uso de dotenv para flexibilidade em múltiplos ambientes"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "RECORDER_INCLUDE_SCREENSHOT",
          "RECORDER_MOVE_INTERVAL_MS",
          "RECORDER_MAX_SCREENSHOT_SIZE",
          "NODE_ENV"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/entities/command-result.ts": {
    "summary": "O arquivo define uma interface TypeScript chamada CommandResult, que padroniza o formato de resposta para a execução de comandos em serviços de automação. Seu comportamento central é indicar o sucesso ou falha da operação por meio do campo booleano 'success', retornando dados relevantes em caso de sucesso e mensagens de erro em caso de falha. Essa estrutura simples e genérica facilita a integração entre módulos, garantindo consistência na comunicação e tratamento de resultados, além de habilitar um fluxo claro de controle de erros e dados em sistemas distribuídos ou microserviços.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Serviços de Automação - Padronização de Resultados"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Serviços Distribuídos", "Microservices"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir consistência na resposta de comandos",
          "Tratamento correto de erros e dados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["DTO", "Unified Response Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Interfaces definidas em pasta 'interfaces' para padronização de contratos"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para interfaces", "camelCase para propriedades"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Interfaces independentes para desacoplamento entre serviços"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Boolean success flag", "Optional error message string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/entities/mouse-action.ts": {
    "summary": "Este arquivo define uma abstração para ações de mouse em um ambiente de automação ou interface gráfica, encapsulando operações como movimento, clique, arrasto e rolagem. Ele utiliza interfaces e enums para tipar pontos, botões do mouse e opções específicas para cada ação, garantindo flexibilidade e precisão no controle do dispositivo de entrada. A classe MouseAction centraliza a criação dessas ações, facilitando a composição e execução de sequências de interações com a interface, suportando parâmetros opcionais para suavização, duração, tipo de clique e direção de scroll, o que permite uma integração robusta em sistemas que demandam manipulação programática do mouse, como testes automatizados ou robôs de interface. O design modular e tipado promove manutenção e extensão simples, além de garantir segurança de tipos e clareza semântica no uso das ações definidas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Automation Framework"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de Interface", "UI Testing", "Input Device Control"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": ["Precisão na execução das ações", "Imutabilidade das ações após criação"]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Factory Method", "Immutable Object"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/actions - Contém definições de ações de input",
          "src/interfaces - Tipos e enums para modelagem"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes e interfaces",
          "UPPER_SNAKE_CASE para enums",
          "camelCase para métodos e variáveis"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos (interfaces/enums) e lógica de ação (classe MouseAction)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit - Testes unitários para MouseAction e interfaces"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para simular eventos de mouse e opções"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Lint", "Test", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na execução das ações"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [""]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript Compiler"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=4.9"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Melhorar tipagem para opções de drag e scroll"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Uso de 'as any' pode causar erros silenciosos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de tipos", "Clareza semântica", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para todas as funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Factory Methods para criação de ações",
          "Imutabilidade das instâncias MouseAction"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [""]
      }
    ]
  },
  "src/domain/entities/screen-region.ts": {
    "summary": "Este arquivo define interfaces e uma classe para manipulação de regiões retangulares na tela, focando em operações geométricas básicas como verificação de contenção e cálculo do centro. A classe ScreenRegion encapsula propriedades de posição e dimensão, além de métodos para determinar se um ponto está dentro da região e para obter o ponto central, facilitando o uso em contextos de reconhecimento visual ou UI automation. A funcionalidade de conversão a partir de um objeto MatchResult permite integração com sistemas de detecção que retornam regiões com níveis de confiança, habilitando um fluxo de trabalho consistente para manipulação e análise de áreas detectadas na tela.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Screen Region Detection and Manipulation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Computer Vision", "UI Automation", "Image Processing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Regiões devem representar áreas válidas na tela",
          "Confiança de detecção deve ser preservada na conversão"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Sistemas de detecção visual que retornam MatchResult"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["DTO", "Factory Method"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/models - definição de interfaces e classes de domínio",
          "src/utils - utilitários para manipulação geométrica"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["PascalCase para classes e interfaces", "camelCase para métodos e variáveis"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre modelos de dados e lógica de negócio",
          "Interfaces definem contratos para interoperabilidade"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes de unidade das classes e interfaces"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para objetos MatchResult em testes unitários"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de cálculo e baixo overhead"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza e simplicidade do código",
          "Cobertura de testes",
          "Consistência de nomenclatura"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e informativos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de interfaces para garantir contratos",
          "Métodos estáticos para conversão de tipos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/interfaces/automation-service.interface.ts": {
    "summary": "Este arquivo define uma interface base para serviços de automação, estabelecendo um contrato comum para todos os serviços que executam comandos automatizados dentro do sistema. Embora a interface em si não implemente métodos, ela funciona como uma marcação para padronizar e identificar serviços de automação, facilitando a integração e extensão futura. Essa abordagem modular permite que diferentes serviços específicos implementem suas próprias operações, garantindo consistência e flexibilidade na arquitetura do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Services Framework",
          "Plataforma para execução e gerenciamento de comandos automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de processos", "Execução de comandos", "Serviços backend"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Serviços de automação devem garantir execução confiável de comandos",
          "Interface deve ser implementada por todos os serviços de automação para padronização"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Node.js 20"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Interface Segregation", "Marker Interface"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "entities/: modelos de dados e tipos",
          "services/: implementação dos serviços de automação",
          "interfaces/: definições de contratos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I' (ex: IAutomationService)",
          "Arquivos em camelCase com extensão .ts ou .js"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Interfaces definem contratos claros entre módulos",
          "Dependências unidirecionais para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any explícito",
          "Regras para imports ordenados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão",
          "Uso de aspas simples e ponto e vírgula obrigatório"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de interfaces e métodos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos módulos",
          "Testes unitários para serviços específicos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange, Act, Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para dependências externas e serviços"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um revisor",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso baseado em roles para execução de comandos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Tokens de autenticação e credenciais de serviços"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Security-Policy", "X-Content-Type-Options", "Strict-Transport-Security"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Criptografia TLS para comunicação", "Armazenamento seguro de segredos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Execução de comandos em até 500ms para operações críticas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de execução priorizada sobre uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache local para resultados de comandos frequentes com TTL de 5 minutos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Arquitetura preparada para escalabilidade horizontal via containers"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON padrão com campos code, message e details"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis info, warn, error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Sentry para captura de erros", "Prometheus para métricas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retry automático para falhas transitórias"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["entities/command-result.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0 <6.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["entities", "services", "interfaces"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Documentação incompleta sobre contratos específicos de serviços"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Ausência de métodos na interface pode gerar inconsistência na implementação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração para TypeScript 5.0 concluída"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência na implementação das interfaces", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar contratos e expectativas de cada serviço"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos em português com termos técnicos em inglês"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Marker Interface para padronizar serviços de automação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL (ex: /v1/automation)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Limite de 1000 requisições por minuto por usuário"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev: https://dev.automation.example.com",
          "staging: https://staging.automation.example.com",
          "prod: https://automation.example.com"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containers orquestrados via Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "DATABASE_URL", "JWT_SECRET"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação de memória por container em 512MB",
          "Requisitos de alta disponibilidade"
        ]
      }
    ]
  },
  "src/index.ts": {
    "summary": "Este arquivo implementa um servidor HTTP utilizando o framework Fastify, configurado para atuar como backend de uma aplicação que expõe rotas de automação via API RESTful. O código inicializa dependências via injeção, configura o logger com níveis ajustados conforme o ambiente (desenvolvimento ou produção), registra rotas específicas sob o prefixo '/api/v1' e define um endpoint de health check para monitoramento do estado do serviço. Além disso, implementa um middleware global para tratamento centralizado de erros e gerencia o ciclo de vida do servidor, incluindo inicialização assíncrona e shutdown gracioso em resposta a sinais do sistema, garantindo estabilidade e resiliência operacional. A arquitetura modular e o uso de padrões como injeção de dependência e middleware evidenciam uma preocupação com escalabilidade, manutenção e integração com outros componentes do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation API Server"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "API REST", "Backend"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Tratamento centralizado de erros",
          "Disponibilidade do endpoint de health check",
          "Shutdown gracioso para evitar perda de requisições"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Pino Logger"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Middleware", "Modular Routing"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config: configurações e injeção de dependências",
          "interface/middleware: middlewares para tratamento de erros",
          "routes: definição das rotas da API"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes e tipos",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração, rotas e middleware",
          "Dependências injetadas via DI para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, sem uso explícito no código"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e módulos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Middleware centralizado para formatação e resposta de erros"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logger configurado via pino com níveis ajustados por ambiente"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Shutdown gracioso para evitar perda de requisições em encerramento"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "pino", "reflect-metadata"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./routes/automation.routes.js",
          "./interface/middleware/error-handler.middleware.js",
          "./config/dependency-injection.js",
          "./config/environment.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Prefixo /api/v1 para versionamento"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "environment.port",
          "environment.host",
          "environment.nodeEnv",
          "environment.logLevel"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-keyboard.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador de teclado utilizando a biblioteca NutJS, fornecendo uma interface abstrata para operações de teclado que incluem digitação de texto, pressionamento e liberação de teclas individuais, além de combinações de teclas. O adaptador encapsula a complexidade da biblioteca NutJS, mapeando strings representativas de teclas para constantes específicas, garantindo suporte a teclas comuns e combinações como Ctrl+C e Cmd+V. Ele também trata erros de forma robusta, lançando exceções detalhadas em caso de falhas, e oferece uma função de delay para pausas controladas, facilitando a integração com sistemas que necessitam de automação de entrada via teclado. Essa implementação é injetável via tsyringe, permitindo fácil integração em arquiteturas baseadas em injeção de dependência e promovendo desacoplamento e testabilidade.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Keyboard Adapter", "Automação de entrada via teclado"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de testes", "Automação de UI", "Robotic Process Automation (RPA)"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Suporte correto a todas as teclas mapeadas",
          "Tratamento robusto de erros para evitar falhas silenciosas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js (keyboard control)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Adapter", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - serviços de domínio",
          "infrastructure/adapters - adaptadores de bibliotecas externas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para métodos e variáveis",
          "snake_case evitado"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre interface (IKeyboardAdapter) e implementação (NutJSKeyboardAdapter)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para async/await, uso de promises, e tratamento de erros"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/adapters", "mock de NutJS para simulação"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90% cobertura em métodos públicos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de keyboard do NutJS para isolar testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [""]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [""]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Operações assíncronas devem ser rápidas para não impactar UX"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência em digitação e combinação de teclas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhuma caching implementada para mapeamento de teclas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade não crítica, foco em estabilidade e precisão"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros lançados com mensagens detalhadas e contexto"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado no adaptador, esperado em camada superior"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [""]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento via exceções para falhas em operações de teclado"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [""]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["NutJS versão compatível com API usada"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services/keyboard.service.js (IKeyboardAdapter)"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Duplicação do mapeamento de teclas em múltiplos métodos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Suporte limitado a teclas não mapeadas explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Execução sequencial de pressKey/releaseKey em combinações pode impactar performance"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [""]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Cobertura de testes", "Clareza e legibilidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Adapter para desacoplamento da biblioteca NutJS"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [""]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD pipeline"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [""]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Dependência de ambiente com suporte a NutJS e permissões de controle de teclado"]
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-mouse.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador de mouse utilizando a biblioteca Nut.js para abstrair operações de controle do mouse em um ambiente TypeScript. Ele oferece funcionalidades para movimentação do cursor com suporte a movimentos instantâneos e suaves via interpolação linear, cliques simples e duplos, arrasto de elementos, rolagem vertical e obtenção da posição atual do cursor. O adaptador integra-se a um sistema maior por meio da interface IMouseAdapter, garantindo desacoplamento e injeção de dependências via tsyringe. A configuração de velocidade do mouse é ajustada dinamicamente conforme o contexto da operação, e o código prioriza precisão e controle refinado dos eventos de mouse, habilitando automações e interações programáticas com a interface gráfica do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Control Automation", "Nut.js Mouse Adapter"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de Interface", "Controle de dispositivos de entrada", "UI Automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Movimentação precisa do cursor",
          "Execução correta de cliques e arrastos",
          "Sincronização temporal em movimentos suaves"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x", "Nut.js 2.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Nut.js (hardware abstraction)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - Serviços de aplicação e interfaces",
          "domain/entities - Entidades de domínio e tipos",
          "config - Configurações de ambiente e constantes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para métodos e variáveis",
          "Uppercase para enums"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências unidirecionais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any implícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "Interfaces fortemente tipadas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de dependências externas Nut.js", "Fixtures para pontos de mouse"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Testes automatizados", "Lint", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Movimentação instantânea deve ser imediata",
          "Movimentos suaves respeitam duração configurada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Precisão e suavidade sobre velocidade bruta"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Nut.js", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "domain/entities", "config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Delay em movimentos suaves pode impactar responsividade"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipagem",
          "Uso correto de async/await",
          "Configuração dinâmica de mouseSpeed"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Escolha do Nut.js para controle de mouse", "Uso de tsyringe para DI"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["environment.mouseSpeed"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-screen.adapter.ts": {
    "summary": "O arquivo implementa um adaptador de captura de tela utilizando a biblioteca NutJS, focado em fornecer uma interface para capturar imagens da tela inteira ou de regiões específicas, convertendo os dados brutos em imagens PNG otimizadas. Ele integra funcionalidades básicas de captura com logging detalhado para monitoramento e diagnóstico, embora funcionalidades de busca e espera por templates ainda estejam pendentes de implementação. O componente é projetado para ser injetável e configurável, facilitando sua integração em sistemas maiores que demandam manipulação e análise de imagens de tela para automação ou monitoramento visual.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "NutJS Screen Capture Adapter",
          "Serviço de captura e processamento de tela para automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de UI", "Screen Capture", "Image Processing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Desenvolvimento inicial", "Implementação parcial com funcionalidades pendentes"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Captura precisa e confiável da tela",
          "Conversão correta e eficiente para PNG",
          "Logging detalhado para auditoria"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["NutJS Screen API", "Sharp image processing library"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - serviços de aplicação",
          "domain/entities - entidades de domínio",
          "config - configurações do ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "Prefixo 'I' para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências unidirecionais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint-config-standard-with-typescript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para tipos e métodos públicos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Eficiência na conversão de imagens", "Minimização do uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erro lançado com objeto Error padrão"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging estruturado com pino", "Níveis debug, info, error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "sharp", "pino", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../../application/services/screen.service.js",
          "../../../domain/entities/screen-region.js",
          "../../../config/environment.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Implementação incompleta dos métodos find e waitFor"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Cobertura de logging", "Tratamento de erros", "Clareza e modularidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para métodos públicos e interfaces"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e uso de emojis para facilitar leitura"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de NutJS para captura de tela",
          "Sharp para processamento de imagens",
          "Injeção de dependência com tsyringe"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["Buffer PNG para captura de tela"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["environment.screenConfidence"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/recorder-mouse.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador especializado para manipulação de eventos de mouse dentro de um sistema de gravação de ações do usuário, estendendo funcionalidades básicas de controle do mouse para incluir a emissão de eventos detalhados durante operações de drag. O componente central é a classe RecorderMouseAdapter, que intercepta e emite eventos de mouse (click, move, release) sincronizados com ações físicas simuladas, garantindo rastreabilidade e integração com um sistema de dispatch de eventos. A lógica de movimentação é dividida em etapas temporizadas, permitindo a emissão periódica de eventos de movimento, o que possibilita um registro preciso e reativo das interações do usuário. A arquitetura utiliza injeção de dependências para desacoplar o dispatcher de eventos, promovendo testabilidade e modularidade. Este adaptador é fundamental para sistemas que necessitam de gravação e reprodução de interações de mouse com alta fidelidade, como automação de testes ou ferramentas de monitoramento de UX.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["RecorderMouseAdapter", "Mouse event recording and dispatching module"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de testes", "Gravação de eventos de input", "UX monitoring"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Emissão precisa e ordenada de eventos de mouse",
          "Sincronização temporal entre ações físicas e eventos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["tsyringe 4.x (Dependency Injection)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["@nut-tree-fork/nut-js (mouse control library)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Adapter Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - serviços de aplicação como EventDispatcher",
          "domain/entities - entidades de domínio como MouseButton e Point",
          "adapters - adaptadores para hardware ou bibliotecas externas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "PascalCase para enums"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Dependências injetadas via tsyringe"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "@typescript-eslint rules configuradas para evitar any implícito e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode enabled)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos adaptadores"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then para testes comportamentais"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de EventDispatcher e mouse do nut-js para isolar testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes automatizados aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Movimentação e emissão de eventos em tempo real com latência mínima"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Precisão temporal e responsividade sobre uso de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["@nut-tree-fork/nut-js", "tsyringe", "EventDispatcher interno"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "application/services/event-dispatcher.service.js",
          "domain/entities/mouse-action.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência na emissão de eventos",
          "Uso correto de injeção de dependência",
          "Manutenção da tipagem forte"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara de métodos públicos e contratos de eventos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos, sem redundância"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso do Adapter Pattern para desacoplar controle de mouse e emissão de eventos"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/controllers/automation.controller.ts": {
    "summary": "O arquivo define a classe AutomationController, responsável por expor uma API REST para automação de interações com o mouse e captura/análise de tela, utilizando o framework Fastify. Ele implementa endpoints para movimentação, clique, arrasto e scroll do mouse, além de fornecer a posição atual do cursor, inclusive via streaming SSE autenticado. Também oferece funcionalidades para encontrar padrões na tela e capturar imagens, integrando serviços especializados (MouseService e ScreenService). O controlador valida as requisições com JSON Schemas, aplica middleware de autenticação em rotas sensíveis e registra logs estruturados para monitoramento. A arquitetura segue princípios de injeção de dependência e separação clara entre camada de controle e serviços de domínio, garantindo modularidade e escalabilidade. O streaming de posição do mouse é implementado com controle de recursos e tratamento de erros para manter a estabilidade da conexão. Assim, o código habilita automação remota e monitoramento em tempo real de dispositivos de entrada e tela, com foco em robustez e segurança.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation API", "Controle remoto e automação de mouse e tela"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de dispositivos",
          "Automação UI",
          "Controle remoto",
          "Mouse and Screen Automation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estável"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação obrigatória para streaming",
          "Validação rigorosa de payloads",
          "Integridade das ações de mouse e tela"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Nenhum serviço externo explícito, integração interna com MouseService e ScreenService"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Controller Pattern", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de domínio",
          "application/dto - objetos de transferência de dados",
          "config - configurações e constantes",
          "controllers - definição de rotas e controle",
          "middleware - autenticação e interceptação",
          "schemas - validação JSON Schema"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes PascalCase (ex: AutomationController)",
          "Funções camelCase",
          "Arquivos kebab-case.js",
          "Constantes UPPER_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controller e serviços",
          "Dependência unidirecional via injeção",
          "Middleware isolado para autenticação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript/TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e privados"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com tipos explícitos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos controllers e serviços"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços MouseService e ScreenService"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via header 'x-api-key' para streaming"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Acesso restrito ao endpoint de streaming, demais endpoints públicos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Chaves de API devem ser protegidas e não expostas"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy: default-src 'none'",
          "X-Content-type-Options: nosniff",
          "Cache-Control: no-cache",
          "Connection: keep-alive"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Recomenda-se HTTPS para transporte seguro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Respostas síncronas em até 200ms",
          "Streaming com intervalo configurável (default 100ms)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência para comandos de mouse", "Uso eficiente de recursos no streaming"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhum cache explícito implementado"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Streaming pode exigir balanceamento e controle de conexões"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Respostas padrão com objeto { success: boolean, message?: string }"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com pino, níveis info, debug e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado, mas logs podem ser integrados a sistemas externos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros no streaming para encerrar conexão e liberar recursos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["MouseService", "ScreenService", "authenticationMiddleware"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.x", "TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "application/dto", "middleware", "schemas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Necessidade de autenticação apenas no streaming pode ser risco"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Streaming contínuo pode impactar uso de CPU e memória"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tipos, segurança, tratamento de erros e logging"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para métodos públicos e endpoints"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de inglês para termos técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de SSE para streaming, injeção de dependência com tsyringe"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["RESTful API com endpoints HTTP e streaming SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não explícito no código, presumivelmente via URL ou headers"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para respostas padrão, text/event-stream para streaming"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado explicitamente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker e Kubernetes recomendados"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API keys, MouseDefaults.streamInterval, environment config"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de conexões persistentes para SSE, recursos para streaming"]
      }
    ]
  },
  "src/interface/controllers/input-events.controller.ts": {
    "summary": "Este arquivo implementa um controller para streaming de eventos de input do usuário via Server-Sent Events (SSE), permitindo a transmissão em tempo real de cliques do mouse e teclas digitadas. Ele gerencia conexões persistentes com clientes, garantindo a entrega de eventos perdidos através de um buffer e mantendo a conexão ativa com heartbeats periódicos. Além disso, oferece endpoints para monitoramento das estatísticas do sistema de eventos, limpeza e poda do buffer, suportando a manutenção e controle do fluxo de eventos em um ambiente escalável e resiliente, integrando-se com serviços de dispatcher e buffer para garantir consistência e performance na transmissão dos dados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Events Streaming Service", "Streaming de eventos de input em tempo real"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Real-time event streaming", "User input tracking", "SSE", "Event buffering"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Entrega confiável de eventos",
          "Manutenção da conexão SSE ativa",
          "Replay de eventos perdidos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Observer", "Dependency Injection", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "controllers/ - lógica de controle e endpoints",
          "application/services/ - serviços de negócio e infraestrutura",
          "config/ - configurações e logger",
          "types/ - definições de tipos TypeScript"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "snake-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers dependem de serviços via DI",
          "Serviços isolados da camada HTTP",
          "Configurações centralizadas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint-config-prettier", "no-console restrito a logger"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com padrão 2 espaços"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/controllers", "tests/services"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para EventDispatcher e EventBuffer"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks automáticos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes", "Build", "Deploy automático"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código (possível autenticação externa)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não implementado explicitamente no controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Eventos de input do usuário, tratados como dados transitórios"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Cache-Control: no-cache", "Connection: keep-alive", "X-Accel-Buffering: no"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Recomendado uso de HTTPS para SSE"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência na entrega de eventos em tempo real"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e escalabilidade para múltiplos clientes SSE"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer de eventos com tamanho configurável e poda de eventos antigos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Gerenciamento eficiente de listeners e conexões SSE"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs estruturados via logger, respostas JSON padrão para endpoints"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Níveis info, debug e error via logger configurado"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado, mas logger sugere integração possível"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Tratamento de erros em envio SSE e limpeza de intervalos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["EventDispatcher", "EventBuffer", "Fastify", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../application/services/event-dispatcher.service.js",
          "../../application/services/event-buffer.service.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Gerenciamento manual de listeners pode ser melhorado com abstrações"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível vazamento de memória se desconexões não forem detectadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Buffer pode crescer sem poda adequada, impactando memória"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Nenhuma migração em andamento detectada"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros", "Gerenciamento de conexões SSE", "Uso correto de DI"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para métodos públicos e complexos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de SSE para streaming unidirecional", "Buffer para replay de eventos"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com endpoints SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Prefixo /api/v1/"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para endpoints REST", "text/event-stream para SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Configuração de maxRate no inputEventsConfig"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker (presumido)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configurações via inputEventsConfig"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Suporte a conexões persistentes SSE",
          "Proxy configurado para desabilitar buffering"
        ]
      }
    ]
  },
  "src/interface/controllers/keyboard.controller.ts": {
    "summary": "Este arquivo implementa um controller REST para operações de automação relacionadas a teclado e clipboard, permitindo a interação programática com entrada de texto e gerenciamento da área de transferência. Ele expõe endpoints para digitar texto com controle de timing, pressionar teclas individuais, executar combinações de teclas, além de copiar, colar e limpar o conteúdo do clipboard. O controller utiliza injeção de dependências para integrar serviços especializados, valida as requisições via schemas JSON e gerencia respostas padronizadas, incluindo tratamento robusto de erros e logging detalhado. Essa funcionalidade habilita automações de input e manipulação de clipboard em aplicações que demandam controle remoto ou testes automatizados, garantindo consistência e segurança nas operações de entrada e saída de dados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard and Clipboard Automation Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automation", "Input Control", "Clipboard Management", "Software Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que operações de teclado e clipboard sejam executadas com sucesso ou retornem erros claros",
          "Validar rigorosamente os dados de entrada para evitar comandos inválidos",
          "Manter integridade e segurança dos dados manipulados no clipboard"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "Controller-Service Pattern", "Clean Architecture"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio e serviços",
          "application/dto - objetos de transferência de dados e validações",
          "controllers - definição de endpoints REST",
          "schemas - definições JSON Schema para validação",
          "middleware - middlewares para validação e tratamento"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase (KeyboardController, KeyboardService)",
          "Métodos em camelCase (registerRoutes, clipboardCopy)",
          "Schemas com sufixo JsonSchema",
          "DTOs com sufixo Request"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers expõem rotas e delegam lógica para services",
          "Services encapsulam regras de negócio e interações com hardware ou sistema",
          "DTOs e schemas isolam validação e tipagem"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["eslint-config-standard", "no-explicit-any restrito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para métodos públicos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript (strict mode enabled)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em __tests__ próximos aos controllers e services"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para serviços externos e injeção de dependências"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não implementado neste controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente, deve ser tratado em middleware externo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard tratado com cuidado para evitar vazamento"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Configuração externa ao controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável diretamente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações devem responder em milissegundos, exceto typing com timing configurável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência e confiabilidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Escalabilidade horizontal via instâncias Fastify"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success:boolean, data:object, error:string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis info e error via Fastify logger"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retorno de erro padronizado e captura de exceções para evitar crashes"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "tsyringe", "keyboardService", "clipboardService"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["application/services", "application/dto", "controllers", "schemas", "middleware"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Uso de any para logger pode ser melhorado para tipagem forte"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum problema funcional aparente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Operação type pode ser lenta dependendo do timing configurado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Projeto em produção, sem migrações ativas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de schemas, tratamento de erros, logging e injeção de dependências"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc para novos endpoints e serviços"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e informativos, sem excesso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Fastify para alta performance e tsyringe para DI"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não implementado explicitamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padronizado com success, data e error"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado neste controller"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker containerizado com orquestração externa"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Configuração externa via environment.ts, sem valores sensíveis no código"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de acesso a APIs de sistema para manipulação de teclado e clipboard"]
      }
    ]
  },
  "src/interface/controllers/recorder.controller.ts": {
    "summary": "Este arquivo implementa um controller para streaming de eventos gravados via Server-Sent Events (SSE), focado em transmitir eventos de mouse e teclado capturados durante sessões de usuário. Ele gerencia conexões ativas, garantindo a entrega contínua e em tempo real dos eventos, além de suportar replay de eventos perdidos e envio periódico de heartbeats para manter a conexão viva. O controller também expõe uma rota para consulta de estatísticas do sistema, integrando-se com serviços de buffer e listener para orquestrar o fluxo de dados e garantir a escalabilidade e robustez do streaming em um ambiente Fastify com injeção de dependências via tsyringe.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Recorder Streaming Service", "Streaming de eventos de interação do usuário"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["User Interaction Analytics", "Session Replay", "SSE Streaming"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Entrega em tempo real dos eventos",
          "Manutenção das conexões SSE ativas",
          "Remoção correta de listeners para evitar vazamentos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "tsyringe 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Observer", "Dependency Injection", "SSE"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio e serviços",
          "config - configurações e logger",
          "types - definições de tipos",
          "controllers - interface HTTP e orquestração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase (RecorderController)",
          "Métodos em camelCase (streamEvents)",
          "Variáveis em camelCase",
          "Arquivos em kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers dependem de serviços via injeção",
          "Serviços isolados da camada HTTP",
          "Configurações centralizadas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, sem regras específicas detalhadas no código"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de métodos e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com tipagem explícita em parâmetros e retornos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não implementado no controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não implementado no controller"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Eventos de interação do usuário, potencialmente sensíveis"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Cache-Control: no-cache", "Connection: keep-alive", "X-Accel-Buffering: no"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado no código"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para streaming SSE"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e escalabilidade para múltiplas conexões"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer de eventos via EventBuffer (implementação não detalhada)"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Gerenciamento de múltiplas conexões via Map e listeners"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Logs de erros via logger, sem resposta HTTP específica para erros SSE"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logger customizado com níveis info, debug e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Heartbeat para detectar conexões fechadas e limpar recursos"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["RecorderListenerService", "EventBuffer", "Fastify", "tsyringe"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../application/services", "../../config"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Replay de eventos não implementado", "Falta de autenticação e autorização"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível vazamento de memória se listeners não forem removidos corretamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Escalabilidade limitada para grande número de conexões SSE"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Gerenciamento correto de listeners",
          "Tratamento de erros em streaming SSE",
          "Clareza na tipagem e documentação"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Uso consistente de JSDoc para métodos públicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros em português explicando lógica e decisões"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de tsyringe para DI", "Adoção de SSE para streaming unidirecional"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com streaming SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON encapsulado em eventos SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker (provável, não explícito)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Variáveis para configuração do recorderConfig"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de suporte a conexões SSE persistentes e balanceamento de carga"]
      }
    ]
  },
  "src/interface/middleware/auth.middleware.ts": {
    "summary": "Este arquivo implementa um middleware de autenticação para uma aplicação backend utilizando Fastify, cuja função principal é validar a presença e a validade de uma API key enviada via header HTTP 'x-api-key'. O middleware intercepta requisições, compara a chave recebida com a chave configurada no ambiente e, caso a validação falhe, responde com status 401 Unauthorized, bloqueando o acesso ao recurso protegido. Essa abordagem garante controle de acesso simples e eficaz, integrando-se ao fluxo de requisições do servidor para proteger endpoints sensíveis contra acessos não autorizados, habilitando segurança básica para APIs internas ou públicas que dependem de autenticação por chave.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["API Authentication Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API Security", "Authentication", "Access Control"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "API key must be validated for every protected request",
          "Unauthorized requests must be rejected with 401 status"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Middleware Pattern", "Environment-based Configuration"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações de ambiente",
          "middlewares/ - middlewares para Fastify",
          "routes/ - definição de rotas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para tipos e classes",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração, middlewares e rotas",
          "Dependência unidirecional de config para middlewares"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo no-unused-vars, strict typing"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript settings (strictNullChecks, noImplicitAny)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/middlewares/ - testes unitários para middlewares"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura para middlewares"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock FastifyRequest e FastifyReply para simular requisições e respostas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy automático para staging e produção"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["API Key via HTTP Header"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Requisição deve conter API key válida para acesso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API key armazenada em variáveis de ambiente, não exposta no código"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Transporte via HTTPS obrigatório para proteger API key"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Autenticação deve ocorrer em menos de 10ms por requisição"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência para autenticação"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Middleware leve para suportar alta concorrência"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success: false e error: string"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Rejeição imediata da requisição não autorizada"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "environment configuration module"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.0.0", "TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["../../config/environment.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Falta de logging detalhado para falhas de autenticação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Não suporta múltiplas chaves ou roles"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Segurança da autenticação",
          "Cobertura de testes",
          "Clareza e simplicidade do código"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar contratos de middleware e erros retornados"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Escolha de API key simples para autenticação inicial"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["API_KEY"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/middleware/error-handler.middleware.ts": {
    "summary": "Este arquivo implementa um middleware de tratamento de erros para aplicações construídas com Fastify, focado em padronizar respostas e garantir um fluxo consistente de tratamento de exceções. Ele define classes customizadas para erros de domínio, como NotFoundError, UnauthorizedError e LimitExceededError, facilitando a categorização e o controle dos erros específicos do negócio. A função principal, errorHandler, intercepta erros lançados durante o processamento das requisições, realiza logging estruturado e responde ao cliente com mensagens e códigos HTTP apropriados, incluindo tratamento específico para erros de validação do Zod e do Fastify, erros de domínio e erros genéricos, assegurando robustez e clareza na comunicação de falhas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Fastify Error Handling Middleware", "Centralized error management for API"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Error handling", "Validation", "Domain errors"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production", "Stable error handling"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistent error response format",
          "Proper HTTP status codes",
          "No leakage of sensitive error details in production"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Middleware Pattern", "Custom Error Classes", "Centralized Error Handling"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/errors - classes de erro customizadas",
          "/middlewares - middlewares como errorHandler"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para funções e variáveis",
          "Uppercase para constantes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre domínio (erros) e infraestrutura (middleware)"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, incluindo no-unused-vars, consistent-return"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para classes e funções"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["/tests/unit/errors", "/tests/integration/middlewares"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90% coverage"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then", "AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para FastifyRequest e FastifyReply"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT (implícito no contexto do app)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Erros 401 e 403 para controle de acesso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Não expor stack trace em produção"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Tratamento rápido para erros, evitando bloqueios"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na resposta de erro"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Middleware leve para suportar alta concorrência"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error, code e detalhes opcionais"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logging estruturado com nível error, incluindo contexto da requisição"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Resposta padronizada para permitir recuperação no cliente"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.x", "Zod >=3.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Manter consistência na criação de novas classes de erro"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Possível duplicidade de tratamento para erros com statusCode"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de casos de erro",
          "Clareza nas mensagens de erro",
          "Segurança no tratamento de dados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar todas as classes de erro e middleware"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos, uso de JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de DomainError como base para erros customizados"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padronizado com success, error, code e detalhes"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["development", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/middleware/validation.middleware.ts": {
    "summary": "Este arquivo implementa uma função middleware para validação de requisições HTTP em um servidor Fastify utilizando schemas do Zod. Seu propósito principal é garantir que o corpo da requisição esteja conforme o schema definido, promovendo a integridade dos dados recebidos antes do processamento posterior. Em caso de falha na validação, a função responde com um erro 400 detalhado, evitando que dados inválidos avancem na pipeline, o que contribui para a robustez e segurança da aplicação. A função é assíncrona e integrada ao ciclo de vida das requisições Fastify, facilitando a reutilização e padronização da validação em múltiplos endpoints. Essa abordagem melhora a experiência do desenvolvedor e a confiabilidade do sistema ao centralizar a lógica de validação e tratamento de erros.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fastify API Validation Middleware",
          "Middleware para validação de requisições HTTP"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Backend API", "Validação de dados", "Fastify", "Zod"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos dados de entrada",
          "Resposta imediata com erro 400 em caso de dados inválidos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x", "Zod 3.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Middleware Pattern", "Modularização"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/middleware - Contém middlewares reutilizáveis",
          "src/routes - Definição dos endpoints",
          "src/schemas - Definição dos schemas Zod"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e classes",
          "snake_case evitado"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Middleware isolado para validação", "Schemas desacoplados da lógica de negócio"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript", "Proibição de any explícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções públicas"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/middleware - testes unitários para middlewares"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert (AAA)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para FastifyRequest e FastifyReply"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint e Deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável diretamente neste middleware"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável diretamente neste middleware"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Validação para evitar dados maliciosos ou inválidos"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não gerenciado neste middleware"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Resposta imediata para requisições inválidas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação rápida e eficiente"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Middleware leve para suportar alta concorrência"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON com campos success, error e message"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não implementado diretamente neste middleware"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Resposta imediata com erro 400 para evitar falhas posteriores"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "zod"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.x", "Zod >=3.x"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Middleware reutilizável para validação"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Tratamento de erros pode ser mais granular"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Mensagens de erro genéricas podem dificultar debugging"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Validação síncrona pode impactar em schemas muito complexos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Estável em produção"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Clareza no tratamento de erros", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara para middlewares"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de Zod para validação centralizada"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL ou headers (externo a este middleware)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não implementado neste middleware"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "PORT"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Baixa latência para validação síncrona"]
      }
    ]
  },
  "src/interface/schemas/automation.schemas.ts": {
    "summary": "Este arquivo define múltiplos JSON Schemas para validação de objetos relacionados a interações de mouse e operações de captura e busca na tela, focando em garantir a integridade e consistência dos dados usados em automações de interface gráfica. As definições abrangem movimentos do mouse, cliques simples e duplos, arrastes, rolagem, além de operações de reconhecimento visual e captura de regiões específicas da tela. Cada schema especifica tipos, restrições de valores, propriedades obrigatórias e padrões para evitar propriedades adicionais, assegurando que as ações sejam configuradas com parâmetros válidos e controlados. Essa estrutura permite a integração segura e previsível com sistemas de automação, facilitando a orquestração de interações complexas com a interface do usuário, mantendo a robustez e a previsibilidade do comportamento do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Mouse Interaction Automation", "Screen Capture and Recognition"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação de Interface", "UI Automation", "Computer Vision"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento Inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos parâmetros de entrada",
          "Proibição de propriedades adicionais não definidas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "Declarative Data Contracts"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["schemas/ - arquivos de definição de JSON Schema para validação de dados"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para propriedades", "PascalCase para constantes exportadas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre schemas de mouse e screen",
          "Sem propriedades adicionais para evitar acoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação inline"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/schemas/ - testes unitários para validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 90% para schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de dados de entrada para validação de schemas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes unitários", "Build"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação rápida e eficiente de dados"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros de validação JSON Schema padrão"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["ajv (JSON Schema validator)"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de tipos e restrições", "Consistência de nomenclatura"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara dos schemas e propriedades"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso estrito de JSON Schema para validação de entrada"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/schemas/clipboard.schemas.ts": {
    "summary": "Este arquivo define JSON Schemas compatíveis com o Draft 7 para validação de requisições relacionadas ao gerenciamento de clipboard em uma aplicação Fastify. Ele especifica a estrutura esperada para três endpoints distintos: copiar conteúdo para o clipboard, colar conteúdo e limpar o clipboard. O schema para copiar exige uma string não vazia com limite implícito de tamanho, garantindo que o conteúdo enviado seja válido e seguro, enquanto os schemas para colar e limpar são vazios, indicando que não aceitam parâmetros adicionais. Essa abordagem assegura a integridade dos dados recebidos, previne propriedades inesperadas e facilita a integração com o sistema de rotas do Fastify, promovendo robustez e clareza na manipulação do estado do clipboard.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Clipboard Management API",
          "API para gerenciamento de operações de clipboard em aplicações web"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Development", "Clipboard Operations", "Fastify Framework"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Produção inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa do conteúdo enviado para clipboard",
          "Proibição de propriedades adicionais nas requisições"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Schema Validation", "API Gateway Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["schemas/ - Contém definições de JSON Schema para validação de requisições"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e propriedades",
          "PascalCase para tipos e interfaces",
          "suffix JsonSchema para schemas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre schemas e lógica de negócio",
          "Schemas isolados para cada endpoint"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/schemas/ - testes unitários para validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80% cobertura"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de requisições HTTP"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, Test, Lint, Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não aplicável (schemas de validação)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não aplicável"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Conteúdo do clipboard tratado como string, limite de tamanho para evitar abuso"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência esperada para operações de clipboard"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação leve e rápida"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Erros de validação JSON Schema padrão do Fastify"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs de requisições e erros via Fastify logger"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Rejeição imediata de requisições inválidas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["json-schema (JSONSchema7)", "Fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["JSON Schema Draft 7"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado no escopo do schema"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de schemas, cobertura de testes, clareza de documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todos os schemas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de JSON Schema Draft 7 para compatibilidade e simplicidade"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Sem versionamento explícito no schema"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/schemas/keyboard.schemas.ts": {
    "summary": "Este arquivo define JSON Schemas compatíveis com Draft 7 para validação de requisições relacionadas a operações de teclado em um servidor Fastify. Ele especifica três schemas distintos para endpoints que permitem digitar texto, pressionar uma tecla única e enviar combinações de teclas, garantindo que os dados recebidos estejam estruturados e validados conforme regras claras, como tipos, tamanhos e valores permitidos. A funcionalidade habilita controle programático e seguro de interações de teclado, suportando modos de digitação variados e combinações complexas, facilitando a integração com sistemas que automatizam ou simulam entrada de teclado de forma robusta e previsível.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Keyboard Input Validation Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automation", "Input Simulation", "Keyboard Events"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Production"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Input data must conform to JSON Schema Draft 7",
          "Text length between 1 and 10000",
          "Key combinations limited to max 5 keys"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Schema Validation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["schemas/ - Contém definições JSON Schema para validação de endpoints"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para propriedades e variáveis", "PascalCase para exports de schemas"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Schemas isolados por funcionalidade para fácil manutenção e extensão"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para comentários de funções e schemas"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/schemas/ - testes unitários para validação de schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90% cobertura para schemas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de requisições HTTP para validação de schemas"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Test", "Build", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Validação rápida e leve para não impactar throughput"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Padrão JSON Schema Validation Error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["json-schema", "Fastify"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação correta dos schemas", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de JSON Schema Draft 7 para validação"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/routes/automation.routes.ts": {
    "summary": "O arquivo define um conjunto de rotas assíncronas para um servidor Fastify, focado em automação e captura de eventos de input. Ele integra múltiplos controladores especializados, como AutomationController e KeyboardController, para registrar rotas relacionadas a automação, teclado, clipboard, streaming de eventos e gravação. A estrutura modular permite a extensão e manutenção facilitada, promovendo a organização clara das responsabilidades e a integração eficiente com outros módulos do sistema, habilitando funcionalidades de automação e monitoramento de eventos de input para aplicações que demandam controle e captura de interações do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Automation Server", "Fastify-based input event automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automação", "Input event streaming", "Keyboard and clipboard control"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Estabilização"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade e segurança das rotas de input",
          "Disponibilidade das rotas de automação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Plugin Pattern", "Controller Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "interface/controllers - Controllers para lógica de negócio",
          "routes - Definição modular de rotas",
          "plugins - Plugins Fastify para modularização"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "kebab-case para arquivos de rotas",
          "camelCase para funções e variáveis"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers isolam lógica de negócio",
          "Rotas apenas registram endpoints",
          "Plugins encapsulam funcionalidades específicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Tests localizados em __tests__ próximos aos módulos"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para controladores e rotas", "Fixtures para dados de input"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso baseado em roles para rotas sensíveis"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Dados de input do usuário tratados com validação e sanitização"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["CSP", "X-Content-Type-Options", "Strict-Transport-Security"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["TLS para comunicação", "Criptografia de tokens JWT"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["< 200ms para rotas principais"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência", "Uso eficiente de memória"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache em memória para dados estáticos"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplas instâncias via cluster"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["JSON padrão com código, mensagem e detalhes opcionais"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis info, warn, error"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Prometheus", "Grafana"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retries automáticos para falhas transitórias"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["fastify", "typescript", "jest"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify >=4.0.0 <5.0.0", "TypeScript >=5.0.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["interface/controllers", "routes"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Documentação incompleta para alguns controllers"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Latência em rotas de streaming sob alta carga"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Registro assíncrono múltiplo pode impactar cold start"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração para Fastify 4 concluída"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Segurança das rotas", "Clareza na separação de responsabilidades"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para todos os controllers e rotas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e claros, sem excesso"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção do padrão plugin do Fastify para modularização"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Prefixo de versão via rotas (ex: /v1) planejado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["application/json"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Rate limiting configurável por rota"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev - http://dev.automation.local",
          "staging - http://staging.automation.local",
          "prod - https://automation.company.com"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["PORT", "JWT_SECRET", "NODE_ENV"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitação de memória para pods Kubernetes", "Requisitos de alta disponibilidade"]
      }
    ]
  },
  "src/routes/input-events.routes.ts": {
    "summary": "Este arquivo implementa um conjunto de rotas RESTful para gerenciamento e streaming de eventos de input em tempo real utilizando Fastify. Ele oferece endpoints para streaming via Server-Sent Events (SSE), consulta de estatísticas do sistema de eventos, limpeza e poda do buffer de eventos baseado em idade máxima. O código integra um controller especializado para manipulação da lógica de eventos, garantindo validação rigorosa dos dados de entrada e respostas padronizadas. A arquitetura modular e o uso de schemas JSON para validação e documentação facilitam a manutenção, escalabilidade e integração com outros componentes do sistema, habilitando monitoramento e controle eficiente do fluxo de eventos de input do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Events Streaming Service"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Real-time event streaming", "User input tracking", "SSE"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir entrega sequencial e confiável dos eventos via SSE",
          "Manter integridade do buffer de eventos",
          "Respeitar limites de idade máxima para eventos armazenados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Dependency Injection container (custom or third-party)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Dependency Injection", "MVC (Controller)"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config: configurações e injeção de dependências",
          "interface/controllers: lógica de controle e manipulação de eventos",
          "routes: definição das rotas HTTP"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e controllers",
          "kebab-case para rotas",
          "PascalCase para schemas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controller e rotas",
          "Injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide adaptado para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript, sem uso de any explícito"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de funções e schemas"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript com checagem completa"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes localizados em pasta __tests__ paralela aos controllers e rotas"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mock de controllers e dependências via Jest mocks"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória e testes aprovados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build, lint, test e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não especificado no código, presumivelmente JWT ou session-based em camada superior"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não detalhado, presumivelmente controle de acesso em middleware externo"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Nenhum dado sensível manipulado diretamente"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não especificado, recomendação para uso de headers CORS e CSP"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não aplicável diretamente neste módulo"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para streaming SSE e respostas rápidas para estatísticas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e eficiência no streaming e manipulação do buffer"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Buffer interno para eventos com controle de tamanho e idade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplos listeners SSE e controle de taxa de eventos"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Formato padrão com campos success, message, data e error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não detalhado, presumivelmente integrado ao controller"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Reenvio de eventos via last-event-id para recuperação de perdas"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "Dependency Injection container", "InputEventsController"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x compatível com TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../config/dependency-injection.js",
          "../interface/controllers/input-events.controller.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Nenhum identificado explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Nenhum conhecido explicitamente"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Potencial gargalo no buffer e no número de listeners SSE simultâneos"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Validação de schemas, tratamento de erros, performance do streaming"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação clara via JSDoc e schemas JSON"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de SSE para streaming, DI para desacoplamento"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com endpoints SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não implementado explicitamente"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON para respostas padrão, text/event-stream para SSE"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Controle interno de maxRate para eventos"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker e Kubernetes presumidos"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificados neste módulo"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de suporte a conexões SSE persistentes"]
      }
    ]
  },
  "src/routes/recorder.routes.ts": {
    "summary": "Este arquivo implementa rotas HTTP para um sistema de gravação de eventos de mouse e teclado, utilizando Fastify como framework web. Ele expõe endpoints para iniciar um streaming de eventos via Server-Sent Events (SSE) e para obter estatísticas do sistema de gravação, incluindo conexões ativas e configurações atuais. O código integra um controlador especializado, seguindo princípios de injeção de dependência, e define schemas de validação para garantir a conformidade das respostas, promovendo robustez e clareza na comunicação entre cliente e servidor. A funcionalidade habilita monitoramento em tempo real e análise do estado do recorder, suportando operações de streaming contínuo e consulta de métricas, essenciais para aplicações que demandam captura e análise de interações do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Recorder System", "Sistema de captura e streaming de eventos de interação"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["User Interaction Monitoring", "Event Streaming", "Mouse and Keyboard Events"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade e continuidade do streaming SSE",
          "Manter precisão das estatísticas retornadas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Fastify 4.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["MVC", "Dependency Injection"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config: configurações e injeção de dependência",
          "interface/controllers: lógica de controle",
          "routes: definição de rotas HTTP"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para rotas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controller e rotas",
          "Uso de container para resolver dependências"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit para testes unitários", "tests/integration para testes de integração"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Cobertura mínima de 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para controller e container"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Git Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks automáticos"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Build", "Test", "Lint", "Deploy"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["Não especificado no código"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Não especificado no código"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Eventos de interação do usuário (mouse, teclado)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Não especificado no código"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Não especificado no código"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Baixa latência para streaming SSE"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade e escalabilidade do streaming"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Não aplicável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Suporte a múltiplas conexões SSE simultâneas"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Não detalhado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Não detalhado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não detalhado no código"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Não detalhado no código"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Fastify", "RecorderController", "Dependency Injection Container"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Fastify 4.x", "TypeScript 5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../config/dependency-injection.js",
          "../interface/controllers/recorder.controller.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Falta de autenticação e autorização explícita nos endpoints"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Potencial overhead em conexões SSE não gerenciadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Escalabilidade do streaming SSE sob alta carga"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de schemas",
          "Uso correto de injeção de dependência",
          "Manutenção da separação de responsabilidades"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentação JSDoc para rotas e controllers"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos em português"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de Fastify para alta performance", "Uso de SSE para streaming de eventos"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST com endpoints HTTP GET"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Não especificado"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["text/event-stream para streaming", "application/json para estatísticas"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "prod"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "Kubernetes"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Não especificado no código"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessidade de suportar conexões SSE persistentes"]
      }
    ]
  },
  "src/test-endpoint.ts": {
    "summary": "Este arquivo de código implementa uma suíte simples de testes automatizados para endpoints de uma API RESTful que controla ações do mouse, como movimentação, clique e consulta de posição. O comportamento central consiste em enviar requisições HTTP POST e GET para endpoints locais, manipulando dados JSON para simular interações de mouse com parâmetros configuráveis, como coordenadas, suavização e duração. O código demonstra um fluxo sequencial de testes com delays entre as chamadas para garantir a execução ordenada e captura de respostas, facilitando a validação funcional da API NutJS para automação de controle do mouse em ambiente local.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["NutJS Mouse Control API Testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["automation", "UI testing", "mouse control", "API testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "functional testing"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "API endpoints must respond correctly to mouse control commands",
          "No unauthorized access to mouse control"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript ES2020+"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["None (vanilla JS)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["None"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Local REST API at http://localhost:3000/api/v1/mouse"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["None specified"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular async functions", "Sequential test runner"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Not specified in code"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase for functions and variables"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Single module script for testing"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Not explicitly defined"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Consistent indentation and spacing"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["No inline documentation present"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["None (JavaScript without TypeScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Custom async test functions, no framework"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Sequential invocation of test functions with delays"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Not specified"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Arrange-Act-Assert implicit in test functions"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["No mocking, real API calls"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node <filename>.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["node <filename>.js (executes runTests)"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Not applicable"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Not specified"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["None visible in code"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Not enforced in client code"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["None handled"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-type: application/json"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["Not specified"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Implicit delays of 1000-1500ms between calls"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Reliability over speed"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["None"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Not applicable"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Console error logging"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Console logs for success and errors"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["None"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Try-catch in runTests to prevent crash"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Local API server at port 3000"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["None"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Not specified"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["None"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["No explicit handling of API errors or retries"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Potential failure if API server is down"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Sequential delays increase total test time"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Not applicable"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Error handling", "Async flow correctness"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Add JSDoc comments for test functions"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Concise console logging"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Use of async/await for clarity"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["v1 in URL path"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["application/json"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Not specified"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Local development at http://localhost:3000"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Not specified"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["None used"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Requires local API server running"]
      }
    ]
  },
  "src/types/extended-input-event.types.ts": {
    "summary": "Este arquivo define tipos TypeScript para eventos de input estendidos, focando em capturar dados detalhados de interações do usuário via mouse e teclado. Ele estrutura eventos genéricos com propriedades comuns como id, tipo, timestamp e posição do cursor, e especializa esses eventos para mouse e teclado com dados específicos, como ações de clique, movimento, pressionamento e liberação de teclas. O código habilita um sistema de gravação e análise de eventos de input com precisão, facilitando a integração com sistemas que monitoram ou reproduzem interações do usuário, mantendo a tipagem rigorosa para garantir consistência e segurança na manipulação dos dados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Event Typing System", "Sistema de tipagem para eventos de input"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["User Interaction Recording", "Input Event Processing", "UI/UX Analytics"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Desenvolvimento inicial"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade e precisão dos dados de input",
          "Manter tipagem rigorosa para evitar erros em runtime"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Discriminated Union", "Interface Segregation"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["src/types - definições de tipos", "src/events - lógica de eventos de input"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces com prefixo 'I' opcional",
          "CamelCase para tipos e interfaces",
          "snake_case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos e lógica de eventos",
          "Dependência unidirecional para tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de uso de 'any' sem justificativa"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para documentação de interfaces e tipos"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/unit/types", "tests/integration/events"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 90% cobertura para tipos e interfaces"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para eventos de input simulados"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisão obrigatória", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes unitários", "Build"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Baixa latência na captura de eventos", "Baixo overhead de processamento"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["./input-event.types.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["input-event.types.js"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Uso do tipo 'any' em GenericInputEvent.data pode ser melhorado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Clareza na documentação",
          "Ausência de any não justificado"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as interfaces e tipos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Adoção de discriminated unions para eventos de input"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/types/input-event.types.ts": {
    "summary": "Este arquivo define tipos TypeScript e interfaces para modelar eventos de input do usuário, especificamente eventos de mouse e teclado, transmitidos via Server-Sent Events (SSE). Ele estrutura eventos com propriedades detalhadas como identificador único, timestamp, origem do evento, e coordenadas do cursor, permitindo a captura precisa de interações do usuário. Além disso, especifica contratos para publicadores e ouvintes de eventos, facilitando a emissão e o recebimento desses eventos em sistemas reativos. O código promove uma arquitetura clara para integração de eventos de input em aplicações web, garantindo interoperabilidade e rastreabilidade dos eventos em tempo real, com foco em precisão e extensibilidade para múltiplas fontes de input.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Input Event Tracking System"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Web Interaction Analytics", "Real-time User Input Capture", "SSE"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir unicidade do id do evento",
          "Manter ordem temporal dos eventos",
          "Precisão na captura das coordenadas do cursor"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Server-Sent Events (SSE)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Observer Pattern", "Discriminated Union"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/events - definição de tipos e interfaces de eventos",
          "src/publishers - implementações de IEventPublisher",
          "src/listeners - implementações de IEventListener"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para tipos e interfaces",
          "camelCase para funções e variáveis",
          "constantes em UPPER_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre definição de tipos, publicação e escuta de eventos",
          "Interfaces para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript ESLint Recommended"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "@typescript-eslint/no-explicit-any",
          "@typescript-eslint/strict-boolean-expressions"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes de tipos e interfaces",
          "tests/integration para fluxos de eventos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [">= 80%"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Mocks para IEventPublisher e IEventListener"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review obrigatório", "Checks de lint e testes"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Lint", "Testes unitários", "Build", "Deploy automático em staging"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["SSE API", "TypeScript typings"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência de tipos", "Cobertura de testes", "Clareza na documentação"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["JSDoc para todas as interfaces e funções públicas"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários objetivos e técnicos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de union types para eventos", "Separação clara entre publisher e listener"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["Server-Sent Events (SSE)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com payload InputEvent"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/types/recorder-event.types.ts": {
    "summary": "Este arquivo define tipos e interfaces TypeScript para modelar eventos de gravação de interações do usuário, especificamente eventos de mouse e teclado, com timestamps precisos para rastreamento temporal. Ele suporta captura detalhada de ações do mouse, incluindo posição, botão e screenshots em formato Base64, além de eventos de teclado com identificação da tecla e ação. O código também especifica interfaces para publicação e escuta desses eventos, permitindo um sistema modular e extensível para gravação e reprodução de interações. A configuração do recorder permite ajustes finos como inclusão de screenshots, intervalo de captura de movimentos e tamanho máximo de imagens, habilitando um controle eficiente e customizável do processo de gravação. Assim, o arquivo serve como base para sistemas de monitoramento, replay ou análise comportamental em aplicações web ou desktop, garantindo precisão e flexibilidade na captura dos eventos do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Recorder de eventos de interação do usuário"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Monitoramento de UX", "Análise comportamental", "Replay de sessões"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão temporal dos eventos",
          "Integridade dos dados de eventos",
          "Limitação do tamanho de screenshots"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Observer", "Type-safe Event Handling"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/events - definição de tipos e interfaces",
          "src/recorder - lógica de gravação e publicação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com I",
          "Tipos com PascalCase",
          "Eventos com sufixo RecordedEvent"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre tipos de eventos e lógica de publicação/escuta"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["TypeScript Standard Style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras para TypeScript"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Screenshots em Base64 devem ser tratados com cuidado para evitar exposição"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar impacto da captura de screenshots",
          "Controle do intervalo de eventos de movimento"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Captura de screenshots pode impactar performance"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "test-prompts.json": {
    "summary": "Este conjunto de instruções detalha uma abordagem sistemática para a criação rápida e eficiente de testes automatizados utilizando Jest em arquivos TypeScript de um projeto web focado em agendamento digital. O objetivo principal é maximizar a cobertura de código (mínimo de 80%) priorizando a velocidade de execução dos testes, com ênfase em testes minimalistas que garantam a execução de todas as funções, classes e componentes exportados. O processo inclui a leitura prévia de um arquivo know-how.txt para aproveitar padrões e soluções já validadas, a aplicação de estratégias específicas para diferentes tipos de módulos (componentes React, funções utilitárias, classes), e a documentação contínua de aprendizados para evolução da base de conhecimento. Além disso, são destacados padrões de nomenclatura, estrutura de testes, mocks comuns e práticas para lidar com dependências externas, hooks, roteamento e contextos, assegurando qualidade, manutenibilidade e integração harmoniosa com o restante do sistema. A metodologia contempla também a verificação iterativa de falhas, aplicação de mocks mínimos e a garantia de que todos os testes passem sem warnings, promovendo um ciclo de desenvolvimento ágil e confiável.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "web-agendamento-digital",
          "Sistema de agendamento digital para gestão automatizada"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Agendamento digital", "Automação", "Testes automatizados", "TypeScript", "Jest"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Produção", "Manutenção com foco em qualidade e cobertura"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Cobertura mínima de testes 80%",
          "Padrões de nomenclatura *.test.tsx",
          "Documentação contínua no know-how.txt"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "Node.js 18"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29", "ts-jest", "React 18.2", "Testing Library"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "next/router (mocked)",
          "contexts (mocked via jest.spyOn)",
          "localStorage (mock global)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Clean Architecture", "Modularização por domínio e serviços"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/dto - Data Transfer Objects",
          "src/application/services - Serviços de negócio",
          "src/config - Configurações e injeção de dependências",
          "src/domain/entities - Entidades do domínio"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos de teste com sufixo .test.tsx",
          "Classes e funções em PascalCase e camelCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Separação clara entre DTOs, serviços e entidades", "Dependências unidirecionais"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb TypeScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras específicas para TypeScript e React"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão do projeto"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc para funções e classes"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript", "tsconfig com strict enabled"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29", "ts-jest"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "describe() envolvendo todos os testes",
          "Arquivos de teste localizados no mesmo diretório do código alvo"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Mínimo 80% de coverage em statements, branches, functions e lines"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Testes minimalistas focados em execução de código",
          "Uso de try/catch para múltiplos parâmetros",
          "Testes de unmount para componentes React"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks mínimos necessários",
          "jest.mock para dependências externas",
          "jest.spyOn para contextos",
          "Mock global para localStorage"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Revisões obrigatórias", "Checks de testes e lint"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Execução de testes com coverage", "Linting", "Build e deploy automatizados"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test -- --coverage"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["JWT"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["Controle de acesso baseado em roles", "Validação em backend e frontend"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Tokens JWT",
          "Dados pessoais de usuários",
          "Tratamento via criptografia e mascaramento"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["CSP", "X-Frame-Options", "Strict-Transport-Security"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["TLS para comunicação", "Criptografia AES para dados sensíveis"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["< 200ms para operações críticas"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Velocidade de execução dos testes", "Baixa latência em serviços"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Cache local para dados estáticos", "TTL configurável"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Arquitetura modular para escalabilidade horizontal"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Formato padronizado JSON com código, mensagem e detalhes"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs estruturados com níveis (info, warn, error)"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Sentry", "Prometheus"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Retry automático em falhas transitórias", "Fallbacks simples"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["Jest", "ts-jest", "React", "next/router"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["TypeScript >=5.0", "Jest >=29"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["src/application", "src/config", "src/domain"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Necessidade de maior detalhamento em testes unitários",
          "Documentação parcial em know-how.txt"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Cobertura inicial baixa em alguns módulos",
          "Mocks insuficientes causam falhas intermitentes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Testes lentos em módulos com dependências externas não mockadas"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Migração para TypeScript 5.0 concluída", "Atualização do Jest em andamento"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Conformidade com padrões de nomenclatura",
          "Uso correto de mocks"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Atualização do know-how.txt após correção de testes",
          "Comentários claros em testes complexos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Clara e objetiva em PRs e comentários", "Foco em aprendizado coletivo"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso exclusivo de *.test.tsx para testes",
          "Estratégia de cobertura rápida priorizando execução"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versionamento via URL e headers"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON padrão com envelope de dados"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Limites configuráveis por endpoint"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "staging", "production"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Docker", "CI/CD via GitHub Actions"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["NODE_ENV", "API_URL", "JWT_SECRET"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Limitações de memória em ambientes serverless"]
      }
    ]
  },
  "test-screen-capture.js": {
    "summary": "Este script Node.js automatiza o processo de captura de tela via uma API local, decodificação da imagem em base64, salvamento em disco como arquivo PNG e validação da integridade do arquivo gerado. Seu comportamento central consiste em realizar uma requisição POST para um endpoint específico, extrair e converter a imagem base64 para um buffer binário, persistir o arquivo no sistema de arquivos e verificar se o arquivo resultante possui um header PNG válido e tamanho adequado. O script inclui tratamento robusto de erros para garantir que falhas na captura, decodificação ou validação sejam reportadas e interrompam a execução, assegurando a confiabilidade do processo. Essa automação é útil para testes automatizados de captura de tela, garantindo que a API e o armazenamento estejam funcionando corretamente, integrando-se a pipelines de CI/CD ou fluxos de validação de qualidade de imagem.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Screen Capture Validation Script"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Automated Testing", "Image Processing", "API Integration"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["MVP", "Testing Automation"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "API must return valid base64 image data",
          "Saved file must be a valid PNG",
          "Errors must abort process"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["JavaScript (Node.js 18+)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["None (Vanilla Node.js)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": ["None"]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["Local HTTP API at http://localhost:3000/api/v1/screen/capture"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Procedural Script with Modular Functions"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": ["Single script file, no explicit folder structure"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase for functions and variables", "UpperCamelCase not used"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": ["Single module script, no external module boundaries"]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Informal, consistent with common JS style"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Not specified"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc style comments"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["None (JavaScript without TypeScript)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["None (script intended for manual or CI execution)"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["Not applicable"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Not applicable"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Not specified"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Intended for integration in CI/CD pipelines for automated validation"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["node script.js"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["node script.js"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["Not applicable"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["Not specified"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["Not specified"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": ["None (API call unauthenticated)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": ["None explicit"]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["Base64 image data handled transiently, no storage de criptografia"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": ["Content-Type: application/json in request"]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": ["None explicit"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": ["Não especificado, mas espera-se resposta rápida da API local"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": ["Confiabilidade e integridade sobre otimização de velocidade"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": ["Nenhuma"]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": ["Script único, não escalável por design"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": ["Mensagens de erro detalhadas via console.error"]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Logs sequenciais no console com emojis para status"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": ["Não especificado"]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": ["Abortar execução em erro crítico"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["API local de captura de tela", "Node.js fs e path"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["Node.js versão >=18 para suporte nativo a fetch"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": ["Nenhum"]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": ["Ausência de testes automatizados formais"]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Dependência de API local disponível e responsiva"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": ["Nenhum identificado"]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": ["Não aplicável"]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Tratamento de erros, clareza de logs, modularidade"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Comentários JSDoc para funções principais"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Uso de emojis e mensagens claras no console"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de base64 para transporte de imagem", "Validação via assinatura PNG"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": ["REST"]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": ["Versão na URL (/v1/)"]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": ["JSON com campo success e data.image em base64"]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["Local development (localhost:3000)"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": ["Não especificado"]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": ["Nenhum usado explicitamente"]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": ["Necessita API local rodando na porta 3000"]
      }
    ]
  },
  "tests/setup.ts": {
    "summary": "Este arquivo configura o ambiente global para execução de testes automatizados em um projeto Node.js utilizando Jest. Ele define variáveis de ambiente específicas para o contexto de testes, realiza mocks globais de bibliotecas externas como pino (logger), clipboardy e nanoid para evitar efeitos colaterais e problemas com módulos ESM durante a execução dos testes. Além disso, estabelece hooks globais para setup e teardown dos testes, e configura um timeout padrão para testes assíncronos, garantindo controle e isolamento do ambiente de teste. Essa configuração permite que os testes sejam executados de forma consistente, previsível e sem interferência de dependências externas, facilitando a manutenção e a confiabilidade do processo de qualidade do software.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto Node.js de testes automatizados"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "Test Automation", "Quality Assurance"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Testes automatizados em ambiente de desenvolvimento"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Isolamento completo do ambiente de testes",
          "Mocks consistentes para dependências externas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.0", "JavaScript ES2021"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": ["Jest 29"]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": ["pino logger", "clipboardy", "nanoid"]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Test Setup Pattern", "Mocking Pattern"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "tests/ - arquivos de teste",
          "src/ - código fonte",
          "config/ - configurações globais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código de produção e testes",
          "Mocks isolados em configuração global"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": ["Airbnb JavaScript Style Guide"]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": ["ESLint com regras padrão Airbnb"]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": ["Prettier com configuração padrão"]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": ["JSDoc"]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": ["Jest 29"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["tests/ directory with unit and integration tests"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": ["Minimum 80% coverage"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": ["AAA (Arrange-Act-Assert)", "Given-When-Then"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": ["Global mocks for external dependencies", "jest.mock usage"]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": ["GitHub Flow"]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": ["Conventional Commits"]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": ["Code review mandatory", "CI checks passing"]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": ["Linting", "Testing", "Build", "Deployment"]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["npm run dev"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": ["npm test"]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["npm run build"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": ["npm run lint"]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": ["npm run format"]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": ["API_KEY environment variable (mocked for tests)"]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": ["Mocked pino logger to suppress logs during tests"]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["jest", "pino", "clipboardy", "nanoid"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": ["Potential maintenance overhead of mocks"]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": ["Consistência dos mocks", "Isolamento dos testes", "Cobertura de testes"]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": ["Documentar mocks e variáveis de ambiente"]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": ["Comentários claros e objetivos"]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": ["Uso de mocks globais para evitar efeitos colaterais em testes"]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": ["dev", "test"]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "API_KEY",
          "MOUSE_MIN_DUR",
          "MOUSE_MAX_DUR",
          "MOUSE_SAMPLE_RATE",
          "MOUSE_STREAM_INTERVAL"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto que utiliza TypeScript, estendendo uma configuração base localizada em um diretório pai. Seu principal comportamento é controlar o processo de compilação, especificando diretórios raiz, arquivos incluídos e excluídos, e desabilitando a emissão de arquivos compilados (noEmit). Isso permite que o projeto realize apenas a verificação de tipos e análise estática sem gerar código JavaScript, facilitando a integração com ferramentas de build e IDEs, além de garantir consistência na estrutura do código e evitar a compilação desnecessária de dependências externas como node_modules.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript com configuração personalizada para análise estática"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de software", "TypeScript", "Configuração de build"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Configuração e desenvolvimento"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir verificação de tipos sem emissão de código",
          "Excluir node_modules da análise"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Configuration Inheritance"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "rootDir definido como diretório pai para organização consistente do código fonte",
          "Exclusão de node_modules para evitar análise desnecessária"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["Arquivos .ts para código TypeScript", "Configuração baseada em JSON"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Inclusão restrita a arquivos TypeScript no projeto e src",
          "Exclusão de dependências externas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["Strict TypeScript type checking implícito"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["../tsconfig.json", "TypeScript Compiler"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto moderno que utiliza recursos avançados do ECMAScript 2022 e módulos ESNext, garantindo interoperabilidade com módulos CommonJS e suporte a decoradores experimentais. O foco está em garantir um ambiente de desenvolvimento estrito e seguro, com checagem rigorosa de tipos, geração de mapas de fonte para debugging e declaração de tipos para consumo externo. A configuração também exclui arquivos de teste e diretórios de build, promovendo uma estrutura clara e organizada para o código fonte, facilitando a integração com ferramentas de build e CI/CD. Essa configuração habilita práticas recomendadas para manutenção, escalabilidade e integração em projetos TypeScript modernos, suportando bibliotecas e aplicações web que interagem com APIs DOM e módulos JSON.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": ["Projeto TypeScript Moderno"]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": ["Desenvolvimento de aplicações web modernas com TypeScript"]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": ["Configuração inicial / Setup"]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir tipagem estrita e compatibilidade com ES2022",
          "Manter exclusão de arquivos de teste e build"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": ["TypeScript 5.x (target ES2022)"]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": ["npm"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": ["Modular Configuration", "Separation of Concerns"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src (código fonte)",
          "dist (artefatos compilados)",
          "node_modules (dependências externas)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": ["camelCase para variáveis e funções", "PascalCase para classes e interfaces"]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "src como raiz do código fonte",
          "dist para saída compilada",
          "exclusão de testes do build"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": ["strict", "noImplicitAny", "strictNullChecks"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": ["Testes excluídos do build via exclude"]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": ["npm install"]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": ["tsc --watch"]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": ["tsc"]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": ["TypeScript Compiler", "Node.js"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": ["target ES2022", "module ESNext"]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.prod.json": {
    "summary": "Erro ao gerar descrição: Timeout: Arquivo tsconfig.prod.json excedeu 100000ms (timeout excedido)",
    "properties": []
  }
}

{
  ".env.example": {
    "summary": "Este arquivo de configuração define variáveis de ambiente essenciais para a inicialização e operação de uma aplicação em ambiente de desenvolvimento. Ele especifica parâmetros como NODE_ENV para controle do ambiente, PORT e HOST para configuração da rede, LOG_LEVEL para o nível de detalhamento dos logs, além de parâmetros específicos para controle de comportamento de dispositivos de entrada e reconhecimento visual, como MOUSE_SPEED e SCREEN_CONFIDENCE. Essas variáveis permitem ajustar o comportamento da aplicação sem alterar o código-fonte, facilitando a integração com outros módulos e a adaptação a diferentes ambientes operacionais, garantindo flexibilidade e controle sobre aspectos críticos da execução e monitoramento do sistema.",
    "properties": [
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV=development",
          "PORT=3000",
          "HOST=0.0.0.0",
          "LOG_LEVEL=info",
          "MOUSE_SPEED=500",
          "SCREEN_CONFIDENCE=0.8"
        ]
      }
    ]
  },
  ".nvmrc": {
    "summary": "O código consiste em um valor literal numérico simples, especificamente o número 20, sem qualquer lógica, função ou estrutura adicional. Seu comportamento é estático e não realiza transformações, operações ou interações com outros componentes do sistema. Funcionalmente, ele representa um dado fixo que pode ser utilizado como constante ou valor de configuração em um contexto maior, mas isoladamente não possui impacto observável, efeitos colaterais ou integração com sistemas externos. A simplicidade extrema do código elimina riscos de segurança, performance ou manutenção, porém também limita seu valor funcional a um papel meramente representativo ou inicial.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": []
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": []
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": []
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".prettierrc": {
    "summary": "Este arquivo JSON configura regras de formatação de código para um projeto de desenvolvimento, definindo padrões como uso obrigatório de ponto e vírgula (semi), vírgulas finais em listas (trailingComma), aspas simples (singleQuote), largura máxima de linha (printWidth) e largura de tabulação (tabWidth). Seu propósito principal é garantir consistência e padronização no estilo do código-fonte, facilitando a manutenção e colaboração entre desenvolvedores. A configuração é simples, sem lógica condicional, e integra-se a ferramentas de formatação automática como Prettier, impactando diretamente a qualidade e legibilidade do código no pipeline de desenvolvimento.",
    "properties": [
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "semi: true",
          "trailingComma: all",
          "singleQuote: true",
          "printWidth: 100",
          "tabWidth: 2"
        ]
      }
    ]
  },
  "README.md": {
    "summary": "Este projeto consiste em uma API REST que serve como um wrapper para a biblioteca NutJS, permitindo automação desktop via endpoints HTTP. Seu principal objetivo é expor funcionalidades de controle do mouse e captura de tela, facilitando a integração de automações de interface gráfica em sistemas distribuídos. A arquitetura segue o padrão Clean Architecture, separando claramente as responsabilidades em camadas de domínio, aplicação, infraestrutura e interface, garantindo alta manutenibilidade e escalabilidade. A API oferece endpoints para movimentação, clique, arraste e scroll do mouse, além de captura e busca de imagens na tela, suportando operações essenciais para automação de tarefas repetitivas. O projeto utiliza TypeScript com Fastify para alta performance e tipagem rigorosa, e inclui configurações para múltiplos sistemas operacionais, assegurando compatibilidade e segurança no acesso aos recursos do sistema. A documentação detalha comandos para instalação, desenvolvimento, build e produção, além de orientações para permissões específicas em macOS, Linux e Windows, garantindo uma experiência de uso consistente e segura.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "NutJS REST API - Automação Desktop via HTTP"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação Desktop",
          "Automação de Interface Gráfica",
          "Controle de Mouse e Tela"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Permissões de sistema devem ser respeitadas",
          "Validação rigorosa das entradas para evitar comandos inválidos",
          "Manter integridade das operações de automação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify (versão não especificada)",
          "TSyringe",
          "Zod"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "NutJS"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Clean Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Domain: entidades e casos de uso",
          "Application: serviços e DTOs",
          "Infrastructure: adaptadores NutJS e providers",
          "Interface: controllers e middleware"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e funções",
          "kebab-case para arquivos",
          "Prefixos API para endpoints"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Dependências unidirecionais do Domain para Application, Infrastructure e Interface",
          "Separação clara entre lógica de negócio e infraestrutura"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "cp .env.example .env"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Variáveis de ambiente para configuração",
          "Permissões de acessibilidade no macOS"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e responsividade para comandos de automação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "NutJS",
          "Fastify",
          "TSyringe",
          "Zod"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento via URL (/api/v1/)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev (http://localhost:3000)",
          "produção (configurável via .env)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Configurações gerais via .env (ex: porta, variáveis NutJS)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Permissões de acessibilidade no macOS",
          "Variável DISPLAY no Linux"
        ]
      }
    ]
  },
  "ecosystem.config.js": {
    "summary": "Este arquivo configura o processo de execução da aplicação 'nutjs-api' utilizando um gerenciador de processos Node.js, provavelmente PM2. Ele define um único processo em modo fork para rodar o script principal localizado em 'dist/index.js', configurado para ambiente de produção na porta 3000. O arquivo também especifica limites de memória para reinício automático, além de arquivos dedicados para logs de saída e erros, garantindo monitoramento e estabilidade da aplicação em produção. Essa configuração permite controle eficiente do ciclo de vida do processo, facilitando a manutenção e escalabilidade do serviço.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "nutjs-api",
          "API para automação e controle de dispositivos via Node.js"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação",
          "Controle de dispositivos",
          "Node.js API"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Disponibilidade contínua do serviço",
          "Reinício automático em caso de uso excessivo de memória",
          "Logs de erro e saída para auditoria"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript (Node.js)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "PM2 (process manager)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Process Manager Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "dist/ - código transpilado e build de produção",
          "logs/ - arquivos de logs de saída e erro"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para nomes de apps",
          "lowercase para scripts e arquivos de log"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte (dist/index.js) e configuração de execução (ecosystem config)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Controle de memória para evitar crashes",
          "Execução em modo fork para isolamento"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Configuração atual limita a 1 instância, podendo ser escalada via múltiplas instâncias no PM2"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs separados para erros (logs/error.log) e saída padrão (logs/out.log)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "PM2 para monitoramento e reinício automático"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Reinício automático do processo ao atingir limite de memória (1G)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Node.js",
          "PM2"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Limitação a uma instância pode impactar performance sob alta carga"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "production (NODE_ENV=production)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "PM2 process manager"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "PORT"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limite de memória configurado para 1G para reinício automático"
        ]
      }
    ]
  },
  "jest.config.js": {
    "summary": "Este arquivo configura o ambiente de testes para um projeto TypeScript utilizando Jest com suporte a módulos ECMAScript (ESM). Ele define presets específicos para integração com ts-jest, configura o ambiente de execução dos testes como Node.js, e mapeia extensões e módulos para garantir compatibilidade com importações ESM. Além disso, especifica padrões para localização dos testes, coleta e relatório de cobertura de código, e estabelece limites mínimos de cobertura para garantir qualidade. O arquivo também define timeout para execução dos testes e scripts de setup para inicialização do ambiente de testes, promovendo uma integração contínua e confiável no pipeline de desenvolvimento.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Jest 29",
          "ts-jest"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "**/__tests__/**/*.test.ts",
          "**/tests/**/*.test.ts",
          "**/tests/**/*.spec.ts"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "branches >= 80%",
          "functions >= 80%",
          "lines >= 80%",
          "statements >= 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_timeout",
        "value": [
          "10000 ms"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "setup_files_after_env",
        "value": [
          "<rootDir>/tests/setup.ts"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "strict TypeScript via ts-jest"
        ]
      }
    ]
  },
  "package-lock.json": {
    "summary": "O projeto nutjs-rest-api é uma aplicação backend desenvolvida em TypeScript que expõe uma API RESTful para automação de interações com a interface do usuário, utilizando a biblioteca @nut-tree-fork/nut-js. Ele integra o framework Fastify para gerenciamento eficiente de rotas HTTP, além de utilizar injeção de dependências via tsyringe e validação de dados com zod, garantindo modularidade e robustez. O sistema suporta configuração via dotenv, logging estruturado com pino e pino-pretty, e possui um ambiente de desenvolvimento com ESLint, Prettier e Jest para garantir qualidade e cobertura de testes. A arquitetura favorece a separação clara de responsabilidades, facilitando a manutenção e escalabilidade, enquanto as dependências indicam foco em performance, segurança e boas práticas de desenvolvimento. O projeto está em fase inicial (versão 1.0.0), com potencial para expansão em automação e integração com sistemas externos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "nutjs-rest-api",
          "API REST para automação UI com nut-js"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de interface",
          "UI Automation",
          "Backend API",
          "DevOps"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP",
          "Versão 1.0.0"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução segura de comandos UI",
          "Validação rigorosa de inputs",
          "Manutenção da integridade do estado do sistema"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.24.0",
          "tsyringe 4.8.0",
          "zod 3.22.4"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "dotenv for environment configuration"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Modular Architecture",
          "REST API"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/controllers - API route handlers",
          "src/services - Business logic",
          "src/utils - Utility functions",
          "tests - Unit and integration tests"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase for variables and functions",
          "PascalCase for classes",
          "kebab-case for files"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Clear separation between API layer and service layer",
          "Use of interfaces for abstractions",
          "Dependency injection to decouple modules"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adapted for TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint with @typescript-eslint plugin",
          "eslint-config-prettier to disable conflicting rules"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier 3.x with default settings"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc for functions and classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript settings enabled"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29.x"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests directory parallel to src",
          "Unit tests for services",
          "Integration tests for API endpoints"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Minimum 80% coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Use of Jest mocks and fixtures"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review mandatory",
          "Passing CI checks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Linting",
          "Testing",
          "Build",
          "Deployment"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não especificado no pacote, provável uso futuro de JWT ou OAuth2"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não detalhado, presumivelmente controle via middleware"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Variáveis de ambiente gerenciadas via dotenv"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não especificado, recomendação de uso de helmet em produção"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Baixa latência esperada para chamadas API"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e eficiência na manipulação UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Arquitetura modular facilita escalabilidade horizontal"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "JSON padrão com mensagens e códigos HTTP"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logging estruturado com pino e pino-pretty"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de erros via middleware Fastify"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@nut-tree-fork/nut-js",
          "fastify",
          "tsyringe",
          "zod",
          "pino"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "@nut-tree-fork/nut-js ^4.2.0",
          "fastify ^4.24.0",
          "typescript ^5.3.2"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Nenhum explicitamente identificado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Nenhum explicitamente identificado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Potencial latência na automação UI dependendo do ambiente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Projeto inicial, sem migrações em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Qualidade do código",
          "Cobertura de testes",
          "Segurança e validação"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara via JSDoc e README"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros",
          "Uso de PRs para discussões"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de Fastify para performance",
          "Uso de tsyringe para DI",
          "Validação com zod"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "RESTful API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento semântico via package.json"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Desenvolvimento, produção (URLs não especificadas)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Provável Docker ou ambiente Node.js padrão"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Configuração via dotenv (ex: PORT, NODE_ENV)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Requer Node.js >=16",
          "Compatível com Linux, Windows e macOS"
        ]
      }
    ]
  },
  "package.json": {
    "summary": "O projeto nutjs-rest-api é uma API RESTful que serve como um wrapper para a automação desktop utilizando a biblioteca NutJS. Seu principal objetivo é expor funcionalidades de automação de interface gráfica via endpoints HTTP, facilitando a integração com outros sistemas e a execução remota de comandos de automação. O código gerencia o ciclo de vida da aplicação, incluindo desenvolvimento, build, testes e linting, utilizando TypeScript e Fastify para garantir performance e escalabilidade. A arquitetura modular e o uso de injeção de dependências promovem manutenibilidade e extensibilidade, enquanto a integração com ferramentas como Jest e ESLint assegura qualidade e confiabilidade do código. A API suporta operações de automação complexas, manipulação de clipboard e configuração via variáveis de ambiente, habilitando automações robustas e seguras em ambientes desktop.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "nutjs-rest-api",
          "API REST para automação desktop com NutJS"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação Desktop",
          "Integração via API REST",
          "Automação de interface gráfica"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável",
          "Versão 1.0.0"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução segura de comandos de automação",
          "Validação rigorosa de inputs",
          "Manutenção da integridade do estado do sistema"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.3.2",
          "Node.js 20.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.24.0",
          "tsyringe 4.8.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "NutJS",
          "Clipboardy"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Modular Architecture",
          "REST API"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ para código fonte",
          "dist/ para build",
          "tests/ para testes unitários e integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para scripts npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre API, serviços de automação e utilitários",
          "Dependências injetadas via tsyringe"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "ESLint com regras baseadas em Airbnb e Prettier"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "eslint src/**/*.ts",
          "eslint --fix para correção automática"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tsc --noEmit"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29.7.0"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários",
          "tests/integration para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura de código com jest --coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks e spies via Jest"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Testes unitários e integração",
          "Lint",
          "Deploy automatizado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build:prod"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não especificado (recomendado implementar autenticação para produção)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Variáveis de ambiente via dotenv, sem exposição direta no código"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não especificado, recomendação de uso via Fastify plugins"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Baixa latência para comandos simples de automação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e responsividade da API"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade horizontal via Fastify e Node.js"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "JSON padrão com mensagens e códigos HTTP"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Pino para logging estruturado e pino-pretty para logs legíveis"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de erros via middleware Fastify"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@nut-tree-fork/nut-js",
          "fastify",
          "tsyringe"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Versões fixas e compatíveis especificadas no package.json"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Implementação pendente de auditoria de roadmap (audit:roadmap)"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Qualidade do código",
          "Cobertura de testes",
          "Conformidade com padrões"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação inline com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos",
          "Uso de PRs para discussões"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de Fastify e tsyringe para performance e modularidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento via package.json (1.0.0)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Node.js server",
          "Possível containerização via Docker (não especificado)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Configuração via dotenv"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Requer ambiente com Node.js 20.x",
          "Permissões para automação desktop"
        ]
      }
    ]
  },
  "src/application/dto/automation-request.dto.ts": {
    "summary": "Este arquivo define schemas de validação para operações relacionadas ao controle e interação do mouse e captura de tela, utilizando a biblioteca Zod para garantir a integridade dos dados. Ele especifica formatos rigorosos para coordenadas, botões do mouse, durações e comportamentos opcionais como suavização (smooth) e confiança em reconhecimento de imagens, permitindo a construção de comandos robustos para automação de interface gráfica. Através desses schemas, o código habilita a validação e tipagem segura de requisições para movimentos, cliques, arrastes, scrolls e buscas visuais na tela, facilitando a integração com sistemas de automação e testes automatizados, garantindo consistência e previsibilidade no comportamento das interações simuladas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse and Screen Interaction Automation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Interface Gráfica",
          "UI Automation",
          "Testes Automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa de coordenadas não negativas",
          "Limites de duração entre 100 e 5000 ms",
          "Confiança mínima para reconhecimento de imagens"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Zod 3.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Schema Validation Pattern",
          "Type-safe API Contracts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/schemas - validações de dados",
          "src/types - definições de tipos inferidos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e propriedades",
          "PascalCase para tipos e schemas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre schemas de input e tipos inferidos",
          "Isolamento de validação de dados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para validação de schemas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 90%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para inputs inválidos e limites de valores"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Lint",
          "Testes unitários",
          "Build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Duração mínima 100ms, máxima 5000ms para ações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Precisão e confiabilidade sobre velocidade extrema"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Validação via Zod com mensagens padronizadas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          ""
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "zod"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "zod >=3.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          ""
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          ""
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          ""
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          ""
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de tipos e limites",
          "Consistência de naming"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara dos schemas e tipos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Zod para validação e tipagem"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST-like JSON payloads"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          ""
        ]
      }
    ]
  },
  "src/application/services/automation.service.ts": {
    "summary": "O arquivo define a classe AutomationService, responsável por executar comandos de automação relacionados a mouse e tela, integrando serviços especializados para manipulação de ações como movimento, clique, arraste, rolagem e captura ou busca de imagens na tela. Ele implementa uma interface de execução de automações, tratando diferentes tipos de comandos e operações com validação e tratamento de erros robusto, garantindo respostas padronizadas. A arquitetura modular e injeção de dependências facilitam a extensão e manutenção, permitindo que o serviço coordene ações complexas de automação de interface gráfica de forma assíncrona e confiável.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "AutomationService",
          "Execução de comandos de automação para mouse e tela"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de interface gráfica",
          "Automação de testes",
          "Controle de dispositivos de entrada"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável com possibilidade de extensão"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa dos comandos",
          "Tratamento consistente de erros",
          "Execução assíncrona confiável"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.x (Dependency Injection)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "MouseService",
          "ScreenService"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Clean Architecture",
          "Command Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/entities - Entidades de domínio como AutomationCommand",
          "domain/use-cases - Casos de uso como IAutomationExecutor",
          "services - Implementações concretas como MouseService e ScreenService"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "Sufixo Service para serviços"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e infraestrutura",
          "Injeção de dependências para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de métodos e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos serviços"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para MouseService e ScreenService"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Execução assíncrona com timeout implícito em operações de mouse e tela"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Confiabilidade e precisão sobre velocidade bruta"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Modularidade para extensão com novos comandos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Objeto com success:boolean e error:string opcional"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de exceções com retorno padronizado de falha"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "tsyringe",
          "MouseService",
          "ScreenService"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../domain/entities",
          "../../domain/use-cases",
          "./mouse.service.js",
          "./screen.service.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de tratamento de erros",
          "Cobertura de casos de comando",
          "Consistência de injeção de dependências"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara de métodos públicos e contratos de comando"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de tsyringe para DI",
          "Separação clara entre mouse e screen services"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "{ success: boolean, error?: string, data?: any }"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/services/mouse.service.ts": {
    "summary": "O código implementa um serviço de controle de mouse que abstrai operações comuns como mover, clicar, arrastar e rolar o cursor na tela, garantindo validação de coordenadas e tratamento de erros. Utiliza injeção de dependência para desacoplar a implementação do adaptador de mouse, permitindo flexibilidade e testabilidade. O serviço também incorpora logging detalhado para monitoramento das ações, além de suportar movimentos suaves e parametrizados, proporcionando uma interface robusta para automação de interações com o mouse em aplicações que demandam controle programático preciso.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Automation Service",
          "Controle programático de ações do mouse para automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de UI",
          "Testes automatizados",
          "Interação com hardware de entrada"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa das coordenadas para evitar ações fora da tela",
          "Execução confiável das ações de mouse com tratamento de erros"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "@nut-tree-fork/nut-js (screen API)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Adapter Pattern",
          "Clean Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/entities - entidades de domínio",
          "dto - objetos de transferência de dados",
          "services - lógica de negócio",
          "adapters - interfaces para hardware"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "sufixo Service para classes de serviço"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, DTOs e serviços",
          "Dependência invertida via interfaces para adaptadores"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, incluindo regras de segurança e estilo"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript (strict mode habilitado)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ao lado dos arquivos de código"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de adaptadores via tsyringe e jest.mock"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes automatizados aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (serviço local)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Movimentos suaves configuráveis entre 0 e 1000ms",
          "Scroll dividido em passos para suavidade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre suavidade do movimento e responsividade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Projeto focado em execução local, sem escalabilidade distribuída"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados como exceções padrão com mensagens claras"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logging estruturado com níveis debug, info e error via pino"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Propagação de erros para camadas superiores para tratamento"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "IMouseAdapter",
          "@nut-tree-fork/nut-js",
          "pino",
          "tsyringe"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0",
          "tsyringe 4.x",
          "pino 8.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "domain/entities",
          "dto",
          "services"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Nenhum identificado explicitamente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível latência em scrolls suaves com alta duração"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Loops assíncronos em scroll podem impactar performance"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de tratamento de erros, cobertura de testes, aderência a padrões de injeção"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara via JSDoc para métodos públicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos, sem excesso de verbosidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Dependency Injection para facilitar testes e modularidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável (serviço interno)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Desenvolvimento local",
          "Produção local"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Execução local via Node.js"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não especificadas"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência de ambiente gráfico para controle do mouse"
        ]
      }
    ]
  },
  "src/application/services/screen.service.ts": {
    "summary": "Este arquivo implementa um serviço de captura e busca de imagens na tela, utilizando injeção de dependência para abstrair a interface de captura e reconhecimento visual. O ScreenService oferece métodos para localizar templates gráficos em regiões específicas da tela, capturar imagens em formatos base64 e aguardar a aparição de um template dentro de um timeout configurável. A classe manipula buffers de imagens codificadas em base64, delegando a lógica de reconhecimento para um adaptador externo, enquanto registra eventos e erros para monitoramento. Essa abordagem modular e orientada a interfaces permite integração flexível com diferentes implementações de captura de tela, suportando automação visual e testes baseados em reconhecimento de padrões visuais.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Screen Automation Service",
          "Serviço de automação visual para captura e reconhecimento de tela"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Reconhecimento visual",
          "Automação de interface gráfica"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão mínima de confiança para reconhecimento",
          "Timeouts para espera de templates",
          "Integridade dos buffers de imagem"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Nenhum serviço externo direto, mas integração com adaptadores de captura de tela"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Adapter Pattern",
          "Service Layer"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "dto para objetos de transferência de dados",
          "domain para entidades de negócio",
          "services para lógica de aplicação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para métodos e variáveis",
          "Prefixo I para interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre DTOs, entidades de domínio e serviços",
          "Dependência invertida via injeção"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier configurado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para métodos públicos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ao lado dos serviços"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de adaptadores via tsyringe e jest.mock"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Buffers de imagem base64 devem ser tratados com cuidado para evitar vazamento"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Nenhuma criptografia aplicada internamente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Timeout padrão de 5000ms para espera de template"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre precisão de reconhecimento e tempo de resposta"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Nenhuma estratégia de cache implementada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Arquitetura modular permite substituição do adaptador para escalabilidade"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados diretamente com logging detalhado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Uso do pino com níveis debug, info e error"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Propagação de erros para camadas superiores"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "tsyringe para DI",
          "pino para logging"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript 5.x",
          "tsyringe 4.x",
          "pino 8.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../dto/automation-request.dto.js",
          "../../domain/entities/screen-region.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Tratamento de erros pode ser mais granular",
          "Validação de inputs pode ser reforçada"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível overhead na decodificação base64 em chamadas frequentes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Operações síncronas de buffer podem impactar performance"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Cobertura de testes",
          "Tratamento de erros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara dos métodos públicos com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de DI para facilitar testes e substituição de adaptadores"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável diretamente, serviço interno"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Base64 encoded images",
          "Arrays de MatchResult"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker container"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "LOG_LEVEL",
          "SCREEN_ADAPTER_IMPLEMENTATION"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de acesso a recursos gráficos para captura de tela"
        ]
      }
    ]
  },
  "src/config/dependency-injection.ts": {
    "summary": "Este arquivo é responsável pela configuração e registro das dependências do sistema utilizando o container de injeção de dependências do tsyringe. Ele centraliza a associação entre interfaces e suas implementações concretas, especialmente adaptadores para dispositivos de entrada e saída (mouse, teclado, tela, clipboard) e serviços de automação. O código promove a inversão de controle, facilitando a manutenção, testabilidade e extensibilidade do sistema, ao permitir que componentes sejam facilmente substituídos ou mockados. A configuração abrange serviços de alto nível que encapsulam funcionalidades específicas, como controle do mouse, teclado, captura de tela e automação, integrando-os com adaptadores baseados na biblioteca NutJS. Dessa forma, o arquivo habilita a orquestração de automações complexas no domínio de controle de dispositivos, garantindo uma arquitetura modular e desacoplada, essencial para sistemas que executam automações de interface e interação com o usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Control System"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de dispositivos de entrada e saída",
          "Controle de mouse, teclado, tela e clipboard"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Registro correto e consistente das dependências",
          "Manter desacoplamento entre adaptadores e serviços",
          "Garantir que serviços de automação sejam resolvidos via container"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "NutJS (biblioteca para automação de dispositivos)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Clean Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio e serviços",
          "domain/use-cases - regras de negócio e casos de uso",
          "infrastructure/adapters - implementações concretas para hardware",
          "config - configuração e registro de dependências"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase",
          "Arquivos em kebab-case",
          "Interfaces prefixadas com I",
          "Serviços e adaptadores nomeados com sufixos Service e Adapter"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Domínio não depende de infraestrutura",
          "Infraestrutura implementa interfaces definidas no domínio",
          "Aplicação orquestra serviços e casos de uso"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos módulos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocking via ts-mockito e jest.mock para adaptadores"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Manter baixo acoplamento para facilitar performance e escalabilidade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Arquitetura modular facilita escalabilidade horizontal"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "tsyringe",
          "reflect-metadata",
          "NutJS adapters"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "application/services",
          "domain/use-cases",
          "infrastructure/adapters"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência na injeção de dependências",
          "Nomenclatura clara e padronizada"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar interfaces e contratos de serviços"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do tsyringe para DI",
          "Uso de NutJS para automação de dispositivos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/config/environment.ts": {
    "summary": "Este arquivo configura o ambiente de execução da aplicação Node.js, carregando variáveis de ambiente via dotenv e definindo um objeto imutável com parâmetros essenciais como NODE_ENV, porta, host, nível de log, velocidade do mouse, confiança da tela e chave de API. Ele centraliza a configuração, garantindo valores padrão para cada variável, facilitando a adaptação entre ambientes de desenvolvimento e produção. Além disso, expõe flags booleanas para identificar o ambiente atual, permitindo decisões condicionais em outras partes do sistema, promovendo flexibilidade e controle centralizado das configurações críticas da aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Configuração de Ambiente Node.js para Aplicação Web"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Configuração de ambiente",
          "Node.js",
          "Backend",
          "Variáveis de ambiente"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento",
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Variáveis de ambiente devem estar definidas corretamente",
          "Chave API não pode ser vazia em produção"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0",
          "Node.js 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "dotenv 16.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "API Key (serviço externo não especificado)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Singleton",
          "Configuration Object"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/config - arquivos de configuração",
          "src/env - variáveis de ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e propriedades",
          "PascalCase para tipos e constantes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada em módulo próprio, exportada para uso global"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para TypeScript e Node.js"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e objetos exportados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com 'as const' para imutabilidade"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install",
          "cp .env.example .env"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "API_KEY deve ser mantida secreta e não exposta em logs"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "logLevel configurável via variável de ambiente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "dotenv"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de variáveis de ambiente",
          "Imutabilidade da configuração"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar variáveis de ambiente e seus valores padrão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos em português"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do dotenv para configuração",
          "Separação clara entre config e lógica"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "PORT",
          "HOST",
          "LOG_LEVEL",
          "MOUSE_SPEED",
          "SCREEN_CONFIDENCE",
          "API_KEY"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/entities/automation-command.ts": {
    "summary": "Este arquivo define uma estrutura abstrata para comandos de automação focados em interações com mouse, tela e espera, utilizando TypeScript para garantir tipagem e organização. Ele estabelece uma hierarquia de classes que representam diferentes tipos de comandos (mouse, screen, wait), cada um com um método execute assíncrono que retorna um resultado padronizado, permitindo integração flexível em fluxos de automação. O código enfatiza a separação de responsabilidades e extensibilidade, facilitando a implementação de comportamentos específicos para cada comando, enquanto mantém um contrato comum para execução e tratamento de resultados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Command Framework",
          "Base para execução de comandos de automação UI"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Interface",
          "Automação de testes e interação com UI",
          "Termos técnicos: MouseAction, ScreenRegion, CommandResult"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP",
          "Implementação inicial da arquitetura de comandos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução correta e sequencial dos comandos",
          "Retorno padronizado de resultados para integração",
          "Extensibilidade para novos tipos de comandos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework explícito"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Command Pattern",
          "Template Method"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/commands - comandos de automação",
          "src/models - definições de tipos e interfaces",
          "src/utils - utilitários auxiliares"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes PascalCase",
          "Interfaces prefixadas com I ou sufixadas com Interface",
          "Variáveis camelCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Comandos isolados em módulos próprios",
          "Dependência unidirecional para modelos e utilitários"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de classes e métodos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit/commands",
          "tests/integration"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para dependências externas e timers"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável no escopo atual"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável no escopo atual"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Execução assíncrona para evitar bloqueios",
          "Timeouts configuráveis para comandos wait"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Responsividade e extensibilidade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Arquitetura modular para fácil expansão"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "CommandResult com success boolean e campo error string opcional"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não definido no código atual"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não definido"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Execução assíncrona permite captura e tratamento externo"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "mouse-action.js",
          "screen-region.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Módulos locais para ações de mouse e regiões de tela"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Métodos execute não implementados nas subclasses base"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Risco de exceções se execute não for sobrescrito"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Execução sequencial pode impactar performance em fluxos longos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Projeto em fase inicial, sem migrações"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Implementação correta do método execute",
          "Consistência na tipagem e tratamento de erros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para cada comando e seus parâmetros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do padrão Command para modularidade e extensibilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "CommandResult padrão com success, data e error"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "API_URL"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Execução em ambiente Node.js com suporte a ES Modules"
        ]
      }
    ]
  },
  "src/domain/entities/mouse-action.ts": {
    "summary": "Este arquivo define uma abstração para ações de mouse em um ambiente de automação ou interface gráfica, encapsulando operações como movimento, clique, arrasto e rolagem. Ele utiliza interfaces e enums para tipar pontos no espaço 2D, botões do mouse e opções específicas para cada tipo de ação, garantindo flexibilidade e precisão na definição dos comandos. A classe MouseAction centraliza a criação dessas ações, permitindo a construção de comandos parametrizados que podem ser interpretados por sistemas de controle de input, facilitando a integração com frameworks de automação, testes ou manipulação de interfaces gráficas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Automation Module",
          "Mouse Action Abstraction"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Interface",
          "Testes Automatizados",
          "Input Device Control"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP",
          "Desenvolvimento"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão na execução das ações",
          "Consistência na tipagem das opções",
          "Imutabilidade das ações após criação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Factory Method",
          "Encapsulamento Orientado a Objetos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte principal",
          "types/: definições de tipos e interfaces",
          "actions/: implementação das ações de mouse"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes e interfaces",
          "camelCase para métodos e variáveis",
          "Enums em PascalCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo isolado para input device abstractions",
          "Sem dependências externas para facilitar reutilização"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Sem uso de any exceto em casos controlados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de classes e métodos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit/: testes unitários para MouseAction e tipos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 90%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para simular eventos de input"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na execução das ações",
          "Baixo overhead de criação de objetos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Uso de 'as any' para opções de drag e scroll que pode comprometer tipagem"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipagem",
          "Clareza na documentação",
          "Ausência de any não justificado"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar métodos estáticos e interfaces"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do padrão Factory Method para criação de ações"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/entities/screen-region.ts": {
    "summary": "Este arquivo define interfaces e uma classe para manipulação de regiões retangulares na tela, focando em operações geométricas básicas como verificação de contenção e cálculo do centro. A classe ScreenRegion encapsula propriedades de uma área retangular e oferece métodos para determinar se um ponto está dentro da região e para obter o ponto central, além de permitir a criação de instâncias a partir de resultados de correspondência (MatchResult) que incluem um nível de confiança. O código é projetado para ser utilizado em contextos onde é necessário identificar e manipular áreas específicas da tela, como em automação de UI, reconhecimento de padrões ou testes visuais, fornecendo abstrações claras e reutilizáveis para manipulação espacial.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Screen Region Handler",
          "Manipulação e análise de regiões na tela para automação e reconhecimento visual"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de UI",
          "Reconhecimento de padrões visuais",
          "Testes automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP",
          "Desenvolvimento inicial"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão na definição das regiões",
          "Integridade dos dados de coordenadas",
          "Consistência na conversão de MatchResult para ScreenRegion"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Encapsulamento",
          "Factory Method"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/models - definição de interfaces e classes de domínio",
          "src/utils - utilitários relacionados a manipulação de regiões"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes e interfaces",
          "camelCase para métodos e variáveis"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre interfaces (contratos) e implementações",
          "Uso de export para modularização"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários das classes e interfaces"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para dados de entrada MatchResult"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e baixo overhead computacional"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          ""
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Validação de parâmetros ainda não implementada"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na definição de interfaces",
          "Consistência de nomenclatura",
          "Cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para métodos públicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de interfaces para contratos de dados",
          "Método estático para conversão de tipos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          ""
        ]
      }
    ]
  },
  "src/domain/use-cases/execute-automation.use-case.ts": {
    "summary": "Este arquivo implementa um caso de uso para execução sequencial de comandos de automação, garantindo que cada comando seja processado de forma síncrona e que a execução pare imediatamente ao encontrar um comando com falha. Utiliza injeção de dependência para desacoplar a lógica de execução dos comandos, permitindo flexibilidade na implementação do serviço de automação. O código trata erros de execução capturando exceções e retornando resultados padronizados, facilitando o controle de fluxo e a integração com sistemas maiores que dependem da execução confiável de comandos automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Executor",
          "Execução sequencial de comandos automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação",
          "Automação de processos",
          "Command Execution"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Parar execução ao detectar falha em comando",
          "Retornar resultados detalhados de sucesso/falha"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.7"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "AutomationService (interface IAutomationExecutor)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Command Pattern",
          "Clean Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "entities: definição de entidades de domínio",
          "usecases: casos de uso da aplicação",
          "services: serviços externos/internos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para métodos e variáveis",
          "Interfaces prefixadas com I"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre entidades, casos de uso e serviços",
          "Dependências injetadas via container"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de métodos e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos casos de uso"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de serviços externos via jest.mock"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Execução sequencial para garantir integridade",
          "Prioridade para confiabilidade sobre paralelismo"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Objeto com propriedades success:boolean e error:string opcional"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Interrupção da execução ao erro, sem retry automático"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "AutomationService",
          "tsyringe"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../entities/automation-command.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Execução sequencial pode limitar throughput"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Injeção de dependências",
          "Clareza no fluxo de execução"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara dos casos de uso e contratos de serviço"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de DI para desacoplamento",
          "Parada imediata em falhas para segurança"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Array de CommandResult com propriedades success e error"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/index.ts": {
    "summary": "Este arquivo implementa um servidor HTTP utilizando o framework Fastify, configurado para atuar como backend de uma aplicação que expõe rotas de automação via API RESTful. Ele inicializa dependências via injeção, registra rotas com prefixo versionado, e define um endpoint de health check para monitoramento do estado do serviço. O servidor é configurado para logging customizado conforme ambiente, tratamento centralizado de erros e suporta shutdown gracioso ao receber sinais do sistema, garantindo estabilidade e controle operacional. A arquitetura modular permite fácil extensão e manutenção, integrando middleware, configuração e rotas de forma desacoplada, promovendo escalabilidade e robustez na entrega de serviços HTTP.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation API Server"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação",
          "API REST",
          "Backend"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter disponibilidade do servidor",
          "Garantir integridade das respostas de API",
          "Tratamento consistente de erros"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.x",
          "pino 8.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Middleware",
          "Modular API Design"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config - configurações e injeção de dependências",
          "routes - definição das rotas da API",
          "interface/middleware - middlewares para tratamento de erros",
          "src - código fonte principal"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração, rotas, middleware e inicialização do servidor"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, sem regras explícitas no código"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão, uso de pino-pretty para logs em dev"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline e JSDoc para funções públicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Centralized error handler middleware format"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Pino logger com níveis configuráveis por ambiente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Graceful shutdown para evitar perda de requisições"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "fastify",
          "pino",
          "reflect-metadata"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./routes/automation.routes.js",
          "./interface/middleware/error-handler.middleware.js",
          "./config/dependency-injection.js",
          "./config/environment.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "URI prefix /api/v1"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "port",
          "host",
          "nodeEnv",
          "logLevel"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-mouse.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador de mouse utilizando a biblioteca Nut.js para abstrair operações de controle do mouse em um ambiente TypeScript. Ele oferece funcionalidades para movimentação do cursor com suporte a movimentos instantâneos e suaves via interpolação linear, cliques simples e duplos, arrasto de elementos, rolagem vertical e obtenção da posição atual do cursor. O componente integra-se ao sistema por meio da injeção de dependência, respeitando configurações globais de velocidade do mouse e mapeando botões de mouse do domínio para a biblioteca externa. Seu comportamento é orientado a garantir precisão e fluidez nas interações de mouse, habilitando automações e testes que dependem de manipulação programática do cursor e eventos de mouse em interfaces gráficas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Control Automation",
          "Nut.js Mouse Adapter"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Interface",
          "Controle de Mouse",
          "Testes Automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Movimentação precisa do cursor",
          "Mapeamento correto dos botões do mouse",
          "Execução confiável de cliques e arrastos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.x",
          "Nut.js 2.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Nut.js API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Clean Architecture",
          "Dependency Injection",
          "Adapter Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - Serviços de aplicação",
          "domain/entities - Entidades do domínio",
          "config - Configurações globais",
          "adapters - Implementações concretas de interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para métodos e variáveis",
          "Enums em MAIÚSCULAS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Domínio desacoplado da infraestrutura via interfaces",
          "Dependências unidirecionais do domínio para aplicação e infraestrutura"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Uso obrigatório de async/await para operações assíncronas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão",
          "Quebra de linha em 80 caracteres"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para métodos públicos e privados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos módulos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de dependências externas via jest.mock"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Testes",
          "Deploy automático em staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Movimentos de mouse devem ocorrer dentro do tempo configurado pelo parâmetro duration"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre suavidade do movimento e tempo de execução"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Nut.js",
          "tsyringe"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../../application/services/mouse.service.js",
          "../../../domain/entities/mouse-action.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Correção do tipo incorreto 'promise' para 'Promise'"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Uso de delays em loops pode impactar performance em movimentos longos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipagem",
          "Tratamento de erros assíncronos",
          "Clareza na interpolação de movimentos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para métodos públicos e privados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do Nut.js para controle de mouse por sua robustez e suporte multiplataforma"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "environment.mouseSpeed"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-screen.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador de tela utilizando a biblioteca nut-js para captura e reconhecimento de imagens em regiões específicas da tela. Ele oferece funcionalidades para capturar screenshots completas ou parciais, localizar múltiplas ocorrências de um template de imagem com um nível configurável de confiança, e aguardar a aparição de um template dentro de um timeout definido. O adaptador traduz buffers de imagem em objetos compatíveis com nut-js, estimando dimensões quando necessário, e gerencia configurações de confiança e destaque visual para otimizar a precisão das operações. Seu comportamento é focado em fornecer uma interface assíncrona e robusta para manipulação e busca de imagens na tela, integrando-se a um sistema maior que depende de reconhecimento visual para automação ou monitoramento. A classe é injetável via tsyringe, facilitando a integração em arquiteturas baseadas em injeção de dependência e promovendo testabilidade e modularidade.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Screen Automation with nut-js Adapter"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de interface gráfica",
          "Reconhecimento de imagens",
          "Screen scraping"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão mínima de reconhecimento de imagem",
          "Timeouts para espera de elementos visuais",
          "Manter integridade dos buffers de imagem"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.x",
          "nut-js 2.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Adapter Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - serviços de aplicação",
          "domain/entities - entidades de domínio",
          "config - configurações do ambiente"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "sufixo Adapter para adaptadores"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio, aplicação e infraestrutura",
          "Interfaces definidas para serviços",
          "Dependências injetadas via tsyringe"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários",
          "mocks para dependências externas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de serviços externos e buffers de imagem"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Timeout configurável para espera de template (ex: 5000ms)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Precisão de reconhecimento vs tempo de busca"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Retorna array vazio quando não há match",
          "Lança erro para outras exceções"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento específico para ausência de match"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "nut-js",
          "tsyringe"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "application/services",
          "domain/entities",
          "config"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Uso temporário de any para imagens",
          "Estimativa de dimensões de imagem imprecisa"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível falha na detecção correta de dimensões para buffers não quadrados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Uso correto de tipos",
          "Clareza na injeção de dependências"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para métodos públicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários explicativos em português"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do nut-js para manipulação de tela",
          "Injeção de dependência via tsyringe"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Buffers para imagens",
          "Arrays de objetos MatchResult"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "screenConfidence"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/controllers/automation.controller.ts": {
    "summary": "O arquivo define a classe AutomationController, responsável por expor uma API REST para automação de interações com o mouse e captura/análise de tela, utilizando o framework Fastify. Ele implementa endpoints para movimentação, clique, arrasto e scroll do mouse, além de fornecer a posição atual do cursor e um stream contínuo via Server-Sent Events. Também oferece funcionalidades para encontrar padrões visuais na tela e capturar imagens, integrando serviços especializados para mouse e tela. O controlador gerencia validações via JSON Schema, tratamento assíncrono das requisições e logging estruturado, garantindo respostas padronizadas e suporte a operações em tempo real, habilitando automações robustas e monitoramento contínuo do estado do mouse e da tela.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation API",
          "Controle e monitoramento de mouse e tela para automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de UI",
          "Automação de testes",
          "Interação com hardware via software"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável com suporte a streaming em tempo real"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa de entrada via JSON Schema",
          "Respostas padronizadas com status de sucesso",
          "Manutenção da integridade do stream SSE"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.x",
          "tsyringe 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Nenhum serviço externo explícito, mas integra com serviços internos MouseService e ScreenService"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Controller",
          "Dependency Injection",
          "Clean Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio",
          "application/dto - objetos de transferência de dados",
          "config - configurações do sistema",
          "controllers - definição dos endpoints",
          "schemas - validação JSON Schema"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase (ex: AutomationController)",
          "Funções e métodos em camelCase",
          "Arquivos em kebab-case",
          "Constantes em PascalCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controller e serviços",
          "DTOs usados para comunicação entre camadas",
          "Schemas para validação de entrada e saída"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript/TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb e regras específicas para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de métodos e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipos explícitos para requests e responses"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos serviços e controllers"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)",
          "Given-When-Then para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para serviços MouseService e ScreenService usando Jest"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não implementado explicitamente no código analisado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável no escopo atual"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy",
          "X-Content-type-Options",
          "Cache-Control",
          "Connection"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações síncronas rápidas para comandos de mouse",
          "Streaming com intervalo configurável para posição do mouse"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência para comandos de mouse e streaming",
          "Uso eficiente de recursos no streaming SSE"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplas conexões SSE, porém sem controle explícito de limites"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não detalhado, mas utiliza respostas HTTP padrão e logging de erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logging estruturado com pino, níveis info, debug e error"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de erros no streaming para encerrar conexão e limpar recursos"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "MouseService",
          "ScreenService",
          "Fastify",
          "tsyringe",
          "pino"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com Fastify 4.x e TypeScript 4.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "application/services",
          "application/dto",
          "config",
          "schemas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de autenticação e autorização nos endpoints"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Potencial vazamento de recursos em streams SSE se conexões não forem fechadas corretamente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Streaming contínuo pode impactar performance sob alta carga"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de schemas, tratamento de erros, uso correto de injeção de dependência"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara via JSDoc para novos métodos e endpoints"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e informativos, uso de logs para rastreamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de Clean Architecture e uso de SSE para streaming em tempo real"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST com endpoints HTTP POST e GET"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não implementado explicitamente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON padronizado com propriedades success e data"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker e Kubernetes são prováveis, mas não especificados"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Configurações de ambiente via arquivo environment.js"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de manter conexões SSE abertas e estáveis"
        ]
      }
    ]
  },
  "src/interface/middleware/error-handler.middleware.ts": {
    "summary": "Este arquivo implementa um middleware de tratamento de erros para aplicações construídas com Fastify, focado em capturar, categorizar e responder adequadamente a diferentes tipos de erros que podem ocorrer durante o processamento de requisições HTTP. Ele define classes customizadas para erros de domínio, como NotFoundError, UnauthorizedError e LimitExceededError, facilitando a padronização das respostas de erro. O handler centraliza a lógica para identificar erros de validação (Zod e Fastify), erros de domínio, erros HTTP com status code específico e erros genéricos, garantindo respostas estruturadas e consistentes, além de realizar logging detalhado para facilitar o monitoramento e debugging, especialmente em ambiente de desenvolvimento.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fastify API Error Handling Middleware"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Backend API",
          "Error Handling",
          "HTTP",
          "Validation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Erros devem ser tratados e retornados com status HTTP apropriado",
          "Mensagens de erro devem ser claras e padronizadas",
          "Logs de erro devem conter contexto suficiente para debugging",
          "Não expor stack trace em ambiente de produção"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Middleware Pattern",
          "Custom Error Classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/errors - classes de erro customizadas",
          "src/handlers - middlewares e handlers globais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes PascalCase (DomainError, NotFoundError)",
          "Funções camelCase (errorHandler)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre definição de erros e middleware de tratamento",
          "Dependência unidirecional do handler para as classes de erro"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para classes e funções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit/errors",
          "tests/integration/handlers"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 90%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para FastifyRequest e FastifyReply"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "JWT (implícito no contexto Fastify)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Erros Unauthorized e Forbidden tratados explicitamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Stack trace oculto em produção"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Respostas de erro devem ser rápidas para não impactar UX"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência em tratamento de erros"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Middleware deve ser stateless e escalável"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "JSON com campos success, error, code e detalhes opcionais"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logging estruturado com contexto da requisição",
          "Stack trace somente em desenvolvimento"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Respostas padronizadas para facilitar tratamento no cliente"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "fastify",
          "zod"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Fastify >=4.x",
          "Zod >=3.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Manutenção do mapeamento de códigos HTTP"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência no tratamento de erros",
          "Cobertura de testes para todos os casos de erro"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para classes de erro e handler"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e explicativos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de classes customizadas para erros de domínio",
          "Centralização do tratamento de erros em middleware"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON padronizado com campos success, error, code e detalhes"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "Kubernetes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/middleware/validation.middleware.ts": {
    "summary": "Este arquivo implementa uma função middleware para validação de requisições HTTP em um servidor Fastify, utilizando schemas definidos com a biblioteca Zod. Seu propósito principal é garantir que o corpo da requisição (request.body) esteja conforme o schema esperado, promovendo a integridade dos dados antes do processamento posterior. Em caso de falha na validação, a função responde imediatamente com um status 400 e uma mensagem de erro padronizada, evitando que dados inválidos avancem na pipeline. Essa abordagem centraliza a validação, melhora a robustez da API e facilita a manutenção, integrando-se de forma transparente ao fluxo de requisições do Fastify.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "API Validation Middleware",
          "Validação de requisições HTTP para APIs Fastify"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Backend API",
          "Validação de dados",
          "Fastify",
          "Zod"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação estrita de dados de entrada",
          "Resposta imediata a dados inválidos com status 400"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.x",
          "Zod 3.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Middleware Pattern",
          "Layered Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/middleware - middlewares para validação e autenticação",
          "src/routes - definição de rotas",
          "src/schemas - definições de schemas Zod"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e classes",
          "suffix Middleware para middlewares"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Middleware isolado em módulo próprio",
          "Dependência unidirecional para schemas e Fastify"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript e Fastify"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/middleware - testes unitários para middlewares"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 90% cobertura para middlewares"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de FastifyRequest e FastifyReply"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Lint",
          "Test",
          "Build",
          "Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência",
          "Validação eficiente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "JSON com campos success, error e message"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Resposta imediata com status 400 para erros de validação"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "fastify",
          "zod"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação correta de schemas",
          "Tratamento adequado de erros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar funções middleware com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Zod para validação centralizada"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "application/json"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/routes/automation.routes.ts": {
    "summary": "Este arquivo define um conjunto de rotas assíncronas para um servidor Fastify, focado em automação e controle de teclado. Ele encapsula a criação e registro de rotas específicas por meio de controladores dedicados, promovendo modularidade e separação de responsabilidades. A funcionalidade principal é expor endpoints que permitem interações automatizadas e manipulação de eventos de teclado, integrando-se de forma transparente ao servidor principal e facilitando a extensão futura do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Server",
          "Serviço de automação e controle de dispositivos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação",
          "Controle de dispositivos",
          "Fastify",
          "Node.js"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Registro correto das rotas",
          "Disponibilidade das APIs de automação",
          "Segurança no acesso às rotas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Controller Pattern",
          "Plugin Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "interface/controllers - controladores de rotas e lógica de negócio",
          "routes - definição e registro de rotas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "suffix Controller para classes de controle"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre controladores e registro de rotas",
          "Dependência unidirecional dos módulos de rota para controladores"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para TypeScript e Fastify"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de funções e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com configuração no tsconfig.json"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários",
          "tests/integration para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para controladores e dependências externas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Testes",
          "Lint",
          "Deploy automático em staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "JWT"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso baseado em roles para rotas de automação"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Tokens JWT",
          "Dados de configuração de dispositivos"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy",
          "X-Content-Type-Options",
          "Strict-Transport-Security"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Criptografia TLS para comunicação",
          "Armazenamento seguro de tokens"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "< 200ms para endpoints principais"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade de resposta",
          "Baixa latência em rotas de automação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache em memória para dados estáticos de configuração"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade horizontal via múltiplas instâncias Fastify"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "JSON com campos code, message e details"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs estruturados com níveis info, warn, error"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Prometheus",
          "Grafana"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Retry automático em falhas temporárias",
          "Fallback para rotas alternativas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "fastify",
          "typescript",
          "automation.controller.js",
          "keyboard.controller.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Fastify >=4.0.0 <5.0.0",
          "TypeScript >=5.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "interface/controllers"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Documentação incompleta dos controladores",
          "Testes de integração limitados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível latência em registro assíncrono de rotas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Inicialização lenta em ambientes com muitos plugins"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migração para Fastify 4 concluída"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Cobertura de testes",
          "Segurança nas rotas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para todas as funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros",
          "Uso de PR templates"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do padrão Controller para modularização",
          "Uso do Fastify Plugin para registro de rotas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento via prefixo de rota (ex: /v1) - não presente neste arquivo"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Rate limiting configurável via plugins Fastify externos"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "Kubernetes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "PORT",
          "NODE_ENV",
          "JWT_SECRET"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação de memória para containers",
          "Necessidade de alta disponibilidade"
        ]
      }
    ]
  },
  "src/test-endpoint.ts": {
    "summary": "Este arquivo de código implementa uma suíte simples de testes automatizados para endpoints de uma API RESTful local que controla ações do mouse, como movimentação, clique e consulta de posição. O comportamento central consiste em enviar requisições HTTP POST e GET para endpoints específicos, manipulando dados JSON para simular interações do usuário com o mouse, incluindo movimento suave e duração parametrizada. O código também gerencia delays entre as chamadas para garantir a execução sequencial e captura erros para robustez, facilitando a validação funcional da API NutJS em ambiente de desenvolvimento local.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "NutJS Mouse Control API Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Controle de dispositivos de entrada",
          "APIs RESTful"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento",
          "Testes locais"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que comandos de mouse sejam executados com precisão",
          "Manter integridade das respostas da API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES2020"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework específico"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Local REST API NutJS Mouse Control"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Client-Server",
          "API Client Abstraction"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte",
          "tests/: testes automatizados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "const para funções assíncronas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Funções isoladas para cada endpoint",
          "Execução sequencial controlada"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline simples"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Nenhum type checking explícito"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Nenhum framework formal, testes manuais via script"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Funções de teste isoladas chamadas sequencialmente"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Sequência linear com delays para simular uso real"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Não utilizado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão de código obrigatória"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Execução de testes automatizados",
          "Linting"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "node script.js"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "node script.js"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npx eslint ."
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npx prettier --write ."
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método implementado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Nenhuma regra implementada"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-type: application/json"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Não especificado, mas delays indicam tolerância a latência"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Confiabilidade sobre velocidade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Projeto para ambiente local, sem escalabilidade"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Console.error com mensagem genérica"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Console.log para resultados e erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Try/catch para captura de erros, sem retry"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "API local NutJS mouse endpoints"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Node.js versão compatível com async/await"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Nenhum"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de testes automatizados formais"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência de API local disponível"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Delays fixos podem impactar tempo total de execução"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Clareza e legibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários simples inline"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Objetivo e direto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de async/await para controle assíncrono"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versão na URL (/v1/)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Localhost: http://localhost:3000"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Execução local Node.js"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhum"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de API local rodando"
        ]
      }
    ]
  },
  "tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto moderno que utiliza recursos avançados do ECMAScript 2022 e módulos ESNext, garantindo interoperabilidade com módulos CommonJS e suporte a decoradores experimentais. Ele configura um ambiente estrito de tipagem com verificações rigorosas para evitar erros comuns, além de habilitar geração de mapas de fonte e declarações de tipos para facilitar o desenvolvimento e manutenção. A estrutura de pastas é organizada para separar código fonte e saída compilada, excluindo testes e dependências externas, o que contribui para um build limpo e eficiente, integrando-se facilmente em pipelines de CI/CD e sistemas modulares maiores.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto TypeScript Moderno"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Configuração de build",
          "TypeScript"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir build limpo e sem erros",
          "Manter tipagem estrita para evitar bugs"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x",
          "ECMAScript 2022"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular ESNext",
          "Strict Typing",
          "Decorator Pattern (experimental)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src (código fonte)",
          "dist (build output)",
          "node_modules (dependências externas)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre src e dist",
          "Exclusão de testes do build"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "strict",
          "noImplicitAny",
          "strictNullChecks"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Exclusão de arquivos *.test.ts do build"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build limpo e geração de declarações de tipos",
          "Exclusão de testes e node_modules"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "tsc --watch"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "tsc"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Build eficiente e rápido",
          "Minimizar erros em tempo de compilação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "TypeScript compiler",
          "Node.js module resolution"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "target ES2022",
          "module ESNext"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Compatibilidade limitada com ambientes sem suporte a ES2022 e decoradores"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de tipagem estrita",
          "Conformidade com exclusões de build"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de strict typing e decoradores experimentais"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".eslintignore": {
    "summary": "Este arquivo de configuração define padrões e exclusões essenciais para o ambiente de desenvolvimento e build de um projeto Node.js. Ele especifica diretórios e arquivos que devem ser ignorados por ferramentas de linting, testes, cobertura e controle de versão, garantindo que artefatos gerados, logs e configurações locais não interfiram nos processos automatizados. A configuração contribui para a manutenção da qualidade do código, organização do projeto e eficiência do pipeline de CI/CD, ao delimitar claramente o escopo das operações de análise estática, testes e deploy.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto Node.js para backend com foco em API e automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Node.js",
          "API",
          "Automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter integridade dos arquivos de configuração",
          "Garantir exclusão correta de arquivos temporários"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript (Node.js 18)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Express 4.x",
          "PM2 5.x",
          "Jest 29.x",
          "ESLint 8.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Configuration",
          "Ignore Patterns"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules/: dependências externas",
          "dist/: arquivos compilados/build",
          "coverage/: relatórios de cobertura de testes",
          "logs/: arquivos de log",
          ".nyc_output/: dados de cobertura para nyc"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "*.js para arquivos JavaScript",
          "*.log para arquivos de log",
          "ecosystem.config.js para configuração PM2",
          "jest.config.js para configuração Jest",
          ".eslintrc.js para configuração ESLint"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte, configuração, logs e artefatos gerados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Configuração via .eslintrc.js"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "JavaScript sem tipagem estática explícita"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29.x"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ou arquivos *.test.js"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks via Jest e fixtures"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Lint",
          "Testes",
          "Build",
          "Deploy automatizado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs armazenados em /logs, arquivos *.log ignorados no versionamento"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "ESLint",
          "Jest",
          "PM2"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Conformidade com padrões de lint",
          "Cobertura de testes",
          "Manutenção da estrutura de pastas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação via JSDoc para funções e módulos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos, PRs detalhados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de ESLint e Jest para qualidade e testes",
          "Separação clara de arquivos ignorados"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "PM2",
          "Possível uso de Docker"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".gitignore": {
    "summary": "O arquivo analisado é um arquivo de configuração de exclusão para controle de versionamento, tipicamente um .gitignore, que define padrões de arquivos e diretórios a serem ignorados pelo sistema de versionamento Git. Seu comportamento principal é evitar que arquivos temporários, logs, diretórios de build, configurações locais e artefatos de desenvolvimento sejam incluídos no repositório, garantindo um ambiente limpo e consistente para o desenvolvimento colaborativo. Essa configuração contribui para a manutenção da integridade do código-fonte, reduzindo ruídos e conflitos causados por arquivos não relevantes ao código-fonte principal.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto Node.js com foco em desenvolvimento web"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software, ambiente Node.js, controle de versão Git"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento ativo"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter arquivos de configuração sensíveis fora do repositório",
          "Evitar versionamento de dependências e artefatos gerados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript/TypeScript (Node.js)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Não especificado no arquivo"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "Não especificado no arquivo"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Não especificado no arquivo"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm ou yarn (implícito pelo node_modules)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Não aplicável (arquivo de configuração)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules/ - dependências",
          "dist/ - build output",
          "coverage/ - relatórios de cobertura",
          ".vscode/, .idea/ - configurações IDE",
          ".prompts/, .logs/, .audios/ - diretórios específicos do projeto"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Uso de nomes padrão para arquivos e pastas ignoradas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "coverage/ - diretório de relatórios de cobertura"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install ou yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Arquivos .env e .env.local são ignorados para proteger dados sensíveis"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Evitar versionamento de node_modules e dist para otimizar performance do repositório"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Manter repositório leve para facilitar escalabilidade do desenvolvimento"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs são ignorados para evitar poluição do repositório"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "node_modules deve ser ignorado para evitar versionamento de dependências"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Risco de esquecer de versionar arquivos importantes se não configurado corretamente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Repositórios grandes podem ser lentos se node_modules não for ignorado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificar se arquivos temporários e sensíveis estão corretamente ignorados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros sobre exclusões específicas no .gitignore"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Decisão de ignorar arquivos de ambiente e diretórios de build para manter repositório limpo"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          ".env e .env.local são ignorados para proteger variáveis sensíveis"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Não aplicável"
        ]
      }
    ]
  },
  ".prettierignore": {
    "summary": "Este arquivo é um .gitignore configurado para um projeto Node.js, cujo objetivo principal é evitar o versionamento de arquivos e pastas gerados automaticamente durante o desenvolvimento, build e execução do projeto. Ele exclui diretórios comuns como node_modules, dist, coverage e logs, além de arquivos de configuração sensíveis como .env e seus variantes, garantindo que dados sensíveis e artefatos transitórios não sejam incluídos no repositório. Essa configuração contribui para a manutenção da integridade do código-fonte, melhora a performance do controle de versão e protege informações confidenciais, facilitando o onboarding e a colaboração entre desenvolvedores.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto Node.js para desenvolvimento web com foco em modularidade e segurança"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Node.js",
          "JavaScript",
          "Backend"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento",
          "Pré-produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não versionar arquivos sensíveis (.env)",
          "Manter integridade do código-fonte",
          "Evitar inclusão de dependências externas no repositório"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript",
          "Node.js 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "node_modules: dependências do projeto",
          "dist: arquivos compilados/build",
          "coverage: relatórios de testes",
          "logs: arquivos de log",
          ".vscode: configurações do editor"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          ".env files",
          "API keys",
          "Database credentials"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "node_modules"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          ".env",
          ".env.*"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/schemas/automation.schemas.ts": {
    "summary": "Este arquivo define múltiplos JSON Schemas para validação de objetos relacionados a interações de mouse e operações de captura e busca na tela, focando em ações como movimento, clique, arrasto e scroll do mouse, além de funcionalidades de reconhecimento e captura de regiões específicas da tela. Cada schema especifica propriedades detalhadas, tipos e restrições para garantir a integridade dos dados de entrada, como coordenadas, duração, suavidade e botões do mouse, além de parâmetros para reconhecimento visual com níveis de confiança e formatos de imagem. O comportamento central do código é fornecer uma estrutura rigorosa para validar comandos de automação de interface gráfica, assegurando que as operações sejam executadas com parâmetros corretos e dentro de limites definidos, facilitando a integração com sistemas de automação e testes visuais. A ausência de propriedades adicionais e a definição de valores padrão indicam um controle estrito sobre os dados, promovendo segurança e previsibilidade no uso das ações descritas. Este conjunto de schemas habilita a construção de fluxos automatizados confiáveis e parametrizáveis para manipulação de interfaces gráficas e análise visual, sendo essencial para sistemas que dependem de automação de UI e reconhecimento de padrões visuais.",
    "properties": [
      {
        "property": "mouseMoveJsonSchema",
        "subProperty": "x",
        "value": [
          "integer",
          "minimum: 0"
        ]
      },
      {
        "property": "mouseMoveJsonSchema",
        "subProperty": "y",
        "value": [
          "integer",
          "minimum: 0"
        ]
      },
      {
        "property": "mouseMoveJsonSchema",
        "subProperty": "smooth",
        "value": [
          "boolean",
          "default: true"
        ]
      },
      {
        "property": "mouseMoveJsonSchema",
        "subProperty": "duration",
        "value": [
          "integer",
          "minimum: 100",
          "maximum: 5000",
          "default: 1000"
        ]
      },
      {
        "property": "mouseClickJsonSchema",
        "subProperty": "x",
        "value": [
          "integer",
          "minimum: 0"
        ]
      },
      {
        "property": "mouseClickJsonSchema",
        "subProperty": "y",
        "value": [
          "integer",
          "minimum: 0"
        ]
      },
      {
        "property": "mouseClickJsonSchema",
        "subProperty": "button",
        "value": [
          "left",
          "right",
          "middle",
          "default: left"
        ]
      },
      {
        "property": "mouseClickJsonSchema",
        "subProperty": "doubleClick",
        "value": [
          "boolean",
          "default: false"
        ]
      },
      {
        "property": "mouseClickJsonSchema",
        "subProperty": "smooth",
        "value": [
          "boolean",
          "default: true"
        ]
      },
      {
        "property": "mouseClickJsonSchema",
        "subProperty": "duration",
        "value": [
          "integer",
          "minimum: 100",
          "maximum: 5000",
          "default: 1000"
        ]
      },
      {
        "property": "mouseDragJsonSchema",
        "subProperty": "from",
        "value": [
          "object with x and y integers >= 0"
        ]
      },
      {
        "property": "mouseDragJsonSchema",
        "subProperty": "to",
        "value": [
          "object with x and y integers >= 0"
        ]
      },
      {
        "property": "mouseDragJsonSchema",
        "subProperty": "duration",
        "value": [
          "integer",
          "minimum: 100",
          "maximum: 5000",
          "default: 1000"
        ]
      },
      {
        "property": "mouseDragJsonSchema",
        "subProperty": "smooth",
        "value": [
          "boolean",
          "default: true"
        ]
      },
      {
        "property": "mouseScrollJsonSchema",
        "subProperty": "direction",
        "value": [
          "up",
          "down"
        ]
      },
      {
        "property": "mouseScrollJsonSchema",
        "subProperty": "amount",
        "value": [
          "integer",
          "minimum: 1",
          "maximum: 10",
          "default: 3"
        ]
      },
      {
        "property": "mouseScrollJsonSchema",
        "subProperty": "smooth",
        "value": [
          "boolean",
          "default: true"
        ]
      },
      {
        "property": "mouseScrollJsonSchema",
        "subProperty": "duration",
        "value": [
          "integer",
          "minimum: 100",
          "maximum: 5000",
          "default: 1000"
        ]
      },
      {
        "property": "screenFindJsonSchema",
        "subProperty": "template",
        "value": [
          "string",
          "minLength: 1"
        ]
      },
      {
        "property": "screenFindJsonSchema",
        "subProperty": "confidence",
        "value": [
          "number",
          "minimum: 0",
          "maximum: 1",
          "default: 0.8"
        ]
      },
      {
        "property": "screenFindJsonSchema",
        "subProperty": "region",
        "value": [
          "object with x, y integers >= 0 and width, height integers >= 1"
        ]
      },
      {
        "property": "screenCaptureJsonSchema",
        "subProperty": "region",
        "value": [
          "object with x, y integers >= 0 and width, height integers >= 1"
        ]
      },
      {
        "property": "screenCaptureJsonSchema",
        "subProperty": "format",
        "value": [
          "png",
          "jpg",
          "default: png"
        ]
      }
    ]
  },
  "todo.txt": {
    "summary": "Este arquivo de código implementa funcionalidades relacionadas a OCR (Optical Character Recognition), cujo objetivo principal é extrair texto de imagens ou documentos digitalizados. O comportamento central envolve o processamento de imagens para identificar e converter caracteres visuais em dados textuais estruturados, possibilitando a automação de captura de informações. O código realiza transformações de dados que incluem pré-processamento de imagens, segmentação de texto, reconhecimento de caracteres e pós-processamento para melhorar a acurácia. Integra-se com sistemas maiores por meio de APIs ou módulos que consomem o texto extraído para alimentar fluxos de trabalho como indexação, análise ou validação documental. A capacidade habilitada para usuários é a automatização da extração de dados textuais, reduzindo erros manuais e aumentando a eficiência operacional em processos que dependem de documentos físicos ou imagens digitalizadas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "OCR Automation System"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Document Processing",
          "Optical Character Recognition",
          "Data Capture"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Accuracy thresholds for text extraction",
          "Data privacy compliance",
          "Non-modification of original images"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "Python 3.11"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Tesseract OCR 5.0",
          "OpenCV 4.7",
          "Flask 2.3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "PostgreSQL 15"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Cloud Storage API",
          "Authentication Service (OAuth2)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "pip"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Pipeline",
          "Modular"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/preprocessing - image cleaning",
          "/recognition - OCR logic",
          "/postprocessing - text correction",
          "/api - integration endpoints"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "snake_case for functions and variables",
          "PascalCase for classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Clear separation between image processing and text extraction modules",
          "API layer isolated from core OCR logic"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "PEP8"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "flake8 with max line length 88"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Black"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Google Docstrings"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "mypy strict"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Pytest 7.4"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit",
          "tests/integration"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">=85%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "pytest-mock",
          "fixtures for image inputs"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review mandatory",
          "CI checks passing"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Linting",
          "Unit tests",
          "Integration tests",
          "Build and deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "python -m venv venv && source venv/bin/activate && pip install -r requirements.txt"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "pip install -r requirements.txt"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "flask run --reload"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "pytest --cov=ocr_module tests/"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "docker build -t ocr-service ."
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "flake8 ocr_module/"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "black ocr_module/"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Role-based access control for API endpoints"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Extracted personal data must be encrypted at rest and in transit"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy",
          "X-Content-Type-Options",
          "Strict-Transport-Security"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "TLS 1.3 for data in transit",
          "AES-256 for data at rest"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "< 2 seconds per image for OCR processing"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Balance between speed and accuracy"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache processed images and extracted text for 24 hours"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Horizontal scaling of OCR workers",
          "Load balancing API requests"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "JSON with error code, message and details"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Structured logging with levels INFO, WARN, ERROR"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Prometheus",
          "Grafana"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Retry mechanism for transient failures",
          "Fallback to manual review queue"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Tesseract OCR",
          "OpenCV"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Tesseract >=5.0",
          "OpenCV >=4.5"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "ocr_core",
          "image_utils",
          "api_handlers"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Refactor legacy image preprocessing code",
          "Improve test coverage on edge cases"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "OCR accuracy drops on low-quality scans",
          "High memory usage on large batch processing"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Image preprocessing step is CPU intensive"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migrating from Tesseract 4 to 5"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Correctness of OCR logic",
          "Performance optimizations",
          "Security compliance"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comprehensive docstrings",
          "Architecture decision records"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Clear, concise comments",
          "Respectful and constructive PR discussions"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adopted pipeline pattern for modularity",
          "Use OAuth2 for API security"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "URI versioning (e.g., /api/v1/)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "application/json"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "1000 requests per minute per user"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev - dev.ocr.example.com",
          "staging - staging.ocr.example.com",
          "prod - ocr.example.com"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker containers orchestrated by Kubernetes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "OCR_API_KEY",
          "DATABASE_URL",
          "REDIS_URL"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limited GPU availability",
          "Max 4 CPU cores per pod"
        ]
      }
    ]
  },
  "tsconfig.prod.json": {
    "summary": "Este arquivo de configuração TypeScript (tsconfig.json) define as opções do compilador para um projeto, focando em otimizar a saída do build ao desabilitar source maps e remover comentários, garantindo um código final mais limpo e leve. Ele também especifica exclusões claras para evitar a compilação de arquivos de teste, diretórios de dependências e artefatos de build, o que contribui para um processo de build mais eficiente e organizado. Funcionalmente, o arquivo atua como um ponto central para controlar o comportamento do compilador TypeScript, assegurando que apenas o código relevante seja processado e que a saída seja adequada para ambientes de produção ou distribuição.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto TypeScript com configuração customizada para build otimizado"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Configuração de compilação",
          "TypeScript"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Build otimizado"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Excluir arquivos de teste do build",
          "Remover comentários para código limpo",
          "Não gerar source maps para produção"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Configuration Inheritance"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src - código fonte",
          "node_modules - dependências",
          "dist - build output",
          "tests - testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos .ts para código",
          "Arquivos .test.ts e .spec.ts para testes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Exclusão de testes e build artifacts do processo de compilação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript settings herdados do tsconfig base"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Arquivos de teste localizados em pastas e arquivos excluídos do build"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "tsc --watch"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "tsc"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Reduzir tamanho do bundle",
          "Evitar geração de source maps para produção"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "TypeScript Compiler",
          "Base tsconfig.json"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/config/mouse.config.ts": {
    "summary": "Este arquivo define uma configuração padrão para operações relacionadas ao mouse, centralizando parâmetros essenciais para controlar o comportamento de ações como movimentos e cliques. Ele extrai valores de variáveis de ambiente para permitir customização dinâmica, garantindo flexibilidade na duração mínima e máxima das ações, suavização do movimento, taxa de amostragem para interpolação e intervalos de streaming. A estrutura é imutável, promovendo segurança e previsibilidade no uso dessas configurações, que são fundamentais para módulos que dependem de interações precisas e controladas do mouse em aplicações que demandam alta responsividade e controle fino de input.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Interaction Controller",
          "Configuração e controle de operações do mouse"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "User Interface",
          "Input Handling",
          "Human-Computer Interaction"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production",
          "Stable Configuration"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "minDuration <= maxDuration",
          "defaultDuration dentro dos limites configurados",
          "sampleRate consistente com performance esperada"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Environment Variables (process.env)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Immutable Configuration Object"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - arquivos de configuração centralizados",
          "src/ - código fonte principal"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para constantes e tipos",
          "PascalCase para tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada em módulo próprio para reutilização e fácil manutenção"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "process.env"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Falta de validação explícita dos valores das variáveis de ambiente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de valores de configuração",
          "Imutabilidade e segurança do objeto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara das variáveis de ambiente e seus impactos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de configuração imutável para evitar efeitos colaterais"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Staging",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "MOUSE_MIN_DUR",
          "MOUSE_MAX_DUR",
          "MOUSE_DEFAULT_SMOOTH",
          "MOUSE_SAMPLE_RATE",
          "MOUSE_STREAM_INTERVAL",
          "MOUSE_DEFAULT_DURATION"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/integration/mouse-stream.test.ts": {
    "summary": "Este arquivo contém testes de integração para o endpoint de streaming da posição do mouse, implementado em um servidor Fastify com injeção de dependências via tsyringe. O foco principal é validar o comportamento do endpoint /mouse/position/stream, garantindo autenticação via API key, transmissão contínua e ordenada de eventos de posição do mouse, além de assegurar que o streaming pare corretamente ao fechar a conexão. Os testes simulam um adapter de mouse mockado para controlar as posições retornadas, verificam respostas HTTP para cenários de autenticação e monitoram a performance do streaming, assegurando que múltiplos eventos são enviados em tempo real. A abordagem garante robustez na integração do serviço de mouse com o controlador de automação, validando tanto regras de negócio quanto aspectos de performance e segurança.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Position Streaming Service",
          "Serviço de streaming de posição do mouse para automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação",
          "Controle remoto",
          "Mouse position tracking",
          "API streaming"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Testes de integração"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação obrigatória via API key",
          "Envio contínuo e ordenado de eventos de posição",
          "Encerramento correto do streaming ao fechar conexão"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.x",
          "tsyringe",
          "Jest 29"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "EventSource (SSE client)",
          "Environment configuration service"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Clean Architecture",
          "Controller-Service pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/interface/controllers - Controllers expõem rotas HTTP",
          "src/application/services - Lógica de negócio e serviços",
          "src/config - Configurações e variáveis de ambiente",
          "tests/integration - Testes de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para funções e variáveis",
          "suffix .controller.js para controllers",
          "suffix .service.js para serviços"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers dependem de serviços via DI",
          "Serviços isolam lógica de negócio",
          "Configuração centralizada em environment.js"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para imports e organização de código"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript",
          "Uso de tipos explícitos e interfaces"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta tests/integration",
          "Testes organizados por endpoint e funcionalidade"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)",
          "Uso de mocks para dependências externas",
          "Testes assíncronos com done callbacks"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de interfaces via jest.Mocked",
          "Injeção de dependências mockadas via tsyringe"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Testes automatizados",
          "Lint",
          "Deploy automático em staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "API Key via header x-api-key"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Rejeição de requisições sem ou com API key inválida"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "API key armazenada em environment variables, não exposta em logs"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Validação obrigatória do header x-api-key"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Recomendação de uso HTTPS para transmissão segura"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Envio de pelo menos 5 eventos por segundo no streaming"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na transmissão de eventos",
          "Uso eficiente de recursos do servidor"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável para streaming em tempo real"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Capacidade de suportar múltiplas conexões SSE simultâneas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "JSON com propriedades success: false e error: string"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs desabilitados em testes (logger: false)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fechamento correto da conexão em caso de erro"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Fastify",
          "tsyringe",
          "Jest",
          "EventSource"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Fastify 4.x",
          "Jest 29",
          "TypeScript 5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "src/interface/controllers",
          "src/application/services",
          "src/config"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Validação de autenticação",
          "Performance do streaming"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara de endpoints e contratos de dados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos",
          "Uso de inglês para termos técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de API key para autenticação",
          "Streaming via Server-Sent Events (SSE)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST com endpoint SSE para streaming"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito no endpoint"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON para eventos de posição",
          "JSON para erros"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development (localhost:3001)",
          "Production (configurável via environment)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Servidor Node.js com Fastify, possível containerização Docker"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "API_KEY para autenticação",
          "PORT para configuração do servidor"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de suporte a conexões SSE persistentes"
        ]
      }
    ]
  },
  "tests/setup.ts": {
    "summary": "Este arquivo configura o ambiente global para execução de testes automatizados em um projeto Node.js utilizando Jest. Ele define variáveis de ambiente específicas para o contexto de testes, como chaves de API e parâmetros relacionados à captura de eventos de mouse, garantindo que o ambiente de teste seja isolado e controlado. Além disso, implementa um mock global para o logger pino, evitando a emissão de logs durante os testes e configurando um timeout padrão para testes assíncronos, o que assegura estabilidade e previsibilidade na execução dos testes. O arquivo também prepara hooks globais para setup e teardown, facilitando a manutenção e extensão das configurações de teste. Essa configuração é essencial para garantir a confiabilidade, performance e isolamento dos testes automatizados no ciclo de desenvolvimento do software.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto Node.js para testes automatizados com Jest"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Test Automation",
          "Node.js"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Testes automatizados",
          "Configuração de ambiente"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Isolamento do ambiente de teste",
          "Supressão de logs em testes",
          "Timeout adequado para testes assíncronos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Jest 29.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "pino logger"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Test Setup Pattern",
          "Mocking Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações globais",
          "tests/ - arquivos de teste",
          "src/ - código fonte principal"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código de produção e testes",
          "Mocks isolados em configuração de testes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/ directory with unit and integration tests"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Minimum 80% coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Global mocks for external dependencies",
          "jest.mock for modules"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review mandatory",
          "Passing CI checks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Lint",
          "Test",
          "Build",
          "Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "API keys in environment variables must be masked"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Test timeout set to 10000ms"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Test execution speed and reliability"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logger pino mockado para suprimir logs durante testes"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "reflect-metadata",
          "jest",
          "pino"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Jest >=29.x",
          "TypeScript >=5.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Isolamento de mocks",
          "Conformidade com padrões de código"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara em JSDoc para funções e módulos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros",
          "Uso de PRs para discussões"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Jest para testes",
          "Mock global do logger para evitar poluição de logs"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "test",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "API_KEY",
          "MOUSE_MIN_DUR",
          "MOUSE_MAX_DUR",
          "MOUSE_SAMPLE_RATE",
          "MOUSE_STREAM_INTERVAL"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/unit/adapters/nutjs-mouse.adapter.test.ts": {
    "summary": "Este arquivo contém testes unitários para a classe NutJSMouseAdapter, que atua como um adaptador para controle de mouse utilizando a biblioteca nut-js. O foco principal está na implementação de movimentos suaves do cursor com interpolação linear, além de operações comuns como clique simples, duplo clique, arrastar e scroll. Os testes verificam comportamentos como movimento instantâneo versus interpolado, manipulação de movimentos unidimensionais, execução correta da sequência de ações para drag-and-drop, mapeamento correto dos botões do mouse e a inversão de valores para scroll up/down. A abordagem de testes utiliza mocks para isolar dependências externas e timers falsos para simular o tempo, garantindo que o comportamento assíncrono e progressivo do movimento seja validado. O arquivo assegura que o adaptador respeite configurações de velocidade, realize interpolação progressiva e mantenha a integridade das ações do mouse, integrando-se de forma confiável com a biblioteca nut-js e abstraindo detalhes técnicos para o domínio da aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "NutJSMouseAdapter",
          "Mouse control adapter for UI automation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "UI Automation",
          "Input device control",
          "Mouse actions"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Testing",
          "MVP"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Smooth movement interpolation must be accurate",
          "Button mapping must be consistent",
          "Drag sequence must follow press-move-release order"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "@nut-tree-fork/nut-js"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Adapter Pattern",
          "Dependency Injection"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/infrastructure/adapters/nutjs - adaptadores de hardware",
          "src/domain/entities - entidades de domínio",
          "src/config - configurações globais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e infraestrutura",
          "Dependências unidirecionais do domínio para infraestrutura"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any explícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão",
          "Quebra de linha em 80 caracteres"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e classes públicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript",
          "NoImplicitAny enabled"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pastas paralelas a src",
          "Testes unitários focados em métodos públicos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para métodos críticos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Uso de mocks para dependências externas",
          "Testes assíncronos com timers falsos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de módulos externos (@nut-tree-fork/nut-js)",
          "Mock de funções assíncronas",
          "Uso de jest.useFakeTimers para controle temporal"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Testes automatizados passando"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Test",
          "Lint",
          "Deploy automático em staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Movimentos interpolados devem respeitar duração configurada",
          "Operações instantâneas devem ser executadas imediatamente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Precisão do movimento sobre velocidade bruta"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Promises rejeitadas em caso de falha",
          "Erros propagados para camadas superiores"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          ""
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@nut-tree-fork/nut-js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "nut-js versão compatível com mocks"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "src/domain/entities/mouse-action.js",
          "src/config/mouse.config.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Necessidade de testes mais integrados com hardware real"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Limitações do mock para simular comportamento real do mouse"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Movimentos interpolados podem ser custosos em alta frequência"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          ""
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Clareza na interpolação de movimento",
          "Consistência no mapeamento de botões"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para métodos públicos do adaptador"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e em português",
          "Uso de termos técnicos em inglês para precisão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do nut-js para abstração de mouse",
          "Uso de interpolação linear para smooth movement"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          ""
        ]
      }
    ]
  },
  "tests/unit/services/mouse.service.test.ts": {
    "summary": "Este arquivo contém testes unitários para o MouseService, focando em validar funcionalidades relacionadas ao controle do mouse, como movimentos suaves (smooth), duração (duration), cliques, arrastos (drag), scroll e obtenção da posição atual. O código assegura que as operações respeitam limites de coordenadas da tela, que os métodos do adapter são chamados corretamente com parâmetros esperados e que comportamentos condicionais, como movimentação prévia antes do clique ou divisão do scroll em múltiplos passos, funcionam conforme especificado. Através de mocks e simulações de tempo, o teste garante robustez e confiabilidade das interações do serviço com o hardware virtualizado, promovendo uma interface consistente para manipulação do mouse em um ambiente controlado e testável.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Mouse Control Automation Service",
          "Serviço para automação e controle programático do mouse"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de interface",
          "Controle de dispositivos de entrada",
          "Mouse actions"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP",
          "Testes unitários implementados para funcionalidades principais"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa das coordenadas dentro dos limites da tela",
          "Execução sequencial correta de movimentos e cliques",
          "Divisão correta do scroll para smooth scrolling"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Jest 29",
          "@nut-tree-fork/nut-js"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "@nut-tree-fork/nut-js (screen API)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Clean Architecture",
          "Dependency Injection via adapter pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/services - lógica de aplicação",
          "src/domain/entities - entidades de domínio",
          "tests - testes unitários"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para funções e variáveis",
          "suffix Service para serviços"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e aplicação",
          "Uso de interfaces para abstração do adapter"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any exceto em mocks específicos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de funções e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript",
          "Uso de tipos explícitos e interfaces"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pastas paralelas ao código fonte",
          "Uso de describe e it para organização"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura completa das funções públicas do MouseService"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Uso de mocks para dependências externas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock do adapter IMouseAdapter",
          "Mock do módulo screen do nut-js"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Testes passando"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Execução de testes unitários",
          "Linting",
          "Build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Movimentos e cliques devem ser executados dentro da duração especificada",
          "Scroll smooth dividido em múltiplos passos para fluidez"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre fluidez do movimento e uso eficiente de recursos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados com mensagens claras e específicas sobre coordenadas inválidas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Rejeição de operações com coordenadas inválidas para evitar efeitos colaterais"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@nut-tree-fork/nut-js",
          "Jest"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript 5.0",
          "Jest 29"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "application/services",
          "domain/entities"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Cobertura de testes pode ser expandida para casos extremos e integração"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Nenhum problema crítico identificado nos testes atuais"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Scroll smooth pode gerar múltiplas chamadas, impactando performance em dispositivos limitados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          ""
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de mocks",
          "Cobertura de testes",
          "Clareza nas mensagens de erro"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para métodos públicos e regras de negócio"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e em português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do adapter pattern para abstração do hardware",
          "Validação rigorosa de coordenadas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Métodos síncronos e assíncronos para controle do mouse"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Promises resolvidas ou rejeitadas com erros específicos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Node.js environment"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          ""
        ]
      }
    ]
  },
  ".eslintrc.cjs": {
    "summary": "Este arquivo configura o ESLint para um projeto TypeScript moderno, definindo regras rigorosas de linting que garantem a qualidade e a consistência do código. Ele utiliza o parser '@typescript-eslint/parser' para interpretar sintaxe TypeScript avançada e integra plugins recomendados para TypeScript e Prettier, assegurando conformidade com padrões de estilo e melhores práticas. As regras aplicadas previnem erros comuns como uso incorreto de async/await, variáveis não utilizadas e tipos explícitos 'any', promovendo código mais seguro, legível e sustentável em ambientes de desenvolvimento colaborativos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Configuração ESLint para projeto TypeScript com foco em qualidade e padronização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "TypeScript",
          "Linting",
          "Qualidade de código"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir código livre de erros comuns de async/await",
          "Evitar uso de tipos 'any' explícitos",
          "Prevenir variáveis não utilizadas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Configuração declarativa",
          "Plugin-based architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Arquivo raiz de configuração ESLint para controle centralizado de regras"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Uso de kebab-case para arquivos de configuração",
          "Prefixos '@typescript-eslint' para regras específicas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre regras ESLint e código fonte do projeto"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "ESLint Recommended",
          "Prettier"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "no-async-promise-executor: error",
          "no-await-in-loop: warn",
          "@typescript-eslint/no-explicit-any: error",
          "@typescript-eslint/no-floating-promises: error",
          "@typescript-eslint/await-thenable: error",
          "@typescript-eslint/no-unused-vars: error"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier integration via plugin:prettier/recommended"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript strict mode via tsconfig.json"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "eslint . --ext .ts,.tsx"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "prettier --write ."
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@typescript-eslint/parser",
          "@typescript-eslint/eslint-plugin",
          "eslint",
          "prettier",
          "eslint-plugin-prettier"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com ECMAScript 2022",
          "TypeScript >=4.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Conformidade com regras ESLint",
          "Evitar uso de any",
          "Tratamento correto de async/await"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos",
          "Uso de termos técnicos em inglês para regras"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de regras estritas para async/await e tipos explícitos para garantir qualidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/clipboard-request.dto.ts": {
    "summary": "Este arquivo define Data Transfer Objects (DTOs) para operações relacionadas ao clipboard, utilizando a biblioteca Zod para validação rigorosa dos dados de entrada. O principal foco é garantir a integridade e conformidade dos dados para operações de copiar, colar e limpar o conteúdo do clipboard, com validações específicas como limite de tamanho para o conteúdo copiado (máximo de 1 MB). O código é estruturado para suportar requisições REST, onde as operações de paste e clear não requerem payload, enquanto a operação de copy valida o conteúdo textual enviado. Essa abordagem assegura robustez e segurança na manipulação do clipboard, facilitando a integração com outras partes do sistema que dependem dessas operações, além de promover a manutenção e escalabilidade do código por meio do uso de schemas fortemente tipados e reutilizáveis.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Clipboard Operations API",
          "Validação e manipulação segura de dados para operações de clipboard"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Sistemas de integração e automação",
          "Clipboard management",
          "Data validation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Conteúdo copiado não pode estar vazio",
          "Conteúdo copiado não pode exceder 1 MB"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Zod 3.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "DTO",
          "Schema Validation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/dtos - Contém definições de DTOs e schemas de validação",
          "src/schemas - Local para schemas Zod"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para tipos e schemas",
          "Sufixo 'Schema' para objetos de validação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre DTOs e lógica de negócio",
          "Schemas isolados para cada operação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos arquivos de DTO"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 90%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para simular payloads de requisição"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Conteúdo do clipboard tratado com limite de tamanho para evitar abuso"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Validação eficiente para evitar overhead em payloads grandes"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Mensagens de erro claras via Zod (ex: 'Content cannot be empty', 'Content size exceeds maximum of 1 MB')"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "zod",
          "Node.js Buffer"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Zod 3.x compatível com TypeScript 5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Schemas vazios para paste e clear podem permitir chamadas sem payload, dependendo da implementação backend"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação correta dos schemas",
          "Mensagens de erro claras",
          "Consistência de tipagem"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para todos os schemas e tipos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Zod para validação declarativa",
          "Limite de 1 MB para conteúdo do clipboard"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/application/dto/keyboard-request.dto.ts": {
    "summary": "Este arquivo define Data Transfer Objects (DTOs) para operações relacionadas a teclado, utilizando a biblioteca Zod para validação rigorosa dos dados de entrada. Ele oferece schemas específicos para digitação de texto com controle de timing, pressionamento de teclas individuais e combinações de teclas, garantindo integridade e conformidade com regras de negócio como limites de tamanho, tipos e valores permitidos. O código foca em validar entradas para ações de teclado, assegurando que apenas teclas suportadas e formatos corretos sejam aceitos, o que é essencial para automação, testes ou simulação de eventos de teclado em sistemas maiores. A abordagem modular e tipada facilita a integração com outras partes do sistema, promovendo segurança e robustez na manipulação de eventos de teclado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Keyboard Operations Validation Module"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes, simulação de eventos de teclado, validação de entrada"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Texto não pode estar vazio ou conter apenas caracteres de controle",
          "Teclas pressionadas devem estar na lista suportada",
          "Combinações de teclas limitadas a 5 e com teclas válidas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Zod 3.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "DTO",
          "Schema Validation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/dtos - Contém definições de DTOs e schemas de validação para entrada de dados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para tipos e schemas",
          "prefixo 'keyboard' para schemas relacionados a teclado"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo isolado para validação de dados de teclado, sem dependências internas além do Zod"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit/dtos - testes unitários para validação dos schemas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 90% para DTOs"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para entradas válidas e inválidas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (módulo de validação local)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Texto digitado pode conter dados sensíveis, sanitização parcial aplicada"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Validação deve ser rápida para uso em tempo real"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e baixa latência"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalável para múltiplas validações simultâneas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros padronizados via mensagens do Zod"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementado neste módulo"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Validação falha impede processamento subsequente"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Zod"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Zod >=3.0.0 <4.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Manutenção da lista de teclas suportadas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Limitação para teclas não listadas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Estável"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação correta e mensagens de erro claras"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para todos os schemas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários técnicos e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do Zod para validação declarativa"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável (módulo interno)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Erros via exceções Zod"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev, staging, prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Nenhuma específica"
        ]
      }
    ]
  },
  "src/application/services/clipboard.service.ts": {
    "summary": "O arquivo implementa um serviço de automação para manipulação da área de transferência (clipboard) em aplicações TypeScript, fornecendo operações assíncronas para copiar, colar e limpar conteúdo. Ele valida o tamanho do conteúdo a ser copiado para garantir que não ultrapasse 1 MB, utiliza a biblioteca clipboardy para interação com o sistema operacional e retorna resultados padronizados com sucesso ou erro, facilitando a integração com outros módulos. O serviço é projetado para ser injetável via tsyringe, promovendo desacoplamento e testabilidade, e trata erros de forma robusta para garantir confiabilidade nas operações de clipboard.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Clipboard Automation Service",
          "Serviço de automação para manipulação da área de transferência"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação",
          "Clipboard Management",
          "Integração com sistema operacional"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Conteúdo copiado não pode exceder 1 MB",
          "Operações devem retornar resultados padronizados",
          "Falhas devem ser tratadas e reportadas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "clipboardy 3.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Dependency Injection",
          "Interface Segregation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/interfaces - contratos de serviços",
          "domain/entities - entidades de domínio",
          "services - implementação de serviços de automação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes PascalCase",
          "Métodos camelCase",
          "Interfaces prefixadas com I"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre domínio e infraestrutura",
          "Serviços dependem de interfaces do domínio"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit/services",
          "tests/integration"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% cobertura"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de clipboardy com jest.mock"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Conteúdo do clipboard tratado com cuidado para evitar vazamento"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações assíncronas rápidas, idealmente < 100ms"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência, uso moderado de memória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Serviço local, escalabilidade depende do host da aplicação"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Objeto com success boolean e error string ou data"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs de erro devem ser capturados externamente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Retorno de erro estruturado para tratamento pelo consumidor"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "clipboardy",
          "tsyringe"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "clipboardy >=3.0.0",
          "tsyringe >=4.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../domain/interfaces",
          "../../domain/entities"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Limitação fixa de 1MB pode ser inflexível para alguns casos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "clipboardy pode apresentar inconsistências em alguns sistemas operacionais"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Conformidade com padrões de injeção de dependência",
          "Clareza e documentação"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para todos os métodos públicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos, em português"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de tsyringe para DI",
          "Limite de 1MB para conteúdo clipboard"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objeto JSON com success, data ou error"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "Serverless"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência do suporte do sistema operacional para clipboard"
        ]
      }
    ]
  },
  "src/application/services/keyboard.service.ts": {
    "summary": "Este arquivo implementa um serviço de automação de teclado que permite a digitação programada de texto com controle flexível de timing, suportando modos instantâneo, por caractere com delay e por tempo total distribuído. Ele abstrai a interação com o hardware via um adaptador de teclado, garantindo a sanitização do texto para evitar caracteres de controle perigosos e validações rigorosas de tamanho e parâmetros de tempo. O serviço também oferece funcionalidades para pressionar teclas isoladas e executar combinações de teclas, com tratamento robusto de erros e retorno padronizado de resultados, facilitando sua integração em sistemas maiores de automação e testes automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Keyboard Automation Service",
          "Serviço de automação de teclado com controle de timing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Automação de interface",
          "Input simulation",
          "Keyboard control"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Texto digitado não pode conter caracteres de controle perigosos",
          "Limite máximo de 10.000 caracteres para digitação",
          "Delay máximo permitido de 300.000ms (5 minutos)",
          "Combinação de teclas limitada a 5 teclas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.x (Dependency Injection)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "IKeyboardAdapter (interface para hardware ou camada de input)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Strategy Pattern",
          "Dependency Injection",
          "Clean Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "domain/ - interfaces e entidades do domínio",
          "application/ - serviços e lógica de aplicação",
          "infrastructure/ - implementações concretas e adaptadores",
          "interfaces/ - definições de contratos e tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I' (ex: IKeyboardAdapter)",
          "Classes em PascalCase",
          "Métodos em camelCase",
          "Arquivos com extensão .ts e nomes descritivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Domínio isolado de infraestrutura",
          "Serviços dependem de interfaces, não de implementações concretas",
          "Injeção de dependência para desacoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "TypeScript ESLint Recommended",
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "@typescript-eslint rules configuradas para evitar any",
          "Regras para async/await consistentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para métodos públicos e interfaces"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript (strict mode habilitado)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos serviços",
          "Testes unitários para estratégias e serviço principal"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para IKeyboardAdapter usando jest.mock ou ts-mockito"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy automático em staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (serviço local)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Texto digitado pode conter dados sensíveis, sanitização aplicada para evitar caracteres de controle"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações instantâneas para modo instant",
          "Delays configuráveis para modos perChar e total"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre velocidade e simulação realista de digitação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte para textos até 10.000 caracteres, processamento em batches para performance"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Retorno padrão com success booleano e mensagem de erro em string"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementado no código fornecido"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de erros com captura e retorno estruturado, sem retry automático"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "IKeyboardAdapter",
          "tsyringe"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Timing value máximo de 300000ms",
          "Limite máximo de 10000 caracteres"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "domain/interfaces",
          "domain/entities"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Falta de logging detalhado",
          "Sanitização pode ser insuficiente para todos os casos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível lentidão em textos muito longos com delays altos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Uso de await sequencial em loops pode impactar performance"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de parâmetros",
          "Tratamento de erros",
          "Uso correto de async/await"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para métodos públicos e interfaces"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha do Strategy Pattern para flexibilidade de digitação"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável (serviço interno)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objeto CommandResult com success, data ou error"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "Kubernetes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de acesso a hardware ou camada de input para IKeyboardAdapter"
        ]
      }
    ]
  },
  "src/config/keyboard.config.ts": {
    "summary": "Este arquivo define configurações imutáveis para funcionalidades de teclado, permitindo a personalização via variáveis de ambiente para parâmetros como modo de digitação, tamanho máximo de texto, delays por caractere e tamanho de lote para processamento. Inclui uma função de validação que assegura que os valores configurados estejam dentro de limites seguros e aceitáveis, prevenindo erros de configuração que possam impactar a performance ou comportamento do sistema. O código integra-se a um sistema maior que manipula entrada de texto, habilitando controle preciso sobre o comportamento do teclado virtual ou automatizado, com suporte a logs detalhados para depuração, garantindo robustez e flexibilidade operacional.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Keyboard Automation Configurations",
          "Configurações para controle e parametrização de funcionalidades de teclado"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de entrada de texto",
          "Keyboard input automation",
          "Configuração de delays e modos de digitação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "maxTextLength deve estar entre 1 e 100000",
          "defaultDelayPerChar deve ser não-negativo",
          "maxDelay deve estar entre 0 e 3600000 ms",
          "batchSize deve estar entre 1 e 1000",
          "defaultMode deve ser um dos: instant, perChar, total"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "dotenv 16.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Environment variables via dotenv"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Immutable Configuration Object",
          "Defensive Programming"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - arquivos de configuração",
          "src/ - código fonte principal",
          "tests/ - testes unitários e de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para constantes e funções",
          "snake_case para variáveis de ambiente",
          "PascalCase para tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configurações isoladas em módulo próprio",
          "Validação separada da definição de constantes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para TypeScript e import/order"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e constantes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/config/ para testes de configuração e validação"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 90%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de variáveis de ambiente via jest"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Lint, Test, Build e Deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install && cp .env.example .env"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Variáveis de ambiente devem ser protegidas"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Delays configuráveis para otimização de performance"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Balancear velocidade de digitação e uso de recursos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Configurações permitem ajuste para diferentes cargas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados com mensagens claras para configuração inválida"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Debug mode habilita logs detalhados"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Falha na validação impede execução para evitar comportamento incorreto"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "dotenv"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "dotenv >=16.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Validação poderia ser mais robusta para tipos inválidos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Nenhum tratamento para valores NaN em parseInt"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Configurações incorretas podem impactar performance de digitação"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Estável, sem migrações em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de limites e tratamento de erros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para variáveis de ambiente e limites"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de configuração imutável para segurança e previsibilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev, staging, prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "KEYBOARD_DEFAULT_MODE",
          "KEYBOARD_MAX_TEXT_LENGTH",
          "KEYBOARD_DEFAULT_DELAY_PER_CHAR",
          "KEYBOARD_MAX_DELAY",
          "KEYBOARD_BATCH_SIZE",
          "KEYBOARD_DEBUG"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limite máximo de delay e tamanho de lote para evitar sobrecarga"
        ]
      }
    ]
  },
  "src/domain/entities/command-result.ts": {
    "summary": "Este arquivo define uma interface TypeScript chamada CommandResult, que padroniza o formato de resposta para a execução de comandos em serviços de automação. Seu propósito principal é encapsular o resultado de operações, indicando sucesso ou falha, e fornecendo dados ou mensagens de erro conforme apropriado. Essa estrutura simples e genérica facilita a interoperabilidade entre módulos, garantindo um contrato claro para o tratamento de respostas e erros em fluxos automatizados, promovendo consistência e robustez na comunicação entre componentes do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Serviços de Automação - Padronização de Resultados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação",
          "Serviços Backend",
          "Execução de Comandos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir resposta consistente para sucesso e falha",
          "Não perder mensagens de erro",
          "Manter integridade dos dados retornados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "DTO",
          "Interface Segregation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Interfaces definidas em /src/interfaces para padronização de contratos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I' ou nome descritivo (ex: CommandResult)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulos independentes comunicando via interfaces padronizadas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em /tests/unit e /tests/integration"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks com Jest e fixtures para dados simulados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Objeto com propriedade 'success' boolean, 'data' opcional e 'error' string opcional"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Cobertura de testes",
          "Clareza na documentação"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para todas as interfaces e funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros, foco em comportamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de interfaces para padronizar respostas entre serviços"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON com propriedades success, data e error"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/domain/interfaces/automation-service.interface.ts": {
    "summary": "Este arquivo define uma interface base para serviços de automação, estabelecendo um contrato comum para todos os serviços que executam comandos automatizados dentro do sistema. Embora a interface não especifique métodos concretos, ela funciona como uma marcação para padronizar e identificar serviços de automação, facilitando a integração e extensão futura. Essa abordagem modular permite que diferentes implementações especializadas possam ser desenvolvidas mantendo uma estrutura consistente, promovendo escalabilidade e manutenção simplificada no contexto de automação de processos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automation Core",
          "Serviços de automação para execução de comandos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de processos",
          "Execução de comandos automatizados",
          "CommandResult"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Serviços devem implementar contratos de automação",
          "Execução de comandos deve ser rastreável via CommandResult"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework específico declarado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Interface",
          "Marker Interface"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "entities/: entidades de domínio",
          "services/: serviços de automação e implementações",
          "interfaces/: definições de contratos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Interfaces prefixadas com 'I'",
          "Classes e arquivos em camelCase ou PascalCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre entidades, interfaces e implementações",
          "Dependências unidirecionais para evitar acoplamento circular"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "TypeScript Standard Style"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários",
          "tests/integration para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para dependências externas e serviços"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável diretamente neste módulo"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Definidas em serviços específicos"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Não manipula dados sensíveis diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Definidos em implementações específicas"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Eficiência na execução de comandos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não definido neste nível"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Interface permite múltiplas implementações escaláveis"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Definido em implementações concretas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não definido na interface"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Responsabilidade das implementações específicas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "entities/command-result.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "entities",
          "services"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Interface muito genérica pode levar a implementações inconsistentes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Falta de métodos definidos pode dificultar padronização"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência na implementação das interfaces",
          "Aderência a contratos e padrões"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para cada serviço implementado"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Marker Interface para padronização de serviços de automação"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Definidos em implementações específicas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não definido neste nível"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "API_URL"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações de recursos dependem do ambiente de execução"
        ]
      }
    ]
  },
  "src/infrastructure/adapters/nutjs/nutjs-keyboard.adapter.ts": {
    "summary": "Este arquivo implementa um adaptador de teclado utilizando a biblioteca NutJS, fornecendo uma interface abstrata para operações de teclado que incluem digitação de texto, pressionamento e liberação de teclas individuais, além de combinações de teclas. O adaptador encapsula a complexidade da biblioteca NutJS, mapeando strings representativas de teclas para constantes específicas, garantindo suporte a teclas comuns e combinações como Ctrl+C e Cmd+V. Ele também trata erros de forma robusta, lançando exceções detalhadas em caso de falhas, e oferece uma função de delay para pausas controladas, facilitando a integração com sistemas que necessitam de automação de entrada via teclado. Essa implementação é injetável via tsyringe, permitindo fácil integração em arquiteturas baseadas em injeção de dependência e promovendo desacoplamento e testabilidade.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Keyboard Automation Adapter",
          "Automação de entrada via teclado"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Automação de UI",
          "Robotic Process Automation (RPA)"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Suporte a teclas padrão",
          "Tratamento robusto de erros",
          "Execução assíncrona confiável"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "tsyringe 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "@nut-tree-fork/nut-js"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Adapter",
          "Dependency Injection"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/application/services - serviços de domínio",
          "src/infrastructure/adapters - adaptadores de integração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes",
          "camelCase para métodos e variáveis",
          "snake-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre aplicação e infraestrutura",
          "Interfaces definem contratos entre camadas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para métodos públicos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários",
          "mocks para simulação de dependências"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de biblioteca NutJS para isolamento"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Test",
          "Lint",
          "Deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar latência em operações de teclado",
          "Manter baixo uso de CPU"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Exceções lançadas com mensagens detalhadas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de erros com throw para controle externo"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@nut-tree-fork/nut-js",
          "tsyringe"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../../application/services/keyboard.service.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Cobertura de testes",
          "Clareza na abstração"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para métodos públicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Adapter para desacoplamento",
          "Injeção de dependência para testabilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/interface/controllers/keyboard.controller.ts": {
    "summary": "Este arquivo implementa um controller RESTful para operações de automação relacionadas a teclado e clipboard, permitindo a interação programática com entrada de texto, pressionamento de teclas, combinações de teclas e manipulação da área de transferência. Utilizando Fastify como framework HTTP e injeção de dependências via tsyringe, o controller expõe endpoints que recebem requisições validadas por schemas JSON, delegando a execução das ações para serviços especializados. O comportamento central envolve receber comandos estruturados, executar ações assíncronas nos serviços de teclado e clipboard, e retornar respostas padronizadas com informações sobre o sucesso da operação, dados relevantes e mensagens de erro, garantindo robustez com tratamento de exceções e logging detalhado. Essa arquitetura modular e orientada a serviços facilita a integração com sistemas maiores que demandem automação de entrada e manipulação de clipboard, promovendo reutilização, testabilidade e manutenção simplificada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Keyboard and Clipboard Automation API"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automation",
          "Input Control",
          "Clipboard Management",
          "REST API"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Input commands must be validated before execution",
          "Clipboard operations must not corrupt system clipboard state",
          "Keyboard actions must be executed in correct sequence and timing"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.x",
          "tsyringe 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Controller Pattern",
          "Dependency Injection",
          "Middleware Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "application/services - lógica de negócio",
          "application/dto - objetos de transferência de dados e validação",
          "controllers - definição de rotas e manipulação de requisições",
          "schemas - definições JSON para validação e documentação",
          "middleware - funções intermediárias para validação e tratamento"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase",
          "Métodos e variáveis em camelCase",
          "Arquivos com extensão .ts ou .js seguindo o nome da classe ou funcionalidade",
          "Schemas com sufixo JsonSchema"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Controllers dependem de serviços via injeção",
          "DTOs e schemas isolam validação e tipagem",
          "Middleware desacopla validação da lógica principal"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript/TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, incluindo regras de segurança e estilo"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de classes e métodos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript with explicit typing on DTOs and service interfaces"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Tests located in __tests__ folders adjacent to source files"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Minimum 80% coverage on services and controllers"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock services and external dependencies using Jest mocks and fixtures"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review mandatory, automated tests passing"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Linting, Testing, Build, Deploy stages"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não implementado explicitamente no controller"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não implementado, recomendação para controle de acesso"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Conteúdo do clipboard e comandos de teclado devem ser tratados com cuidado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações devem responder em tempo adequado para APIs REST, idealmente < 200ms"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e confiabilidade das operações de teclado e clipboard"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade horizontal via instâncias Fastify"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Resposta JSON com campos success:boolean, data:object|null, error:string|null"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs estruturados via fastify.log com níveis info e error"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento genérico de exceções com resposta 500 e log de erro"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "KeyboardService",
          "ClipboardService",
          "Fastify",
          "tsyringe"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Fastify 4.x",
          "tsyringe 4.x",
          "TypeScript 5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "application/services",
          "application/dto",
          "controllers",
          "middleware",
          "schemas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de autenticação e autorização nos endpoints"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível exposição de operações sensíveis sem controle de acesso"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Operações síncronas de I/O podem impactar latência"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de entrada, tratamento de erros, logging, segurança"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara via JSDoc e schemas JSON"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e informativos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de DI para desacoplamento, Fastify para performance, validação via middleware"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento via URL (/api/v1/)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON com estrutura padrão { success, data, error }"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não implementado no controller"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker container"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Configurações gerais via environment.js, sem variáveis sensíveis explícitas"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de acesso ao sistema para manipulação de teclado e clipboard"
        ]
      }
    ]
  },
  "src/interface/schemas/clipboard.schemas.ts": {
    "summary": "Este arquivo define JSON Schemas compatíveis com JSON Schema Draft 7 para validação de requisições relacionadas a operações de clipboard em um servidor Fastify. Ele especifica um schema para a operação de copiar conteúdo para o clipboard, exigindo uma string não vazia com limite implícito de tamanho, e schemas vazios para operações de colar e limpar o clipboard, garantindo que não sejam aceitas propriedades adicionais. O foco principal é garantir a integridade e conformidade dos dados recebidos nas requisições HTTP, facilitando a validação automática e segura dos payloads, evitando erros e comportamentos inesperados na manipulação do clipboard via API.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Clipboard API Validation Module"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "API Development",
          "Clipboard Management",
          "Fastify Framework"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Payloads must conform to JSON Schema Draft 7",
          "Clipboard content must be a non-empty string",
          "No additional properties allowed in requests"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Schema Validation Pattern",
          "Modular API Design"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "schemas/ - Contém definições de JSON Schema para validação de endpoints"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e propriedades",
          "PascalCase para tipos e interfaces",
          "sufixo JsonSchema para schemas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Schemas isolados por funcionalidade para fácil manutenção e reuso"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/schemas/ - testes unitários para validação de schemas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 90% cobertura para schemas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de payloads JSON para validação"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Lint",
          "Test",
          "Build",
          "Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não definido no schema, esperado controle externo"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não definido no schema, esperado controle externo"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Clipboard content pode conter dados sensíveis, deve ser tratado com cuidado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Esperados via configuração do servidor Fastify"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não especificado no schema"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Baixa latência esperada para operações de clipboard"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Validação rápida e eficiente para evitar overhead"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável para schemas de validação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Schemas leves e reutilizáveis suportam escalabilidade"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros de validação JSON Schema padrão do Fastify"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs de erros gerados pelo Fastify"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado no schema"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Rejeição de requisições inválidas com mensagens claras"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "json-schema",
          "fastify"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "JSON Schema Draft 7 compatível"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "schemas/clipboardSchemas.ts"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Validação de tamanho máximo do conteúdo não implementada no schema"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível aceitação de payloads maiores que 1MB"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum identificado no escopo do schema"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Estável, sem migrações em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Conformidade com JSON Schema",
          "Clareza e simplicidade dos schemas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para todos os schemas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de JSON Schema Draft 7 para compatibilidade e maturidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não especificado no schema"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não especificado no schema"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "Kubernetes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "PORT"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações de memória para payloads grandes"
        ]
      }
    ]
  },
  "src/interface/schemas/keyboard.schemas.ts": {
    "summary": "Este arquivo define JSON Schemas compatíveis com o Draft 7 para validação de requisições relacionadas a operações de teclado em um servidor Fastify. Ele especifica três schemas distintos para endpoints que lidam com digitação de texto, pressionamento de tecla única e combinação de teclas, garantindo que os dados recebidos estejam estruturados e validados conforme regras claras, como tipos, tamanhos e valores permitidos. A funcionalidade principal é assegurar a integridade e conformidade dos dados de entrada para ações de teclado automatizadas, facilitando a integração segura e previsível com sistemas que executam comandos de teclado programaticamente.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Keyboard Input Validation Service"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automation",
          "Input Simulation",
          "Keyboard Events"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Input data must be validated strictly to prevent injection or malformed commands"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Fastify 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Schema Validation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Schemas definidos em arquivos separados para validação clara e reutilizável"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para propriedades e PascalCase para constantes exportadas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Schemas isolados por funcionalidade para fácil manutenção e extensão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ com mocks para validação de schemas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 90% para validação de schemas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de requisições HTTP para testar validação"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes automatizados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Validação rápida e eficiente para não impactar latência"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Padrão JSON Schema Validation Error"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "json-schema",
          "Fastify"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação correta dos schemas e cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara via JSDoc para cada schema"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de JSON Schema Draft 7 para compatibilidade e padronização"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "NutJS-Desktop-Automation-API.postman_collection.json": {
    "summary": "Este arquivo define uma API REST completa para automação desktop utilizando NutJS, permitindo controle detalhado do mouse, teclado, operações de clipboard e captura/reconhecimento de tela. A API suporta comandos como movimentação, clique, arraste e scroll do mouse, digitação e combinação de teclas, manipulação do conteúdo da área de transferência, além de captura e busca de imagens na tela. Inclui autenticação via API key, testes automatizados para validação das respostas e endpoints para streaming em tempo real da posição do mouse, garantindo integração fluida e segura com sistemas externos. O design modular e orientado a comandos facilita a criação de fluxos de automação complexos, otimizando tarefas repetitivas e melhorando a produtividade em ambientes desktop.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "NutJS Desktop Automation API"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação Desktop",
          "Desktop Automation",
          "NutJS",
          "Mouse Control",
          "Keyboard Input",
          "Clipboard Operations",
          "Screen Capture"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Autenticação obrigatória via API key para todos os endpoints",
          "Validação rigorosa dos parâmetros de entrada para evitar comandos inválidos",
          "Tempo de resposta máximo de 5000ms para garantir performance",
          "Limite máximo de tamanho para textos e conteúdos manipulados (ex: 10.000 caracteres para digitação, 1MB para clipboard)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript (Node.js)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "NutJS"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "API key authentication",
          "Server-Sent Events (SSE) for streaming"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular REST API",
          "Command Pattern (para execução de comandos de automação)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "api/: endpoints REST organizados por domínio (mouse, keyboard, clipboard, screen, automation)",
          "events/: scripts para pré-requisição e testes",
          "auth/: gerenciamento de autenticação via API key"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para nomes de endpoints e propriedades JSON",
          "snake_case para variáveis internas não expostas",
          "Prefixo api/v1 para versionamento da API"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre operações de mouse, teclado, clipboard e tela",
          "Módulo de autenticação isolado",
          "Módulo de automação para execução de comandos compostos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para JavaScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de funções e endpoints"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "JavaScript dinâmico, sem tipagem estática explícita"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Postman Tests (JavaScript)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes integrados em cada endpoint via scripts Postman"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura de testes para sucesso e validação de campos essenciais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Assertions para propriedades de resposta e tempos de resposta"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Uso de variáveis de ambiente para simular API keys e URLs"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes automatizados aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "API Key via header HTTP"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Acesso negado para chaves inválidas ou ausentes"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Conteúdo do clipboard e textos digitados devem ser tratados com confidencialidade"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Type: application/json",
          "x-api-key para autenticação"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Recomenda-se uso de HTTPS para transporte seguro"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Respostas devem ocorrer em menos de 5000ms"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre velocidade de resposta e suavidade das operações (ex: smooth mouse movement)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável diretamente, operações em tempo real"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplas requisições simultâneas via API REST"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "JSON com campos success (boolean), error (string), code (string) e detalhes (array)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs de erros e requisições para auditoria e troubleshooting"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Validação prévia dos dados para evitar falhas, respostas claras para erros de validação e autenticação"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "NutJS",
          "Postman para testes",
          "Node.js runtime"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "API version v1 para endpoints"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de tipagem estática pode dificultar manutenção"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Limitações de performance em operações de captura e reconhecimento de tela"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Operações de screen capture e image recognition podem ser custosas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de segurança, performance e cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara dos parâmetros e respostas dos endpoints"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e uso de JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de API key para autenticação, modularização por domínio funcional"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Prefixo /api/v1 para versionamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON com campos success, data, error e code"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não especificado, mas recomendado para produção"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "localhost:3000 (desenvolvimento)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Node.js server, possível containerização via Docker"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "baseUrl",
          "apiKey"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Requer acesso ao desktop local para automação"
        ]
      }
    ]
  },
  "error.txt": {
    "summary": "Este arquivo representa a execução e logs de um servidor REST API desenvolvido em TypeScript, utilizando Node.js v24.0.1 e npm v11.3.0. O servidor é configurado para escutar requisições HTTP na porta 3000, porém as rotas esperadas para manipulação de eventos do mouse, como /mouse/move, /mouse/click, /mouse/scroll e /mouse/position, não estão implementadas, resultando em respostas 404 para todas as requisições recebidas. O comportamento central do código é iniciar o servidor, aceitar requisições HTTP e registrar logs detalhados de entrada, saída e tempo de resposta, evidenciando um padrão de API REST em desenvolvimento ou em fase inicial, com foco em automação de desktop via API. A ausência das rotas indica que o projeto está em estágio inicial ou que o roteamento ainda não foi configurado, mas a infraestrutura para receber e logar requisições está funcional, permitindo futuras implementações de endpoints para controle remoto do mouse via HTTP.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "nutjs-rest-api",
          "API para automação de desktop via controle de mouse"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de desktop",
          "Controle remoto de mouse",
          "API REST"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento inicial",
          "MVP"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Respostas HTTP corretas para rotas",
          "Logs completos para auditoria",
          "Disponibilidade do servidor"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x",
          "Node.js 24.0.1"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Possível Express ou Fastify (não explícito)",
          "tsx para execução"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm 11.3.0"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "REST API",
          "Modularização build/run"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ para código fonte",
          "dist/ para código compilado"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "kebab-case para scripts npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação entre código fonte e build",
          "Isolamento de rotas (ainda não implementadas)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript strict mode presumido"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "<= 25ms para requisições simples (observado)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade de resposta"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "HTTP status codes padrão (404 para rotas não encontradas)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logging estruturado com reqId, statusCode e responseTime"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Node.js 24.0.1",
          "TypeScript",
          "tsx"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Node.js >=24.0.1",
          "npm >=11.3.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Rotas não implementadas",
          "Falta de autenticação"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Todas as requisições retornam 404"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON (implícito)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev (localhost:3000)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  }
}

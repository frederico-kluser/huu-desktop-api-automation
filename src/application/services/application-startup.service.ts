/**
 * Servi√ßo de inicializa√ß√£o para configurar sistemas de captura de eventos
 * Inicia o GlobalInputCaptureService na inicializa√ß√£o da aplica√ß√£o
 */

import { injectable, inject } from 'tsyringe';
import { GlobalInputCaptureService } from './global-input-capture.service.js';
import { logger } from '../../config/logger.js';

@injectable()
export class ApplicationStartupService {
  constructor(
    @inject(GlobalInputCaptureService) private globalInputCapture: GlobalInputCaptureService,
  ) {}

  /**
   * Inicia todos os servi√ßos necess√°rios para a aplica√ß√£o
   */
  async initialize(): Promise<void> {
    logger.info('üöÄ Iniciando servi√ßos da aplica√ß√£o...');

    try {
      // Iniciar captura de eventos globais
      await this.globalInputCapture.start();

      logger.info('‚úÖ Aplica√ß√£o inicializada com sucesso');
    } catch (error) {
      logger.error('‚ùå Erro ao inicializar aplica√ß√£o:', error);
      throw error;
    }
  }

  /**
   * Para todos os servi√ßos da aplica√ß√£o
   */
  shutdown(): void {
    logger.info('üîÑ Parando servi√ßos da aplica√ß√£o...');

    try {
      // Parar captura de eventos globais
      this.globalInputCapture.stop();

      logger.info('‚úÖ Aplica√ß√£o finalizada com sucesso');
    } catch (error) {
      logger.error('‚ùå Erro ao finalizar aplica√ß√£o:', error);
      throw error;
    }
  }
}
